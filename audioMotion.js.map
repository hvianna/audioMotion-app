{"version":3,"file":"audioMotion.js","mappings":";UAAIA,4FCQEC,EAAwBC,SAASC,OAASD,SAASE,SACnDC,EAAwB,SAC3BC,EAAwB,aAAcC,OACtCC,EAAwBF,GAAc,UAAUG,KAAMC,UAAUC,WAChEC,IAA2BL,OAAOM,oBAClCC,EAAwB,kCACxBC,EAAwB,sEAGxBC,EAAY,EAGf,IACCC,EACAC,EACAC,EAIAC,EACAC,EACAC,EATGC,EAAoB,GAIvBC,EAAoB,KACpBC,EAAoB,GACpBC,GAAoB,EAIpBC,GAAoB,EACpBC,GAAoB,EAQrB,SAASC,EAAUC,EAASC,GAE3BX,EAAQY,UAAY,GACpBX,EAASW,UAAY,GACrBX,EAASY,MAAMC,gBAAkB,GAEjC,MAAMC,EAAc,CAAEC,EAAMC,KAC3B,MAAMC,EAAKC,SAASC,cAAc,MAC/BC,EAAWL,EAAKM,MAAQN,EAE3BE,EAAGK,QAAQN,KAA2C,OAApCI,EAASG,MAAM,kBAAqC,QAARP,EAAiB,OAASA,EACxFC,EAAGK,QAAQE,KAAOJ,EAClBH,EAAGQ,UAAYL,EACfH,EAAGS,OAASX,EAAKW,OAEjB1B,EAAS2B,OAAQV,EAAI,EAEhBW,EAAyBC,GAAO7B,EAASY,MAAMC,gBAAkB,2CAA8CgB,EAAM,UAAWA,MAAW,IAoBjJ,GAlBsB,GAAjBzB,EAAO0B,SACX/B,EAAQY,UAAYjB,GAGrBQ,EAAY6B,SAAS,EAAIC,OAAOC,KAC/BlC,EAAQY,WAAa,mBAAoBT,EAAY4B,OAASG,EAAQ,MAAOD,UAAa7C,EAAY,KAAc,KAAP6C,EAAa,GAAK,MAAO,IAIvI5B,EAAO2B,SAASG,IACflC,EAASW,WAAa,yBAA0BJ,IAAsBX,EAAmB,qBAAuB,iBAAkBsC,QAAYA,UAAc,IAIxJhC,EAAY4B,OAAS,IACzB9B,EAASW,WAAa,6DAGlBF,EAAU,CACd,MAAM,MAAE0B,EAAK,KAAEC,EAAI,MAAEC,GAAU5B,EAE1B2B,GACJA,EAAKL,SAASC,GAAOlB,EAAakB,EAAK,SAEnCK,GACJA,EAAMN,SAASO,GAAQxB,EAAawB,EAAM,UAEtC/B,GAAoB4B,EACxBA,EAAMT,OAAOa,UAAUC,MAAMC,IAC5B,MAAMC,EAASC,IAAIC,gBAAiBH,GACpCb,EAAwBc,EAAQ,IAKjCd,EAAwBO,EAAQU,EAAUV,GAAU,GACtD,CAGAnC,EAASU,UAAYA,GAAa,CACnC,CASA,SAASoC,EAAUC,EAAQrC,GAE1B,IAAIsC,EACHC,EACAvB,EAAWqB,GAA2B,iBAAVA,EAA4BA,EAAP,KAKlD,GAHKrB,IACJqB,EAASrB,EAAOL,MAEZ0B,EACJ,GAAe,MAAVA,EAAiB,CACrBC,EAAO9C,EAAYgD,MACnB,MAAMC,EAASjD,EAAaA,EAAY4B,OAAS,GAC5CqB,GAAUA,EAAOzB,SACrBA,EAASyB,EAAOzB,OAClB,MAECxB,EAAYkD,KAAM,CAAEpB,IAAKe,EAAQrC,UAAWV,EAASU,UAAWgB,WAOlE,OAJA1B,EAASW,UAAY,sBAErBsC,EAAMJ,IAEC,IAAIQ,SAASC,UAEnB,MAAMC,EAAe9C,KACH,IAAZA,IACGJ,IAAcE,IACpBE,EAAU+C,EAAgB/C,IAC3BD,EAAUC,EAASC,GAAesC,GAAQA,EAAKtC,WAC1CZ,GACJA,EAAkBI,GACnBuD,GAAS,IAEVA,GAAS,EAAO,EAGjB,GAAK7D,EAAmB,CAClB8B,IACJ9B,EAAmB8B,GAEpB,IAAIjB,EAAU,GACd,UAAY,MAAMiD,KAAK9D,EAAiB+D,UACvClD,EAAQ2C,KAAMM,GACfH,EAAc9C,EACf,MAECmD,MAAOX,GACLT,MAAMqB,GACkB,KAAnBA,EAASC,SACRzD,EACGwD,EAASE,OAETF,EAASG,UAIlBxB,MAAM/B,GAAW8C,EAAc9C,KAC/BwD,OAAO,IAAMR,GAAS,IACzB,GAEF,CAkCO,SAASZ,EAAUzB,EAAU8C,GAEnC,IAAIC,EAAW,GAmBf,OAjBAjE,EAAY6B,SAAS,EAAIC,UACxBmC,GAAYnC,GAAe,KAAPA,EAAa,GAAK,IAAK,IAGvCZ,IACJ+C,GAAY/C,GAEb+C,EAAWA,EAASC,QAAS,KAAM,OAE9BnF,GACJkF,EAAWA,EAASC,QAAS,MAAO,OAC7BF,IACNC,GAAa/C,EAAW,YAAc,YAAe+C,IAE7ClE,GAAcN,IACvBwE,EAAWvF,EAAauF,GAElBA,CACR,CAQO,SAASE,EAAmBC,EAAW,MAE7C,IAAIC,EAAW,GAMf,OAJAvE,EAASwE,iBAAkBF,GAAWvC,SAAS0C,IACzC,CAAC,OAAQ,QAAQC,SAAUD,EAAMnD,QAAQN,OAC7CuD,EAASnB,KAAM,CAAEd,KAAMO,EAAU4B,EAAMnD,QAAQE,MAAQE,OAAQ+C,EAAM/C,OAAQV,KAAMyD,EAAMnD,QAAQN,MAAQ,IAEpGuD,CACR,CAQOjB,eAAeqB,EAAW5F,GAChC,MAAM6F,EAAa,IAAK1E,GACrB2E,EAAa9F,EAAS+F,MAAM,KAE/B,IAAIpD,EAASkD,EAAUA,EAAS9C,OAAS,GAAIJ,OAE7C,KAAQmD,EAAW/C,OAAS,GAAI,CAC/B,MAAMiD,EAAUF,EAAWG,QACX,MAAXD,GACJH,EAAS1B,MACTxB,EAASkD,EAAUA,EAAS9C,OAAS,GAAIJ,SAGzCA,QAAeA,EAAOuD,mBAAoBF,GAC1CH,EAASxB,KAAM,CAAE1B,WAEnB,CAEA,aAAaA,EAAOwD,cAAeL,EAAWG,QAC/C,CAkCO,SAASG,EAAe1E,GAE9B,MAAMkD,EAAUlD,EAAQc,MAAO,kCAE/B,IAAI6D,EAAU,GAEd,IAAM,MAAMX,KAASd,EAAU,CAC9B,MAAQ,CAAE0B,EAAK/C,GAASmC,EAAMlD,MAAO,wCACrC6D,EAAQhC,KAAM,CAAEiC,MAAK/C,QACtB,CAEA,OAAO8C,CACR,CAQO,SAAS5B,EAAgB/C,GAE/B,MAAM6E,EAAkB,uCAExB,IAAIjD,EAAQ,GACXD,EAAQ,GACRmD,EAAQ,GAGT,MAAMC,EAAU,CAAEC,EAAKC,KACtB,MAAMC,EAAS,IAAIC,OAAQ,GAAGF,MAAYJ,EAAgBO,SAAU,KACpE,OAAOJ,EAAIK,MAAMC,IAAQA,EAAG1E,MAAQ0E,GAAKxE,MAAOoE,IAAU,EAG3D,GAAKpF,EACJ,IAAM,MAAQc,EAAMK,KAAYjB,EAC1BiB,aAAkBsE,0BACtB5D,EAAKgB,KAAM,CAAE/B,OAAMK,WACVA,aAAkBuE,uBACtB5E,EAAKE,MAAO+D,IAChBC,EAAKnC,KAAM,CAAE/B,OAAMK,WACfL,EAAKE,MAAOpB,IAChBkC,EAAMe,KAAM,CAAE/B,OAAMK,iBAKvB,IAAM,MAAM,IAAE2D,EAAG,KAAE/C,KAAU6C,EAAe1E,GACH,KAAnC4E,EAAIa,UAAWb,EAAIvD,OAAS,GACzBQ,EAAKf,MAAO,8BACwB,KAArCe,EAAK4D,UAAW5D,EAAKR,OAAS,GAClCM,EAAKgB,KAAMd,EAAK4D,UAAW,EAAG5D,EAAKR,OAAS,IAE5CM,EAAKgB,KAAMd,KAIRA,EAAKf,MAAO+D,IAChBC,EAAKnC,KAAMd,GACPA,EAAKf,MAAOpB,IAChBkC,EAAMe,KAAMd,IAKhB,MAEM6D,EAAa,CAAEC,EAAGC,KACvB,MACGC,EAAuB,iBAALF,EAErB,OAHiB,IAAIG,KAAKC,UAGVC,WAAcH,EAAW,CAAEF,EAAE/E,KAAMgF,EAAEhF,MAAS,CAAE+E,EAAGC,GAAO,EAG3E,MAAO,CAAElE,MATKqD,EAASD,EAAM,UAAaC,EAASD,EAAM,WAAcC,EAASD,EAAM,UAAaA,EAAK,GASxFnD,KAAMA,EAAKsE,KAAMP,GAAc9D,MAAOA,EAAMqE,KAAMP,GACnE,CAKO,SAASQ,IACf7D,EAAU,KAAM9C,EAASU,UAC1B,CAOO,SAASkG,EAAmBC,GAClC1G,EAAiB,IAAIyF,OAAQ,OAASiB,EAAgBC,KAAK,KAAO,KAAM,IACzE,CAQOxD,eAAeyD,EAASvF,GAC9B,IAAOA,EACN,OAAO,EAER,MAAMwF,EAAY,IAAK9G,GACpB+G,EAAYzF,EAAMA,EAAKM,OAAS,GAEnC5B,EAAcsB,EAETyF,GAAYA,EAASvF,SACzB9B,EAAmBqH,EAASvF,QAE7B,MAAMwF,QAAgBpE,IAKtB,OAHOoE,IACNhH,EAAc8G,GAERE,CACR,+DC7XA,KAAShF,MAAO,IAAI,MAOpB,MAAM,EAAc,aAAchD,OAC/B,EAAc,GAAc,UAAUE,KAAMC,UAAUC,WACtD6H,EAAc,YACdC,EAAc,aACdC,EAAc,cACd,EAAcxI,SAASC,OAASD,SAASE,SACzCuI,EAAc,KAEXC,EAAwB,EAAa,iBAAmB,cAC3DC,EAAwB,EACxBC,EAAwB,IAGrBC,EAAa,IAChBC,EAAa,IACbC,EAAa,IACbC,EAAa,IACbC,GAAa,IAGVC,GAAkB,IACrBC,GAAkB,IAClBC,GAAkB,IAGfC,GAAiB,IACpBC,GAAiB,IACjBC,GAAiB,IACjBC,GAAiB,IAGjBC,GAAiB,IACjBC,GAAiB,IACjBC,GAAiB,IAGdC,GAAmB,CACxBC,MAAO,GACPC,OAAQ,GACRC,MAAO,GACPzG,MAAO,GACP0G,SAAU,GACVvG,KAAM,GACNwG,QAAS,GACTC,MAAO,IAIFC,GAAqB,gBAExBC,GAAqB,SAIlBC,GAAiB,WACpBC,GAAiB,YACjBC,GAAiB,YAGdC,GAAY,GAGZC,GAAiB,CAAC,MAAM,OAAO,OAAO,OAAO,MAAM,MAAM,OAC5DC,GAAiB,CAAC,MAAM,OAAO,MAAM,MAAM,MAAM,OACjDC,GAAiB,CAAC,MAAM,QACxBC,GAAiB,CAAC,MAAM,MAAM,OAAO,MAAM,MAAM,OAIjDC,GAAkB,QAGfC,GAAqB,QACxBC,GAAqB,eACrBC,GAAqB,gBACrBC,GAAqB,iBACrBC,GAAqB,qBACrBC,GAAqB,iBACrBC,GAAqB,sBACrBC,GAAqB,kBACrBC,GAAqB,mBACrBC,GAAqB,mBACrBC,GAAqB,cACrBC,GAAqB,WACrBC,GAAqB,YACrBC,GAAqB,YACrBC,GAAqB,sBACrBC,GAAqB,MAIrBC,GAAmB,KACnBC,GAAmB,MAYnBC,GAAc,IACdC,GAAc,IAGXC,GAAkB,QACrBC,GAAkB,OAClBC,GAAkB,QAClBC,GAAkB,SAClBC,GAAkB,SAClBC,GAAkB,YAClBC,GAAkB,OAClBC,GAAkB,WAClBC,GAAkB,OAClBC,GAAkB,OAClBC,GAAkB,OAClBC,GAAkB,SAClBC,GAAkB,OAClBC,GAAkB,UAClBC,GAAkB,QAClBC,GAAkB,UAClBC,GAAkB,SAClBC,GAAkB,OAClBC,GAAkB,SAClBC,GAAkB,QAClBC,GAAkB,QAGfC,GAAe,OAElBC,GAAe,MAIZC,GAAgB,EACnBC,IAAiB,EAIdC,GAAqB,cACxBC,GAAqB,CACpBC,kBAAmBhD,GACrBiD,mBAAmB,GAQlBC,GAAc,IAKdC,GAAgB,iBAGbC,GAAK5L,SAAS6L,cAAcC,KAAM9L,UACrC+L,GAAK/L,SAASsD,iBAAiBwI,KAAM9L,UAGlCgM,GAAkBJ,GAAE,eACvBK,GAAkBL,GAAE,aACpBM,GAAkBN,GAAE,eACpBO,GAAkBP,GAAE,eACpBQ,GAAkBR,GAAE,YACpBS,GAAkBT,GAAE,cACpBU,GAAkBV,GAAE,eACpBW,GAAkBX,GAAE,eACpBY,GAAkBZ,GAAE,gBACpBa,GAAkBb,GAAE,iBACpBc,GAAkBd,GAAE,mBACpBe,GAAkBf,GAAE,eACpBgB,GAAkBhB,GAAE,iBACpBiB,GAAkBjB,GAAE,WACpBkB,GAAkBlB,GAAE,iBACpBmB,GAAkBnB,GAAE,gBACpBoB,GAAkBpB,GAAE,aACpBqB,GAAkBrB,GAAE,eACpBsB,GAAkBtB,GAAE,QACpBuB,GAAkBvB,GAAE,eACpBwB,GAAkBxB,GAAE,cACpByB,GAAkBzB,GAAE,aACpB0B,GAAkB1B,GAAE,kBACpB2B,GAAkB3B,GAAE,iBACpB4B,GAAkB5B,GAAE,gBACpB6B,GAAkB7B,GAAE,qBACpB8B,GAAkB9B,GAAE,eACpB+B,GAAkB/B,GAAE,eACpBgC,GAAkBhC,GAAE,oBACpBiC,GAAkBjC,GAAE,WACpBkC,GAAkBlC,GAAE,cACpBmC,GAAkBnC,GAAE,YACpBoC,GAAkBpC,GAAE,WACpBqC,GAAkBrC,GAAE,SACpBsC,GAAkBtC,GAAE,SACpBuC,GAAkBvC,GAAE,cACpBwC,GAAkBxC,GAAE,gBACpByC,GAAkBzC,GAAE,YACpB0C,GAAkB1C,GAAE,QACpB2C,GAAkB3C,GAAE,cACpB4C,GAAkB5C,GAAE,cACpB6C,GAAkB7C,GAAE,WACpB8C,GAAkB9C,GAAE,gBACpB+C,GAAkB/C,GAAE,aACpBgD,GAAkBhD,GAAE,aACpBiD,GAAkBjD,GAAE,WACpBkD,GAAkBlD,GAAE,WACpBmD,GAAkBnD,GAAE,eACpBoD,GAAkBpD,GAAE,aACpBqD,GAAkBrD,GAAE,eACpBsD,GAAkBtD,GAAE,WACpBuD,GAAkBvD,GAAE,WACpBwD,GAAkBxD,GAAE,gBACpByD,GAAkBzD,GAAE,eACpB0D,GAAkB1D,GAAE,eACpB2D,GAAkB3D,GAAE,eACpB4D,GAAkB5D,GAAE,cACpB6D,GAAkB7D,GAAE,cACpB8D,GAAkB9D,GAAE,WACpB+D,GAAY/D,GAAE,SACdgE,GAAkBhE,GAAE,eACpBiE,GAAkBjE,GAAE,kBACpBkE,GAAkBlE,GAAE,UACpBmE,GAAkBnE,GAAE,WACnBoE,GAAkBpE,GAAE,SACpBqE,GAAkBrE,GAAE,cAGlBsE,GAAU,CACf,CACCC,IAAK,OACLhQ,KAAM,gBACNiQ,QAAS,CACRC,WAAc,IAIhB,CACCF,IAAK,QACLhQ,KAAM,eACNiQ,QAAS,CACRE,UAAe,EACfC,UAAe,EACfC,WAAe9J,EACf+J,SAAe,IACfC,WAAe,GACfC,WAAe3J,GACf4J,cAAe7I,GACf8I,UAAe7I,GACf8I,QAAe,IACfC,QAAe,GACfC,UAAe7F,GACf8F,SAAe,UACfC,WAAe,EACfC,WAAe,EACfC,SAAe,EACfC,OAAe,EACfC,KAnKmB,IAoKnBC,WAAe,EACfC,YAAe,EACfC,OAAe,EACfpB,WAAe,EACfqB,OAAe/H,GACfgI,UAAe,EACfC,UAAe,EACfC,WAAe,EACfC,WAAe,EACfC,SAAe,EACfC,UAAe,EACfC,UAAevG,KAIjB,CACCyE,IAAK,UACLhQ,KAAM,mBACNiQ,QAAS,CACRE,UAAe,EACfC,UAAe,EACfC,WAAe9J,EACf+J,SAAe,IACfC,WAAe,GACfC,WAAe1J,GACf2J,cAAe7I,GACf8I,UAAe7I,GACf8I,QAAe,IACfC,QAAe,GACfC,UAAe7F,GACf8F,SAAe,UACfC,WAAe,EACfC,WAAe,EACfC,SAAe,EACfI,YAAe,EACfH,OAAe,EACfC,KA5MmB,IA6MnBC,WAAe,EACfE,OAAe,EACfpB,WAAe,EACfqB,OAxMiB,IAyMjBC,UAAe,EACfC,UAAe,EACfC,WAAe,EACfC,WAAe,EACfC,SAAe,EACfC,UAAe,EACfC,UAAevG,KAIjB,CACCyE,IAAK,OACLhQ,KAAM,oDACNiQ,QAAS,CACRG,UAAe,EACfC,WAAe9J,EACfgK,WAAe,GACfC,WAAe1J,GACf2J,cAAe9I,GACf+I,UAAe7I,GACfkK,UAAe,GACfpB,QAAe,IACfC,QAAe,GACfC,UAAe9F,GACf+F,SAAe,OACfkB,cAAe,OACfhB,WAAe,EACfiB,UAAe,IACfC,UAAe,EACfhB,OAAe,EACfC,KAAe5H,GACf6H,WAAe,EACfE,OAAe,EACfpB,WAAe,EACfqB,OA3OiB,IA4OjBE,UAAe,EACfC,WAAe,EACfC,WAAe,EACfC,SAAe,EACfC,UAAe,EACfC,UAAevG,KAIjB,CACCyE,IAAK,SACLhQ,KAAM,wBACNiQ,QAAS,CACRE,UAAe,EACfC,UAAe,EACfC,WAAe9J,EACf+J,SAAe,GACfC,WAAe,GACfC,WAAexJ,GACfyJ,cAAe7I,GACf8I,UAAe3I,GACf4I,QAAe,IACfC,QAAe,GACfC,UAAe7F,GACf8F,SAAe,QACfC,WAAe,EACfC,WAAe,EACfC,SAAe,EACfC,OAAe,EACfC,KAhRmB,IAiRnBC,WAAe,EACfC,YAAe,EACfC,OAAe,EACfpB,WAAe,EACfuB,UAAe,EACfC,WAAe,EACfC,WAAe,EACfC,SAAe,EACfO,KAAe,EACfN,UAAe,EACfC,UAAevG,KAIjB,CACCyE,IAAK,QACLhQ,KAAM,oBACNiQ,QAAS,CACRE,UAAe,EACfE,WAAe9J,EACf+J,SAAe,IACfC,WAAe,GACfC,WAAetJ,GACfuJ,cAAe7I,GACf8I,UAAe5I,GACf6I,QAAe,IACfC,QAAe,GACfC,UAAe7F,GACf8F,SAAe,QACfC,WAAe,EACfC,WAAe,EACfC,SAAe,EACfC,OAAe,EACfC,KAhTmB,IAiTnBC,WAAe,EACfC,YAAe,EACfC,OAAe,EACfpB,WAAe,EACfqB,OAAe9H,GACf+H,UAAe,EACfC,UAAe,EACfC,WAAe,EACfC,WAAe,EACfC,SAAe,EACfC,UAAe,EACfC,UAAevG,KAIjB,CACCyE,IAAK,OACLhQ,KAAM,eACNiQ,QAAS,CAAC,GAGX,CACCD,IAAK,UACLhQ,KAAM,mBACNiQ,QAAS,CACRE,UAAe,EACfC,UAAe,EACfC,WAAehK,EACf+L,QAAe,EACf9B,SAAe,GACfC,WAAe,GACfC,WAAe1J,GACf2J,cAAe7I,GACf8I,UAAe7I,GACfkK,UAAe,GACfpB,QAAe,IACfC,QAAe,GACfC,UAAe7F,GACf8F,SAAe,QACfkB,cAAe,QACfjB,WAAe,EACfC,WAAe,EACfiB,UAAe,EACfC,UAAe,EACfG,MAAe,EACfpB,SAAe,EACfC,OAAe,EACfC,KAxWsB,IAyWtBmB,SAAe,EACflB,WAAe,EACfC,YAAe,EACfC,OAAe,EACfpB,WAAe,EACfqB,OAjWiB,IAkWjBgB,OAAe,EACff,UAAe,EACfgB,YAAe,EACfC,QAAe,EACfhB,UAAe,EACfC,WAAe,EACfC,WAAe,EACfC,SAAe,EACfO,KAAe,EACfN,UAAe,EACfa,OAAe,EACfZ,UA/TiB,MAqUda,GAAY,CACjBC,MAAU,CAAE5S,KAAM,WAAY6S,WAAY,CACvC,CAAEC,IAAK,MAAOC,MAAO,WACrB,CAAED,IAAK,MAAOC,MAAO,WACrB,CAAED,IAAK,GAAIC,MAAO,WAClB,CAAED,IAAK,MAAOC,MAAO,WACrB,CAAED,IAAK,MAAOC,MAAO,WACrB,CAAED,IAAK,EAAGC,MAAO,YACbC,UAAU,GACjBC,OAAU,CAAEjT,KAAM,SAAUkT,QAAS,UAAWL,WAAY,CACzD,CAAEC,IAAK,GAAIC,MAAO,yBAClB,CAAED,IAAM,EAAGC,MAAO,0BACdC,UAAU,GACjBG,SAAW,CAAEnT,KAAM,WAAYkT,QAAS,UAAWL,WAAY,CAC5D,CAAEC,IAAK,GAAIC,MAAO,yBAClB,CAAED,IAAK,GAAIC,MAAO,yBAClB,CAAED,IAAM,EAAGC,MAAO,yBACdC,UAAU,GACjBI,MAAU,CAAEpT,KAAM,QAASkT,QAAS,UAAWL,WAAY,CACxD,CAAEC,IAAK,GAAIC,MAAO,WAClB,CAAED,IAAK,GAAIC,MAAO,WAClB,CAAED,IAAK,EAAGC,MAAO,YACbC,UAAU,GACjBK,QAAU,CAAErT,KAAM,UAAWgT,UAAU,GACvCM,KAAU,CAAEtT,KAAM,OAAQkT,QAAS,UAAWL,WAAY,CACvD,uBACA,yBACIG,UAAU,GACjBO,KAAU,CAAEvT,KAAM,OAAQkT,QAAS,UAAWL,WAAY,CACvD,CAAEC,IAAK,GAAIC,MAAO,wBAClB,CAAED,IAAM,EAAGC,MAAO,yBACdC,UAAU,GACjBQ,MAAU,CAAExT,KAAM,QAASkT,QAAS,UAAWL,WAAY,CACxD,CAAEC,IAAK,KAAMC,MAAO,sBACpB,CAAED,IAAK,KAAMC,MAAO,sBACpB,CAAED,IAAK,KAAMC,MAAO,uBACpB,CAAED,IAAK,KAAMC,MAAO,uBACpB,CAAED,IAAK,EAAGC,MAAO,uBACbC,UAAU,GACjBS,OAAU,CAAEzT,KAAM,SAAUkT,QAAS,OAAQL,WAAY,CACtD,CAAEC,IAAK,GAAIC,MAAO,QAClB,CAAED,IAAK,EAAGC,MAAO,SACbC,UAAU,GACjBU,OAAU,CAAE1T,KAAM,SAAUkT,QAAS,OAAQL,WAAY,CACtD,CAAEC,IAAK,EAAGC,MAAO,uBACjB,CAAED,IAAK,KAAMC,MAAO,uBACpB,CAAED,IAAK,KAAMC,MAAO,uBACpB,CAAED,IAAK,KAAMC,MAAO,uBACpB,CAAED,IAAK,KAAMC,MAAO,uBACpB,CAAED,IAAK,EAAGC,MAAO,wBACbC,UAAU,GACjBW,QAAU,CAAE3T,KAAM,gBAAiBkT,QAAS,UAAWL,WAAY,CAChE,CAAEC,IAAK,GAAIC,MAAO,WAClB,CAAED,IAAK,EAAGC,MAAO,YACbC,UAAU,GACjBY,MAAU,CAAE5T,KAAM,QAASgT,UAAU,GACrCa,UAAW,CAAE7T,KAAM,iBAAkB6S,WAAY,CAC9C,sBACA,uBACA,wBACA,wBACA,yBACIG,UAAU,GACjBc,QAAU,CAAE9T,KAAM,UAAWgT,UAAU,GACvCe,YAAa,CAAE/T,KAAM,mBAAoBW,IAAK,IAAKkS,WAAY,CAC5D,sBACA,uBACA,wBACA,wBACA,wBACA,wBACA,yBACIG,UAAU,GACjBgB,QAAU,CAAEhU,KAAM,UAAWkT,QAAS,UAAWL,WAAY,CAC1D,CAAEC,IAAK,GAAIC,MAAO,WAClB,CAAED,IAAK,EAAGC,MAAO,YACbC,UAAU,GACjBiB,OAAU,CAAEjU,KAAM,SAAUkT,QAAS,UAAWL,WAAY,CACzD,CAAEC,IAAK,GAAIC,MAAO,WAClB,CAAED,IAAK,EAAGC,MAAO,YACbC,UAAU,GACjBkB,OAAU,CAAElU,KAAM,SAAUkT,QAAS,UAAWL,WAAY,CACzD,CAAEC,IAAK,GAAIC,MAAO,WAClB,CAAED,IAAK,EAAGC,MAAO,YACbC,UAAU,GACjBmB,OAAU,CAAEnU,KAAM,UAAW6S,WAAY,CACtC,CAAEC,IAAK,KAAMC,MAAO,uBACpB,CAAED,IAAK,KAAMC,MAAO,uBACpB,CAAED,IAAK,KAAMC,MAAO,uBACpB,CAAED,IAAK,KAAMC,MAAO,uBACpB,CAAED,IAAK,KAAMC,MAAO,yBAChBC,UAAU,IAIZoB,GAAc,CACnB,CAAEC,MAhesB,IAgeG1R,KAAM,uBAA2BqQ,UAAU,GACtE,CAAEqB,MAAO/K,GAAkB3G,KAAM,aAA2BqQ,UAAU,GACtE,CAAEqB,MAAO9K,GAAkB5G,KAAM,aAA2BqQ,UAAU,GACtE,CAAEqB,MAhemB,IAgeM1R,KAAM,0BAA2BqQ,UAAU,GACtE,CAAEqB,MAhemB,IAgeM1R,KAAM,wBAA2BqQ,UAAU,GACtE,CAAEqB,MAhemB,IAgeM1R,KAAM,wBAA2BqQ,UAAU,GACtE,CAAEqB,MAhemB,IAgeM1R,KAAM,wBAA2BqQ,UAAU,GACtE,CAAEqB,MAhemB,IAgeM1R,KAAM,wBAA2BqQ,UAAU,GACtE,CAAEqB,MAhemB,IAgeM1R,KAAM,wBAA2BqQ,UAAU,GACtE,CAAEqB,MAhemB,IAgeM1R,KAAM,0BAA2BqQ,UAAU,GACtE,CAAEqB,MAhemB,IAgeM1R,KAAM,0BAA2BqQ,UAAU,IAIjEsB,GAAuB,CAC5B,CAAE1M,GAAoB,SACtB,CAAED,GAAoB,QACtB,CA1hBwB,kBA0hBF,SACtB,CAzhBuB,gBAyhBD,SAIjB4M,GAAmB,CACxB,CAAEF,MAAO3K,GAAiB/G,KAAM,QAAkBqQ,UAAU,GAC5D,CAAEqB,MAAO/J,GAAiB3H,KAAM,gBAAkBqQ,UAAU,GAC5D,CAAEqB,MAAO1K,GAAiBhH,KAAM,aAAkBqQ,UAAU,GAC5D,CAAEqB,MAAOzK,GAAiBjH,KAAM,cAAkBqQ,UAAU,GAC5D,CAAEqB,MAAOxK,GAAiBlH,KAAM,eAAkBqQ,UAAU,GAC5D,CAAEqB,MAAOvK,GAAiBnH,KAAM,iBAAkBqQ,UAAU,GAC5D,CAAEqB,MAAOtK,GAAiBpH,KAAM,aAAkBqQ,UAAU,GAC5D,CAAEqB,MAAOrK,GAAiBrH,KAAM,eAAkBqQ,UAAU,GAC5D,CAAEqB,MAAOpK,GAAiBtH,KAAM,YAAkBqQ,UAAU,GAC5D,CAAEqB,MAAOnK,GAAiBvH,KAAM,OAAkBqQ,UAAU,GAC5D,CAAEqB,MAAOlK,GAAiBxH,KAAM,aAAkBqQ,UAAU,GAC5D,CAAEqB,MAAOjK,GAAiBzH,KAAM,OAAkBqQ,UAAU,GAC5D,CAAEqB,MAAOhK,GAAiB1H,KAAM,SAAkBqQ,UAAU,GAC5D,CAAEqB,MAAO9J,GAAiB5H,KAAM,UAAkBqQ,UAAU,GAC5D,CAAEqB,MAAO7J,GAAiB7H,KAAM,QAAkBqQ,UAAU,GAC5D,CAAEqB,MAAO3J,GAAiB/H,KAAM,SAAkBqQ,UAAU,GAC5D,CAAEqB,MAAO1J,GAAiBhI,KAAM,cAAkBqQ,UAAU,GAC5D,CAAEqB,MAAOzJ,GAAiBjI,KAAM,SAAkBqQ,UAAU,GAC5D,CAAEqB,MAAOxJ,GAAiBlI,KAAM,QAAkBqQ,UAAU,GAC5D,CAAEqB,MAAOvJ,GAAiBnI,KAAM,QAAkBqQ,UAAU,GAC5D,CAAEqB,MAAO5J,GAAiB9H,KAAM,eAAkBqQ,UAAU,IAIvDwB,GAAsB,CAC3B,CAAEC,KAAM,GAAKC,KAAM,GAAIC,MAAO,GAC9B,CAAEF,KAAM,GAAKC,KAAM,GAAIC,MAAO,KAC9B,CAAEF,KAAM,IAAKC,KAAM,GAAIC,MAAO,MAIzBC,GAAsB,CAC3BC,KAAQ,EACRC,MAAQ,GACRC,IAAQ,GACRC,QAAQ,EACRC,OAAQ,GAIHC,GAAe,CACpB,CAAEb,MAAOxN,GAAgBlE,KAAM,SAAeqQ,UAAU,GACxD,CAAEqB,MAAOvN,GAAgBnE,KAAM,SAAeqQ,UAAU,GACxD,CAAEqB,MAAOrN,GAAgBrE,KAAM,QAAeqQ,UAAU,GACxD,CAAEqB,MAAOtN,GAAgBpE,KAAM,SAAeqQ,UAAU,GACxD,CAAEqB,MAAOpN,GAAgBtE,KAAM,OAAeqQ,UAAU,GACxD,CAAEqB,MAAOnN,GAAgBvE,KAAM,aAAeqQ,UAAU,GACxD,CAAEqB,MAAOlN,GAAgBxE,KAAM,WAAeqQ,UAAU,GACxD,CAAEqB,MApmBiB,IAomBM1R,KAAM,UAAeqQ,UAAU,GACxD,CAAEqB,MApmBiB,IAomBM1R,KAAM,WAAeqQ,UAAU,IAInDmC,GAAyB,CAAE9I,GAAcC,GAAcK,GAAeE,GAAWI,GAAYW,GAAUQ,GAAYS,GAAWC,GAAaQ,IAE3I8F,GAAyB,CAC9BC,WAAa1O,GACb2O,WAAa,GACbC,aAAa,EACbC,QAAa,KACbC,SAAa,IACbC,OAAa,GACbC,SAAa,KACbC,SAAa,EACbC,WAAa,EACbC,UAAa,IAGRC,GAAgB,CACrB,CAAE,GAAI,MACN,CAAE,GAAI,MACN,CAAE,EAAG,cAGAC,GAAkB,CACvB,CAAE,EAAG,OACL,CAAE,KAAM,OACR,CAAE,KAAM,QACR,CAAE,KAAM,UACR,CAAE,KAAM,SAIT,IACCC,GAGAC,GACAC,GAEAC,GAEA,GAEAC,GACAC,GACAC,GAEAC,GACAC,GACAC,GACAC,GACA,GAEA,GACA,GACAC,GAEAC,GAzBGC,GAAe,GAElBC,GAAW,GACXC,GAAW,GAGXC,GAAkB,KAElBC,GAAe,CAAC,EAEhBC,IAAe,EAIfC,IAAkB,EAMlBC,IAAW,EAIXC,GAAkB,EAGnB,MAAMC,GAAapJ,GAAMqJ,WAAW,MACjCC,GAAa,IAAIC,MACjBC,GAAa9X,SAASC,cAAc,SAMjC8X,GAAgB,CAAEzX,EAAM0X,IAAc1X,EAAK4C,QAAS,YAAa8U,GAAY,EAAY,KAAO,KAGhGC,GAAgB3X,GAAQA,EAAK4C,QAAS,MAAO,OAG7CgV,GAAc1D,GAAS2D,KAAKC,MAAe,IAAR5D,GAAgB,IAGnD6D,GAAWC,IAChB,IAAOA,EACN,OACD,IAAIC,EAAI,EACR,KAAQD,EAAOA,EAAKE,wBACnBD,IACD,OAAOA,CAAC,EAIHE,GAAU5T,IACf,IAAI/B,EAAO,GACX,GAAK4V,GAAe7T,GAAO,CAC1B,MAAM8T,EAAS9T,EAAGgH,cAAc,oBAC3B8M,IACJ7V,EAAO6V,EAAOC,YAChB,MAEC9V,EAAO+B,EAAIA,EAAGgU,eAAgB/V,KAC/B,OAAOA,CAAI,EAINgW,GAAkBjU,GAClB6T,GAAe7T,GACZA,EAAGkU,SAAUlU,EAAGzE,QAAQ4Y,MAAOxE,WACZyE,IAAtBpU,EAAGzE,QAAQ8Y,OACRrU,EAAGzE,QAAQ8Y,OACZrU,EAAG2P,MAIL2E,GAAqBC,IAAK,CAC/B9I,UAAewI,GAAiB9M,IAChCuE,UAAeuI,GAAiB5M,IAChCsE,WAAesI,GAAiB3M,IAChCsE,SAAeqI,GAAiBzM,IAChCqE,WAAeoI,GAAiBxM,IAChCqE,WAAemI,GAAiBvM,IAChCqE,cAAekI,GAAiBpM,IAChCmE,UAAeiI,GAAiBnM,IAChCuF,UAAe4G,GAAiB7L,IAChC6D,QAAYgI,GAAiBnK,IAC7BoC,QAAY+H,GAAiBlK,IAC7BoC,UAAe8H,GAAiB3L,IAChC8D,SAAY6H,GAAiBzL,IAC7B8E,cAAe2G,GAAiBxL,IAChC4D,WAAe4H,GAAiBtL,IAChC2D,WAAe2H,GAAiBrL,IAChC2E,UAAe0G,GAAiBpL,IAChC2E,UAAeyG,GAAiBnL,IAChC6E,MAAesG,GAAiBjL,IAChCuD,SAAe0H,GAAiBhL,IAChCuD,OAAeyH,GAAiB9K,IAChCsD,KAAewH,GAAiB7K,IAChCwE,SAAeqG,GAAiB3K,IAChCoD,WAAeuH,GAAiB1K,IAChCoD,YAAesH,GAAiBzK,IAChCoD,OAAeqH,GAAiBrK,IAChC4B,WAAeyI,GAAiBpK,IAChCgD,OAAeoH,GAAiBjK,IAChC6D,OAAeoG,GAAiBhK,IAChC6C,UAAemH,GAAiB/J,IAChC4D,YAAemG,GAAiB1J,IAChCwD,QAAekG,GAAiB5L,IAChC0E,UAAckH,GAAiBvJ,IAC/BsC,WAAeiH,GAAiB5J,IAChC4C,WAAegH,GAAiB3J,IAChC4C,SAAe+G,GAAiBtJ,IAChC8C,KAAewG,GAAiBnJ,IAChCqC,UAAe8G,GAAiBlJ,IAChCqC,UAAe6G,GAAiB7I,MAI3BoJ,GAAiBlJ,IACtB,MAAMpP,GAAWoP,GAAOA,EAAQA,EAAMD,GAAQoJ,WAAWzZ,GAAQA,EAAKsQ,KAAOA,IAC7E,OAASpP,EAAQ,GAAKA,EAAQmP,GAAQtP,OAAS,GAAO,EAAIG,CAAK,EAI1DwY,GAAYpJ,IACjB,MAAMpP,EAAQsY,GAAgBlJ,GAC9B,OAAmB,GAAVpP,EAAgB,CAAC,EAAImP,GAASnP,GAAQqP,OAAO,EAIjDoJ,GAAgBrJ,IACrB,MAAMpP,EAAQsY,GAAgBlJ,GAC9B,OAAmB,GAAVpP,GAAwBmP,GAASnP,GAAQZ,IAAI,EAIjDsZ,GAAuB,KAC5B,MAAMC,EAASZ,GAAiBpM,KAAiB3E,KAAoB4R,GAAYhM,IACjF,MAAO,WAAY+L,EAAS,IAAM,OAAQ5G,GAAWzF,GAAWmH,OAAQrU,MAASuZ,EAAS,MAAQ5G,GAAWxF,GAAgBkH,OAAQrU,KAAO,KAAO,EAY9IyZ,GAAiB,IAAM7C,GAAY8C,KAAK,CAAEha,EAAMkB,IAAW,YAAaA,EAAQ,qBAAuB+Y,GAASja,GAAS,oCAA6CA,EAAKM,MAAQwL,OAGnLoO,GAASpZ,GAAOA,EAAIqZ,WAAW,SAG/BtB,GAAgB7T,GAAoB,QAAdA,EAAGoV,SAAwChB,MAAnBpU,EAAGzE,QAAQ4Y,KAGzDkB,GAAgB5Z,GAAQA,EAAK0Z,WAAW,UAAa1Z,EAAK0Z,WAAY,GAGtEF,GAAUK,IAASA,GAAqB,iBAAPA,IAAqBC,OAAOC,KAAMF,GAAMvZ,OAGzE0Z,GAAQlB,GAAKxM,GAAY2N,UAAUC,SAAS,OAG5CC,GAAY,CAAEC,EAAUzD,GAAcX,MAAiBoE,GAAWA,EAAQC,YAAc,IAAOD,EAAQE,SAAYF,EAAQG,MAG3HlB,GAAa9U,GAA2B,KAArBA,EAAGzE,QAAQ8Y,OAG9B4B,GAAmBxa,GAAuB,iBAARA,EAAmBA,EAAK4C,QAAS,MAAO,KAAQ5C,EAGlFya,GAAQlW,GAAM8U,GAAY9U,GAAO,KAAO,MAGxCmW,GAAY7W,IACjB,MAAMlB,EAAYgY,GAAsB9W,GACrC+W,EAAYjY,EAASkY,YAAY,KAAO,EACxC7a,EAAY2C,EAASmY,MAAO,EAAGF,GAC/Bhb,EAAY+C,EAASmY,MAAOF,GAC5BG,EAAYnb,EAASib,YAAY,KACjCG,EAAYD,GAAW,EAAInb,EAASkb,MAAO,EAAGC,GAAYnb,EAC1Dqb,EAAYF,GAAW,EAAInb,EAASkb,MAAOC,EAAU,GAAIG,cAAgB,GAE5E,MAAO,CAAElb,OAAMJ,WAAUob,WAAUC,YAAW,EAIzCE,GAAiBtb,IACtBA,EAAOA,EAAK+C,QAAS,KAAM,KAG3B,MAAQ,CAAC,CAAEyE,EAAU+T,EAAU,CAAEjU,EAAQI,GAAU1H,EAAKE,MAAO,6CAC/D,MAAO,CAAEoH,SAAQI,QAAOF,SAAuB,KAAb+T,EAAmBC,GAAehU,GAAa,GAAI,EAIhFiU,GAAYtb,IACZ,IAAgB4Z,GAAe5Z,KAC9BA,EAAK0Z,WAAY/T,KACrB3F,EAAOA,EAAK8a,MAAOnV,IACpB3F,EAAO2F,EAAagS,GAAe3X,IAE7BA,GAIFub,GAAczC,GAAKxC,GAASkF,SAASlb,OAGrCmb,GAAY,CAAEC,EAAI,IAAO7D,KAAK8D,SAAWD,EAAI,EAG7Cf,GAAuB9W,IAC5B,MAAMM,EAAS,IAAIC,OAAQ,IAAKuB,KAChC,OAAO6U,GAAkB/C,GAAe5T,EAAIjB,QAASuB,EAAQ,KAAQ,EAIhEyX,GAAc5b,IACd,IACJ,QAAK8I,GAAc9I,GACV,IAAc+K,IACvB8Q,GAAe/S,GAAc9I,EAAM,EAI/Bqb,GAAgBS,IACrB,GAAKA,GAAQC,MAAqB,GAATD,EACxB,MAAO,OAER,IAAIE,EAAO,GACVC,EAAO,GAUR,OARKH,GAAQ,OACZE,GAAQF,EAAO,KAAO,GAAM,IAC5BA,GAAQ,KACRG,EAAO,KAGRD,IAASC,GAASH,EAAO,GAAK,IAAMhB,OAAO,GAAK,KAAQ,KAAQgB,EAAO,GAAK,IAAMhB,OAAO,GAElFkB,CAAG,EAILE,GAAe,CAAEC,EAAS7H,EAAKC,EAAK6H,EAAO,KAChDD,EAAQ7H,IAAOA,EACf6H,EAAQ5H,IAAOA,EACf4H,EAAQC,KAAOA,CAAI,EAWpB,SAASC,GAAqBxb,EAAOyb,GAAW,GAC/C,MAAMC,EAAW1b,EAAM0Y,KAAKtW,GAASuZ,GAAgBvZ,EAAOqZ,KAC5Dza,QAAQ4a,IAAKF,GAAWvb,MAAM0b,IAC7B,MAAMC,EAAQD,EAAME,QAAQ,CAAEC,EAAKC,IAASD,EAAMC,GAAK,GACpDta,EAAQ,GAAGma,SAAcA,EAAQ,EAAI,IAAM,wBAA0BpB,KAAgBtV,EAAmB,GAAK,qBAChH,UAAY,CAAEzD,OAAMua,KAAM,IAC1BC,IAAgB,EAAM,GAExB,CAKA,SAASC,GAAaC,EAAU3b,GAC/B,MAAM4b,EAAa5b,EAAOzB,QACvBsd,EAAaF,EAASpd,QACtBud,EAAaH,EAASG,OACtBC,EAAaJ,EAASI,OAEzB,GAAKF,EACJtD,OAAOyD,OAAQJ,EAAWC,QA2B1B,GAxBAD,EAAUhW,OAASkW,EAAOlW,QAAUgW,EAAUhW,OAC9CgW,EAAU5V,MAAS8V,EAAO9V,OAAS4V,EAAU5V,MAC7C4V,EAAUjW,MAASmW,EAAOnW,MAAQmW,EAAOnW,OAAUmW,EAAOG,KAAO,KAAOH,EAAOG,KAAO,IAAM,IAAO,GACnGL,EAAU/V,MAASkW,EAASA,EAAOlW,OAASkW,EAAOG,UAAYN,EAAU/V,MAMpEkW,IAAYA,EAAOI,eAAmBJ,EAAOK,aAAgBL,EAAOM,SACxET,EAAU7V,SAAYgW,EAAOK,YAAeL,EAAOK,WAAa,IAAO,GAAM,MAAQ,KAC3EL,EAAOK,YAAcL,EAAOI,cAAgB,MAAQ,KACpDJ,EAAOI,cAAgBJ,EAAOI,cAAgB,OAAS,IAExDJ,GAAUA,EAAOM,QAC1BT,EAAU7V,SAAYgW,EAAOM,QAAU,IAAO,GAAM,MAASN,EAAOO,cAAgB,IAEpFV,EAAU7V,QAAU,GAEhBgW,GAAUA,EAAOjW,SACrB8V,EAAU9V,SAAWgU,GAAeiC,EAAOjW,UAE3C8V,EAAU9V,SAAW,GAEjBgW,EAAOS,SAAWT,EAAOS,QAAQxd,OAAS,CAC9C,MAAMyd,EAAO,IAAIC,KAAM,CAAEX,EAAOS,QAAQ,GAAGG,MAAQ,CAAEze,KAAM6d,EAAOS,QAAQ,GAAGR,SAC7EH,EAAUxc,MAAQQ,IAAIC,gBAAiB2c,EACxC,CAGIxc,GAAUoV,GAAcX,KAC5BkI,IACF,CAMA,SAASC,GAAoBC,EAAYnf,EAAU,CAAC,EAAGqd,GAEtD,OAAO,IAAIza,SAASI,IACdsZ,MAAiBtV,GACrBhE,EAAQ,GAET,IAAI4B,EAAM2W,GAAkB4D,EAAWtd,MAGvC,MAAMA,EAAO2W,GAAe5T,GAAMP,MAAM,KAAK5B,MAC1C2c,EAAOvd,EAAKwC,MAAM,KAAK5B,MAGpB4c,EAAY5e,SAASC,cAAc,MACtCwd,EAAYmB,EAAMxe,QAErBga,OAAOyD,OAAQJ,EAAWlW,IAE1BkW,EAAUhW,OAAWlI,EAAQkI,QAAU,GACvCgW,EAAU5V,MAAWtI,EAAQsI,OAASzG,EAAK8B,QAAS,OAAQ,MAASiB,EAAIiX,MAAOjX,EAAIgX,YAAY,MAAQ,GACxGsC,EAAU9V,SAAWpI,EAAQoI,UAAY,GACzC8V,EAAU/V,MAAaiX,IAAQvd,EAASud,EAAIE,cAAgB,GAE5DD,EAAMpe,OAASke,EAAWle,OAG1B2D,EAAMA,EAAIjB,QAAS,KAAM,OACzBua,EAAUrc,KAAO+C,EAEjByS,GAASkI,YAAaF,GAEfrW,GAAe/E,SAAUmb,KAE/BlB,EAAUsB,SAAW,EACrBC,OAGMpC,GAA6B,GAAjBf,MAA0BpB,KAG5ClY,EAAQ,GAFR0c,GAAU,EAAGrC,GAAWtb,MAAM,IAAMiB,EAAQ,KAIxCsU,GAAcgF,KAAgB,GAClCqD,IAAc,GAEjB,CAKA,SAASpC,GAAgB4B,EAAY9B,GAAW,GAE/C,IAAIuC,EAaJ,OAVCA,EADI7W,GAAe9E,SAAUwX,GAAW0D,EAAWtd,MAAOma,WACpD6D,GAAcV,EAAY9B,GAE1B6B,GAAoBC,EAAYjD,GAAgBT,GAAW0D,EAAWtd,MAAOka,UAAYsB,GAGhGuC,EAAI7d,MAAM0a,IACJY,IAAcnC,MAAeuB,EAAI,GACrCqD,GAAUxD,KAAgBG,EAAG,IAGxBmD,CACR,CAKA,SAASG,GAAeC,GACvB,IAAIC,EAASD,EAAOrH,KAAgB9L,GAAUhM,QAAQoU,OAAS,GAAa,GAAP+K,GAAc,EAE9EC,GAAU,EACdA,GAAU,EACDA,EAAS,IAClBA,EAAS,GAEVC,GAAYD,GACZE,GAAc,aAAuB,GAAVF,EAAc,SAAkC,IAArBrH,KAAKwH,IAAKH,GAAmB,MAASA,EAAS,EAAI,QAAU,UACnHI,IACD,CAKA,SAASC,GAAgBN,GACxB,MAAMnC,GAAOhQ,GAAWoH,OAEX,GAAR+K,GAAanC,GAAOhQ,GAAWyH,MAAgB,GAAT0K,GAAcnC,GAAOhQ,GAAWwH,OAC1ExH,GAAWoH,MAAQ4I,EAAMhQ,GAAWsP,KAAO6C,EAC3CO,GAAa1S,KAEdsS,GAAc,oBAAqBtS,GAAWoH,SAC/C,CAKA,SAASuL,GAAcR,GACtB,IAAIC,EAAStH,KAAgBnI,GAAS3P,QAAQoU,OAAS,GAAa,IAAP+K,GAExDC,EAAS,EACbA,EAAS,EACAA,EAAS,IAClBA,EAAS,GAEVQ,GAAWR,GACXE,GAAc,WAAqB,GAATF,GAC1BI,IACD,CAKA,SAASK,GAAmBjE,EAAI1F,IAC/B,MAAMoE,EAAYzD,GAAc+E,GAC7ByB,EAAY/C,EAAQta,QAEvB8f,GAAiBxF,EAAS,MAC1BN,OAAOyD,OAAQJ,EAAWlW,IAC1BmT,EAAQyF,OAEHnE,GAAK1F,IACTkI,IACF,CAwBA,SAAS4B,GAAYC,EAAKC,EAAOC,GAChC,MAAMhhB,EAAUqM,GAAE,oBACd4U,EAAK,IAAIC,KACVpD,EAAOmD,EAAGE,mBAAoB,GAAI,CAAEC,QAAQ,IAAY,IAAMC,OAAQJ,EAAGK,mBAAoBC,SAAU,EAAG,KAExGP,IACJhhB,EAAQE,UAAY,IAEhB6gB,GACJ1U,GAAE,mBAAmB2O,UAAUwG,IAAI,WAE/BV,IACJ9gB,EAAQE,WAAa,QAAS6gB,EAAQ,gBAAkB,MAAQjD,UAAcgD,WAE/E9gB,EAAQC,UAAYD,EAAQyhB,YAC7B,CAQA,SAASC,GAAcpc,EAAI/C,GAC1B,MAAMsO,EAAUsI,GAAe7T,GAAOA,EAAGkU,SAAUlU,EAAGzE,QAAQ4Y,MAASnU,EAAGuL,QAE1E,IAAI8Q,GAAQxI,GAAe7T,GAAOsc,MAAMC,KAAMhR,GAAUkJ,WAAWzZ,GAAQA,EAAKwhB,UAAYxc,EAAGgU,gBAAoB/W,GAAQ,EAAI,GAE1Hof,EAAM,EACVA,EAAM9Q,EAAQxP,OAAS,EACdsgB,GAAO9Q,EAAQxP,SACxBsgB,EAAM,GAEFxI,GAAe7T,GACnBuL,EAAS8Q,GAAMG,SAAU,EAEzBxc,EAAGgU,cAAgBqI,EAEpBpB,GAAajb,EACd,CA0BA,SAASyc,GAAgBzc,GACxB,KAAQA,EAAG0c,YACV1c,EAAG2c,YAAa3c,EAAG0c,WACrB,CAWA,SAASE,KACHrK,IAAoBA,GAAgBjH,aAElC2C,GAAUsE,GAAgBjH,KAG6C,IAA1EiK,OAAOC,KAAKvH,IAAW4O,QAAOvR,IAAQ2C,GAAU3C,GAAKgD,WAAUvS,SAClEkS,GAAUsH,OAAOC,KAAKvH,IAAW,IAAIK,UAAW,GAGjDwO,KACAC,KACAC,GAAgBnZ,IAChBmZ,GAAgBhZ,IAEhBuO,GAAkB,KAClBzZ,SAASmkB,KAAO,WACjB,CAyJA,SAASC,GAAiBhhB,EAAOihB,GAChC,GAAKlI,GAAS/C,GAAahW,IAC1B,OAED,MAAMkhB,EAAiB,gBAAiBlhB,EAAQ,IAC7CmhB,EAAcnL,GAAahW,GAAQZ,KAAO,OAAS4W,GAAahW,GAAQZ,KAAO,GAE3E6hB,GAePjL,GAAahW,GAAU,CAAC,EACxBob,GAAexT,GAAmBoO,IAElC,UAAY,CAAEjU,KAAM,WAAYmf,OAjB/B,YAAc,CACbnf,KAAM,gCAAiCmf,KAAoBC,8BAC3DC,WAAY,SACZC,eAAgB,KACfL,GAAiBhhB,GAAO,EAAM,EAE/BshB,eAAgB,KACf,UAAY,CAAEvf,KAAM,aAAa,GAWrC,CAKA,SAASwf,GAAYxhB,EAAM,GAC1B,MAAM4Z,EAAUzD,GAAcX,IAE9B,GAAKoE,EAAQ/S,SAAW,GAAK+S,EAAQ/S,SAAW0U,IAAW,CAC1D,IAAIkG,EAAS7H,EAAQC,YAAoB,EAAN7Z,EAE9ByhB,EAAS,EACbA,EAAS,EACAA,EAAS7H,EAAQ/S,SAAW,IACrC4a,EAAS7H,EAAQ/S,SAAW,GAE7B+X,GAAa,GACbhF,EAAQC,YAAc4H,CACvB,CAIqB,KAAhBjL,IACJkL,GAAoB,IAAK1hB,EAC3B,CAKA,SAAS2hB,KAER,OADAC,aAAcnM,MACTe,KACJA,IAAe,GACR,EAIT,CAKAlV,eAAeugB,KACTrI,YACEta,SAAS4iB,uBAChBxM,GAAYyM,mBACZ7iB,SAAS8iB,cAAcC,MACxB,CAyCA,SAASC,GAAkBC,GAE1B,GAAmB,MAAdA,EAAMC,OAAkBD,EAAME,SAAYF,EAAMG,QAGpD,OAFAzlB,SAASmkB,KAAO,aAChBmB,EAAMI,iBAIP,GAA6B,QAAxBJ,EAAMphB,OAAOoY,SAAqBgJ,EAAME,QAAUF,EAAMG,QAC5D,OAED,MAAME,EAAaL,EAAMM,SAGzB,GAAmB,WAAdN,EAAMnjB,KACV,OAASmjB,EAAMC,MACd,IAAK,UACCI,EACJzD,GAAe,GAEfE,GAAa,GACd,MACD,IAAK,YACCuD,EACJzD,IAAgB,GAEhBE,IAAc,GACf,MACD,IAAK,YACCuD,EACJhE,IAAe,GACNhI,IACToI,GAAc,SAAU,GACxB4C,IAAY,IAGZE,GAAmB,KAAM,GAC1B,MACD,IAAK,aACCc,EACJhE,GAAc,GACLhI,IACToI,GAAc,eAAgB,GAC9B4C,MAGAE,GAAmB,KACpB,MACD,QAEC,YAIF,GAAKS,EAAMC,KAAK7iB,MAAO,yBAA4B,CAClD,MAAMU,EAAQkiB,EAAMC,KAAK9H,OAAO,GAAK,EACrC,IAAe,GAAVra,EAEGuiB,IACNE,IAAmB,GACnB1D,GAAapR,IAAc,SAGxB,GAAK4U,EAAa,CACtB,MAAMG,EAAWtK,KACjBsK,EAASpT,WAAa,EACtBqT,GAAgB3iB,EAAO0iB,EACxB,MAECE,GAAY5iB,EACd,MAEC,OAASkiB,EAAMC,MACd,IAAK,SACL,IAAK,YACJtM,GAAStT,iBAAiB,aAAazC,SAAS+iB,IAC/CC,GAAeD,GACfA,EAAEE,QAAQ,IAEX,MAAMC,EAAU1L,GAAUzB,GAAS/K,cAAc,kBAChCoN,IAAZ8K,EACJlN,GAAckN,EACLlN,GAAcgF,KAAgB,EACvChF,GAAcgF,KAAgB,EAE9BhF,KACIgF,KACJqD,MAEAe,GAAmBvJ,IACZ+D,MACNwF,MAEF,MACD,IAAK,QACJP,GAAcjF,KAAc,QAAU,OAAQ,GAC9CuJ,KACA,MACD,IAAK,YACL,IAAK,OACGvB,MAAwBa,IAC9B5D,GAAc,iBAAkB,GAChCuE,IAAU,IAEX,MACD,IAAK,OACJhD,GAAc5T,GAAYiW,GAC1B5D,GAAcjG,MACd,MACD,IAAK,aACL,IAAK,OACGgJ,MAAwBa,IAC9B5D,GAAc,aAAc,GAC5BuE,MAED,MACD,IAAK,OACJhD,GAAcvS,GAAc4U,GAC5B5D,GAAc,cAAgBjH,GAAS/J,KACvCoR,GAAapR,IACb,MACD,IAAK,OACJuS,GAAcqC,EAAa/W,GAAeJ,IAC1C,MAAM+X,EAAW/X,GAAaqI,MAAM,GACpCkL,GAAc,eAAiBjH,GAAStM,KAAmB+X,EAAW,GAAKA,EAAW,EAAI,KAAKzL,GAASlM,OAAoB,KAC5H,MACD,IAAK,OACJkC,GAAS0V,QACTzE,GAAc,UAAY3E,GAAOtM,KACjC,MACD,IAAK,OACJ2V,KACA,MACD,IAAK,OACCvI,KAAgB,IACpBwI,KACA3E,GAAc,YAEf,MACD,IAAK,OACJiD,KACA,MACD,IAAK,OACJzV,GAAMiX,QACN,MACD,IAAK,OACJ3U,GAAW2U,QACXzE,GAAc,qBAAuB3E,GAAOvL,KAC5C,MACD,IAAK,OACJhC,GAAa2W,QACbzE,GAAc,cAAgB3E,GAAOvN,KACrC,MACD,IAAK,OACL,IAAK,OACJyT,GAAchT,GAAQqV,GACtB5D,GAAc,SAAWjH,GAASxK,KAClC,MACD,IAAK,OACJgT,GAAc7R,GAAekU,GAC7B5D,GAAcjH,GAASrJ,IAAgByP,cAAgB,gBACvD,MACD,IAAK,OACJhR,GAAQsW,QACRzE,IAAgB/F,GAAY9L,IAAY,MAAQ,QAAW,eAC3D,MACD,IAAK,OACJ0B,GAAY4U,QACZzE,GAAc,SAAW3E,GAAOxL,KAChC,MACD,IAAK,OACJT,GAASqV,QACTzE,GAAc,gBAAkB3E,GAAOjM,KACvC,MACD,IAAK,OACJ4Q,GAAc,UAAY,CAAC,OAAO,iBAAiB,aAAa,QA3erE,SAAqB5d,GACpB,IAAIwiB,GAASpV,GAAS9O,QAAQ8Y,QAAW/J,GAAS/O,QAAQ8Y,QAAU,IAAQpX,GAAQ,EAAI,GAWxF,OATKwiB,EAAQ,EACZA,EAAQ,EACCA,EAAQ,IACjBA,EAAQ,GAETpV,GAAS9O,QAAQ8Y,OAAiB,EAARoL,EAC1BnV,GAAS/O,QAAQ8Y,OAASoL,GAAS,EAEnCxE,GAAa,CAAE5Q,GAAUC,KAClBmV,CACR,CA8d8EC,CAAYjB,KACrF,MACD,IAAK,OACJnV,GAAWgW,QACXzE,IAAgB/F,GAAYxL,IAAe,OAAS,YAAe,cACnE,MACD,IAAK,OACJL,GAAWqW,QACXzE,GAAc,kBAAoB3E,GAAOjN,KACzC,MACD,IAAK,OACJmT,GAAcpS,GAAUyU,GACxB5D,GAAc,WAAajH,GAAS5J,KACpC,MACD,QAEC,OAKJoU,EAAMI,gBACP,CASA,SAASnD,GAAiBxF,EAAS8J,GAClC,MAAMC,EAAY/J,EAAQ/Z,KAAO,GAC5BoZ,GAAQ0K,IACZhjB,IAAIijB,gBAAiBD,GAEfD,EAGN9J,EAAQ/Z,IAAM6jB,EAFd9J,EAAQiK,gBAAgB,MAG1B,CAQA,SAASC,GAAcrjB,EAAUmZ,EAASmK,GACzC,OAAO,IAAI1iB,SAASI,IACnB2d,GAAiBxF,EAASjZ,IAAIC,gBAAiBH,IAC/CmZ,EAAQoK,aAAe,KACjBD,GACJnK,EAAQqK,OACTxiB,GAAS,EAAM,CACf,GAEH,CAQAH,eAAe4iB,GAAiB7U,GAC/B,OAAO8U,KAAKC,MAAO,QAAmBC,SAASC,IAAK,cAAejV,GAAQkV,aAAaC,QAASnV,GAClG,CA2CA/N,eAAe8c,KACd,MAAMqG,EAAY1O,GAAcgF,KAAgB,EAAMhF,GAAc,EAAI,EACrE2O,EAAU5O,GAASkF,SAAUyJ,GAC7B7K,EAAUzD,GAAcP,IAEtB8O,IACJjI,GAAaiI,EAAM9K,GACd8K,EAAKhlB,cACHglB,EAAKhlB,OAAOilB,oBAClBD,EAAKhlB,OAAOa,UACVC,MAAMC,GAAYqjB,GAAcrjB,EAAUmZ,KAC1CpZ,MAAM,IAAMoZ,EAAQyF,WAGtBD,GAAiBxF,EAAS8K,EAAKplB,QAAQgB,MACvCsZ,EAAQyF,SAIV3I,IAAW,CACZ,CAKA,SAAS4H,GAAcV,EAAY9B,GAAW,GAE7C,IAAItc,EAAOwa,GAAkB4D,EAAWtd,MAExC,OAAO,IAAIe,SAASC,MAAQG,IAC3B,IAAIsa,EAAW,GAEf,MAAM6I,EAAoB,KACzBvjB,QAAQ4a,IAAKF,GAAWvb,MAAM0b,IAC7B,MAAMC,EAAQD,EAAME,QAAQ,CAAEC,EAAKC,IAASD,EAAMC,GAAK,GACvD7a,EAAS0a,EAAO,GACf,EAGG0I,EAAuBvjB,UAM5B,IAAIwjB,EALGhY,GAAcxN,QAAQE,MAC5BulB,GAAmBvlB,GAEpBA,EAAO0a,GAAW1a,GAAOA,KAIzB,IAAM,IAAIwlB,KAAQvmB,EAAQqE,MAAM,WAC/B,GAAuB,KAAlBkiB,EAAKC,OAAO,IAA4B,IAAfD,EAAKE,OAAe,CAKjD,IAAIxlB,EAJJslB,EAAOhL,GAAkBgL,GAClBF,IACNA,EAAW5K,GAAW8K,GAAOxK,UAKvBpB,GAAe4L,KAChB,KACJtlB,QAAe,EAAwBslB,GAChCtlB,GACN4f,GAAY,kCAAmC0F,KAAS,IAG1C,KAAXA,EAAK,IAAwB,KAAXA,EAAK,KAC3BA,EAAOxlB,EAAOwlB,IAGhBjJ,EAAS3a,KAAMuc,GAAoB,CAAErd,KAAMwa,GAAWkK,GAAQtlB,UAAUib,GAAgBmK,GAAYhJ,IACpGA,GAAW,EACXgJ,EAAW,EACZ,MACUE,EAAK9L,WAAW,aACzB4L,EAAWE,EAAK1K,MAAM,IAExBsK,GAAmB,EAGpB,GAAOplB,EAGF,GAAoB,iBAARA,GAAoBgI,GAAe9E,SAAUwX,GAAW1a,GAAOib,WAC1EmD,EAAWle,OACfke,EAAWle,OAAOa,UAChBC,MAAMC,GAAYA,EAASuB,SAC3BxB,KAAMqkB,GACN5iB,OAAO6gB,IACPxD,GAAYwD,GAAG,GACfrhB,EAAS,EAAG,IAIdG,MAAOpC,GACLgB,MAAMqB,IACN,GAAwB,KAAnBA,EAASC,OACb,OAAOD,EAASG,OAEhBsd,GAAY,6BAA6Bzd,EAASC,kBAAkBtC,KAAQ,EAAM,IAEnFgB,KAAMqkB,GACN5iB,OAAO6gB,IACPxD,GAAYwD,GAAG,GACfrhB,EAAS,EAAG,QAIX,CACJ,MAAM0jB,QAAa,SAAc,IAAT3lB,EAAgBgJ,GAAgBE,GAAkBlJ,GAErE6gB,MAAM+E,QAASD,IACnBA,EAAKplB,SAAS0C,IACb,MAAMnC,EAAS0Z,GAAkBvX,EAAMnC,MACpCZ,EAAS+C,EAAM/C,OAClBqc,EAAS3a,KAAMuc,GAAoB,CAAErd,OAAMZ,UAAUib,GAAgBT,GAAW5Z,GAAOka,WAAc,IAEtGoK,OAGc,IAATplB,GACJ8f,GAAY,+BAA+B9f,KAAQ,GACpDiC,EAAS,GAEX,MA3CCA,GAAU,EA2CX,GAEF,CA8GA,SAASohB,GAAYxT,EAAKgW,GAAQ,EAAMC,EAAMC,GAE7C,MAAMC,GAAkBnW,GAAOA,EAC5BoW,EAAeD,EAAevP,GAAa5G,GAAMC,QAAUmJ,GAAWpJ,GACtEqW,EAAejN,GAAU,WAEvBO,GAASyM,KAGTJ,GACJ/F,GAAY,YAAYkG,EAAe,iBAAoBnW,EAAM,GAAM,IAAMqJ,GAAerJ,GAAQ,kBAE1E8I,IAAtBsN,EAAWE,SACfF,EAAW3V,cAAgB6D,IAAuB8R,EAAWE,QAAS,IAEvE1a,GAAG,eAAelL,SAASgE,IAC1B,MAAMmU,EAAOnU,EAAGzE,QAAQ4Y,KACrBoE,OAA8BnE,IAAvBsN,EAAYvN,GAAuBuN,EAAYvN,GAASoN,EAAOI,EAAUxN,QAASC,EAE5F,QAAaA,IAARmE,IAAuBvY,GAAM6J,KAAkB2X,GACnD,GAAK3N,GAAe7T,GAAO,CAE1B,MAAM8T,EAAS9T,EAAGgH,cAAc,WAAWuR,OACtCzE,IACJA,EAAO0I,SAAU,EACnB,MACUxc,EAAG0V,UAAUC,SAAS,UAC/B3V,EAAGzE,QAAQ8Y,QAAUkE,EACZvY,GAAMkL,GACfiQ,GAAW5C,GACFvY,GAAMuH,GACfqT,GAAYrC,IAEZvY,EAAG2P,MAAQ4I,GACe,GAArBvY,EAAGgU,gBACPhU,EAAGgU,cAAgB,GACpB6N,GAAkB7hB,GAEpB,IAGDuR,GAAYuQ,WAAY,CACvBrW,UAAiBqJ,GAAY3N,IAC7BuE,UAAiBoJ,GAAYzN,IAC7B2E,UAAiBiI,GAAiBnM,IAClCgJ,QAAiBmD,GAAiB9L,IAClC4Z,eAAiB9N,GAAiB3L,IAClC0Z,QAAiBlN,GAAYnM,IAC7BsZ,gBAAiBnN,GAAYlM,IAC7B+E,MAAiBmH,GAAY9L,IAC7BuD,SAAiBuI,GAAY7L,IAC7B+H,OAAiBiD,GAAiB/K,IAClCgZ,QAAiBjO,GAAiBnK,IAClCqY,QAAiBlO,GAAiBlK,IAClCyC,OAAiByH,GAAiB9K,IAClCuD,WAAiBoI,GAAYvL,IAC7BoD,YAAiBmI,GAAYtL,IAC7BoD,OAAiBkI,GAAYlL,IAC7BkD,UAAiBgI,GAAY5K,IAC7B6D,QAAiB+G,GAAYzM,IAC7B0E,UAAiB+H,GAAYpK,IAC7BsC,WAAiB8H,GAAYzK,IAC7B4C,WAAiB6H,GAAYxK,IAC7B8G,UAAiB6C,GAAiBrJ,IAClCwX,UAAiBnO,GAAiBnJ,IAClCuX,cAAiBvN,GAAY/J,IAC7BuX,gBAAiBrO,GAAiB7I,MAInC6P,GACC,CAAE3T,GACFI,GACAD,GACAI,GACAU,GACAO,GACAyB,GACAP,GACAxB,GACAC,MACK+Y,EAAgB,GAAK,CAAE3X,IAC5BrC,GACA4B,KAGW,QAAPkC,GACJqT,IAAmB,GAEf2C,GACJ,UAAY,CAAErjB,KAAM,qBACtB,CAMAV,eAAeglB,GAAoBC,GAIlC/F,GAAgB9S,IAEhB,MAAM3O,EAAO,IAAIynB,OAAQ,oBAAqB,IAC9CznB,EAAKsT,UAAW,EAChBtT,EAAK0nB,UAAW,EAChB/Y,GAAY4B,QAAS5B,GAAY4B,QAAQxP,QAAWf,EAGpD,IAAI2nB,QAAkB,QAAKne,IAG3B,MAAMoe,QAAqBzC,GAAiB3b,IAE5C,GAAKoe,EAAe,CACnB,IAAM,MAAMtX,KAAOiK,OAAOC,KAAMoN,GAAiB,CAChD,MAAMC,EAAWle,GAAkB2G,EAChC9M,QAAiB2hB,GAAiB0C,GAErC,IAAIC,EAAQ,GACZ,IAAM,MAAMvmB,KAAQiC,EACnBskB,EAAMzlB,KAAM,CAAEd,eAET,QAAKsmB,EAAOC,GAClBC,GAAmBF,GAEnBF,EAAWrX,GAAQsX,EAActX,EAClC,OAEM,QAAK9G,GAAeme,GAC1BI,GAAmBve,GACpB,CAGA,GAAKme,EACJ,IAAM,MAAMrX,KAAOiK,OAAOC,KAAMmN,GAAc,CAC7C,MAAM3nB,EAAO,IAAIynB,OAAQE,EAAWrX,GAAOA,GAC3CtQ,EAAKO,QAAQynB,QAAU,IAClB1X,GAAOkX,IACXxnB,EAAK0nB,UAAW,GACjB/Y,GAAY4B,QAAS5B,GAAY4B,QAAQxP,QAAWf,CACrD,CAKD6C,MAAO,iBACLpB,MAAMqB,GACkB,KAAnBA,EAASC,SACbwd,GAAY,mCACLzd,EAASG,UAKjBxB,MAAM/B,IACN,IAAiB,IAAZA,EAAoB,CACxB,IAAIyc,EAAI,EACRzc,EAAQqE,MAAM,WAAW/C,SAASilB,IACjC,GAAuB,KAAlBA,EAAKC,OAAO,IAA4B,IAAfD,EAAKE,OAAe,CACjD,IAAIhR,EAAO8Q,EAAKliB,MAAM,MACF,GAAfoR,EAAKpU,SACT4N,GAAY4B,QAAS5B,GAAY4B,QAAQxP,QAAW,IAAI0mB,OAAQtS,EAAK,GAAGgR,OAAQhR,EAAK,GAAGgR,QACxFhK,IAEF,KAEIA,EACJoE,GAAY,GAAGpE,yCAEfoE,GAAY,uCAAuC,EACrD,KAEArd,OAAO6gB,OACV,CAKA,SAAS3E,GAAUjD,EAAG6I,GACrB,OAAO,IAAI1iB,SAASC,UACnB,MAAMsY,EAAUzD,GAAcX,IACxBwR,EAAS,KACdC,KACA7I,KACA3c,GAAS,EAAM,EAGhB,GAAKqU,GAASkF,SAAUE,GAAM,CAC7BnF,GAAcmF,EACd,MAAMwJ,EAAO5O,GAASkF,SAAUjF,IAChC0G,GAAaiI,EAAM9K,GAEd8K,EAAKhlB,cACHglB,EAAKhlB,OAAOilB,oBAClBD,EAAKhlB,OAAOa,UACVC,MAAMC,GAAYqjB,GAAcrjB,EAAUmZ,EAASmK,KACnDvjB,MAAM,IAAMwmB,QAGd5H,GAAiBxF,EAAS8K,EAAKplB,QAAQgB,MACvCsZ,EAAQoK,aAAe,KACjBD,GACJnK,EAAQqK,OACT+C,GAAQ,EAGX,MAECvlB,GAAS,EAAO,GAEnB,CAgBA,SAASylB,KACR5Q,GAAkB,CACjBjX,KAAM,eACNkT,QAAS,UACTL,WAAY,CACX,CAAEC,IAAK,GAAIC,MAAO,WAClB,CAAED,IAAK,EAAGC,MAAO,YAElBC,UAAU,EACVhD,IAAK,qBAON,IAAI8X,EAAW,EACf,KAAO7N,OAAOC,KAAKvH,IAAWoV,MAAK/X,GAAOA,IAAQiH,GAAgBjH,OAAQ8X,EAAW,IACpF7Q,GAAgBjH,IAAM,mBAAmB8X,IACzCA,IAGDE,KACAvc,GAAE,sBAAsBrL,UAAY,MACpCqL,GAAE,wBAAwBlM,MAAM0oB,QAAU,OAE1CzqB,SAASmkB,KAAO,mBACjB,CAKA,SAASuG,GAActD,GAEtB,GAAKvN,IAAYhB,IAAeK,GAAcgF,KAAgB,EAC7D,OAAO,EAIR,GAFArE,IAAW,EAENX,GAAcgF,KAAgB,EAClChF,SACI,KAAK8C,GAAY7K,IAIrB,OADA0I,IAAW,GACJ,EAHPX,GAAc,CAIf,CAwBA,OAtBAkO,GAAQtK,KAERnE,GAAYI,GACZA,GAA0B,GAAZJ,GACdkI,KAEKuG,EACJ9N,GAAcX,IAAYyO,OACzBzjB,MAAM,IAAM4d,OACZnc,OAAOulB,IAEFA,EAAIpF,MAAQ/a,KAChBiY,GAAYkI,GAAK,GACjBpJ,KACAmJ,IAAc,GACf,IAIDnJ,KAED6I,MACO,CACR,CAKA,SAAS/D,GAAWe,GACdvO,KAEAiE,OAAiBsK,GACrB9N,GAAcX,IAAYiS,QACrBjO,MACJxC,GAASyQ,SAGVtR,GAAcX,IAAYyO,OAAOhiB,OAAOulB,IAElCA,EAAIpF,MAAQ/a,KAChBiY,GAAYkI,GAAK,GACjBD,IAAc,GACf,IAEH,CAKA,SAASG,KACR,IAAIrJ,GAAM,EAaV,OAXK1E,KACCxD,GAAcX,IAAYqE,YAAc,EAC5C1D,GAAcX,IAAYqE,YAAc,EAC/B9D,GAAc,EACvBwI,GAAUxI,GAAc,GAExBsI,GAAM,EAGPA,EAAMF,GAAUpI,GAAc,GAExBsI,CACR,CAKA,SAASE,GAAUrD,GAClBiD,GAAUjD,GAAG,EACd,CAMA,SAASyM,KAER,IAAIC,EAAY,CACf,CAAElU,MAAO9N,EAAY5D,KAAM,eAC3B,CAAE0R,MAAO/N,EAAY3D,KAAM,SAC3B,CAAE0R,MAAOhO,EAAY1D,KAAM,qBAG5B,MAAM6lB,EAAaD,EAAU9nB,OAC1BgoB,EAAa1R,GAAStW,OACtBioB,EAAa1R,GAASvW,OAGzB8nB,EAAY,IACRA,KACAxR,GAAS2C,KAAK,CAAEha,EAAMqhB,KAAS,CAAG1M,MAAO7N,EAAW9G,EAAKM,KAAM2C,KAAM,OAASjD,EAAKM,KAAM+gB,aACzF/J,GAAS0C,KAAK,CAAEha,EAAMqhB,KAAS,CAAG1M,MAAO5N,GAAW/G,EAAKM,KAAM2C,KAAM,MAAQjD,EAAKM,KAAM+gB,WAC1F9F,MAAO,EAAGuN,IAAclc,GAAa+H,OAElCqU,GACJH,EAAUI,OAAQH,EAAY,EAAG,CAAEnU,MAAO5N,GAAU9D,KAAM,iBAEtD8lB,GACJF,EAAUI,OAAQH,EAAY,EAAG,CAAEnU,MAAO7N,EAAU7D,KAAM,iBAE3DimB,GAAgB5c,GAAcuc,EAC/B,CAQA,SAASM,GAAqBvM,EAASrM,GACtC,MAAMhL,GAAa+b,MAAM+E,QAAS9V,EAAQ,IAC1C,IAAM,MAAMvQ,KAAUuF,EAAWgL,EAAQsR,QAAQnJ,IAAOA,EAAEpF,WAAa/C,EAAY,CAClF,MAAMjQ,EAAOsc,EAAQrc,QAAQ4Y,KAC1BlW,EAAOjD,EAAKiD,MAAQjD,EAAK,GACzBud,EAAOvd,EAAK2U,OAAS3U,EAAK,GAC1BopB,EAAO9oB,EAAO,IAAMid,EACnB8L,EAASlpB,SAASC,cAAc,SAChCkpB,EAAQnpB,SAASC,cAAc,SAEnCipB,EAAO/oB,KAAQA,EACf+oB,EAAOD,GAAQA,EACfC,EAAOppB,KAAQ,QACfopB,EAAO1U,MAAQ4I,EAEf+L,EAAMC,QAAUH,EAChBE,EAAM5oB,UAAYuC,EAElB2Z,EAAQhc,OAAQyoB,EAAQC,EACzB,CACD,CAKA,SAASvH,KAER,MAAMyH,EAAqBzd,GAAE,sBAG7B0V,GAAe+H,GAEfjP,OAAOC,KAAMvH,IAAYjS,SAASsP,IAE7BA,EAAI6J,WAAW,UAClBqP,EAAmB5pB,WAClB,mFACkE0Q,MAAQ2C,GAAW3C,GAAMgD,SAAW,GAAK,yDACnEhD,6BAA+B2C,GAAW3C,GAAMhQ,qCAGzFkpB,EAAmB5pB,WAClB,mFACkE0Q,MAAQ2C,GAAU3C,GAAKgD,SAAW,GAAK,kCACxFL,GAAU3C,GAAKhQ,gCAElC,IAGD4L,GAAG,oBAAoBlL,SAASgE,IAC/BA,EAAGykB,iBAAkB,SAASrG,IAC7B,IAAOpe,EAAGwc,SACKjH,OAAOC,KAAMvH,IAAYoK,QAAQ,CAAEqM,EAAKnM,IAASmM,GAAQzW,GAAWsK,GAAMjK,UAAU,GACrF,EAGZ,OAFA,UAAY,CAAErQ,KAAM,2CACpBmgB,EAAMI,kBACC,EAGTvQ,GAAWjO,EAAGzE,QAAQopB,MAAOrW,UAAatO,EAAGwc,QAC7CM,KACAE,GAAgBhZ,GAAmB,GAClC,IAGHkD,GAAG,mBAAmBlL,SAASgE,IAC9BA,EAAGykB,iBAAiB,SAASrG,IAC5BA,EAAMI,iBAptBT,SAAyCoG,GACxC,IAAK3W,GAAU2W,GAAc,MAAM,IAAIC,MAAM,aAAaD,4BAE1D,MAAM9oB,EAAMmS,GAAU2W,GAChBE,EAAO,CAAC,EAEdA,EAAKxpB,KAAOQ,EAAIR,KAChBwpB,EAAKtW,QAAU1S,EAAI0S,QACnBsW,EAAK7oB,IAAMH,EAAIG,IACf6oB,EAAKxW,SAAWxS,EAAIwS,SACpBwW,EAAKxZ,IAAMsZ,EACXE,EAAK3W,WAAa,GAClB,IAAK,MAAM4W,KAAQjpB,EAAIqS,WACtB2W,EAAK3W,WAAW9Q,KAAK,IAAI0nB,IAG1BxS,GAAkBuS,CACnB,CAudCE,CA6Oc5G,EAAMphB,OAAOioB,aAAa,cA5OxC3B,KACAvc,GAAE,sBAAsBrL,UAAY,OACpCqL,GAAE,wBAAwBlM,MAAM0oB,QAAU,QAC1CzqB,SAASmkB,KAAO,mBA0OO,GACrB,GAEH,CAKA,SAASH,KACR,IAAM,MAAM9c,IAAM,CAAEwI,GAAYC,IAAoB,CACnD,IAAIkc,EAAO3kB,EAAG2P,MACd8M,GAAgBzc,GAGhB,IAAM,MAAMsL,KAAOiK,OAAOC,KAAMvH,IACxBA,GAAW3C,GAAMgD,WACvBtO,EAAGuL,QAASvL,EAAGuL,QAAQxP,QAAW,IAAI0mB,OAAQxU,GAAW3C,GAAMhQ,KAAMgQ,IAGzD,KAATqZ,IACJ3kB,EAAG2P,MAAQgV,EACX1J,GAAajb,GAEf,CACD,CAQA,SAASkkB,GAAgBtM,EAASrM,GACjC,MAAM2Z,EAAWtN,EAAQjI,MAElB2M,MAAM+E,QAAS9V,KACrBA,EAAU,CAAEA,IAEbkR,GAAgB7E,GAEhB,IAAM,MAAM5c,KAAQuQ,EAAQsR,QAAQnJ,GAAKA,IAAOA,EAAEpF,WAAa,CAC9D,MAAMwF,EAAS,IAAI2O,OAAQznB,EAAKiD,MAAQjD,EAAK,GAAIA,EAAK2U,OAAS3U,EAAK,IACnD,OAAZA,EAAK,KACT8Y,EAAOxF,UAAW,QACD8F,IAAbpZ,EAAKqhB,MACTvI,EAAOuI,IAAMrhB,EAAKqhB,KACnBzE,EAASA,EAAQrM,QAAQxP,QAAW+X,CACrC,CAEkB,KAAboR,IACJtN,EAAQjI,MAAQuV,GACe,GAA1BtN,EAAQ5D,gBACZ4D,EAAQ5D,cAAgB,GACzBiH,GAAarD,GAEf,CAQA,SAAS+G,GAAmBxB,EAAQxL,IACnC,IAAOiE,OAAiBuH,EACvB,OAGD,MAAMgI,EAAYhR,IAAUtE,GAAiB9P,MAAM/E,GAAQA,EAAK2U,OAASwE,IAAO7F,SAE1E8W,EAAmB,CAAEplB,EAAI3C,GAAO,EAAMgoB,EAAW,MAAM,MAC5D,IAAIC,EAAW,EACf,GACC,GAAKzR,GAAe7T,GAAO,CAE1B,MAAMulB,EAAQvlB,EAAGkU,SAAUlU,EAAGzE,QAAQ4Y,MACtCoR,EAAOrO,GAAWqO,EAAMxpB,SAAWygB,SAAU,CAC9C,MACK,QAA2BpI,IAAtBpU,EAAGzE,QAAQ8Y,OACpBrU,EAAGzE,QAAQ8Y,OAAS6C,UAChB,GAAKlX,EAAG6X,KAAO,CAEnB,MAAM,IAAE9H,EAAG,IAAEC,EAAG,KAAE6H,GAAS7X,EAExB2a,EAASzD,IADClH,EAAMD,GAAQ8H,EACI,GAAMA,IAAQ9H,EAE7C/P,EAAG2P,OAAmB,GAATgL,EAAc,GAAM,GACjCkH,GAAkB7hB,EACnB,MAECA,EAAGgU,cAAgBkD,GAAWlX,EAAGuL,QAAQxP,eAC/BspB,EAAUpR,GAAiBjU,KAAUslB,KAE5CjoB,GACJmoB,EAAMnoB,KAAM2C,EAAI,EAGlB,IAAIwlB,EAAQ,GAEZ,GAAKL,EAAWpf,IAAgB,CAC/B,MAAM0f,EAAevT,GAAY8C,KAAK,CAAEha,EAAMkB,IAAW+Y,GAASja,GAAS,KAAOkB,IAAQ2gB,QAAQ7hB,GAAiB,OAATA,IACvGuV,EAAQkV,EAAa1pB,OACnBwU,GACJuO,GAAY2G,EAAcvO,GAAW3G,KAAW,GAAO,GAAO,EAChE,CA2DA,GAzDK4U,EAAWvf,KACfwf,EAAkBhc,IAEd+b,EAAWngB,KACfogB,EAAkBje,IAEdge,EAAWlgB,KACfmgB,EAAkB9d,IAAc,GAE5B6d,EAAWhgB,KACfigB,EAAkB1d,IAEdyd,EAAW/f,KACfggB,EAAkBvd,IAAa,GAAM8S,GAAUA,GAAU1X,KAErDkiB,EAAW9f,KACf+f,EAAkBtd,IAEdqd,EAAWrf,KACfsf,EAAkB1a,IAEdya,EAAW3f,KACf4f,EAAkBzc,IAEdwc,EAAWzf,KACf0f,EAAkBnc,IAAY,GAAM0R,IAAYA,GAAUrT,GAAaqI,MAAM,IAAM,IAAOmF,GAAYnM,MAElGwc,EAAW1f,KACf2f,EAAkBvc,IAAa,GAE3Bsc,EAAW7f,KACf8f,EAAkBhd,IAAa,GAE3B+c,EAAWjgB,KACfkgB,EAAkB5d,IAAY,GAE1B2d,EAAWtf,KACfuf,EAAkB5b,IAEd2b,EAAWjf,KACfkf,EAAkBpb,IAAU,GAAO2Q,GAAUA,GAAU5V,KAAiB+P,GAAYnM,MAEhFwc,EAAWnf,KACfof,EAAkBxb,IAEdub,EAAWhf,KACfif,EAAkBlb,IAEdib,EAAWlf,KACfmf,EAAkBta,IAEdqa,EAAW/e,KACfgf,EAAkBra,IAEdoa,EAAWxf,KACfyf,EAAkBjc,IAEdgc,EAAW5f,IACf,IAAM,MAAMvF,IAAM,CAAEwI,MAAiBsM,GAAYhM,IAAgB,GAAK,CAAEL,KACvE2c,EAAkBplB,GAIpBwlB,EAAMnoB,KAAMiK,GAAc0C,GAAUZ,IAGpC6R,GAAauK,EACd,CAOA,SAASzC,GAAmBzX,GACtB,EACJgV,SAASC,IAAK,iBAAkBjV,GAEhCkV,aAAakF,WAAYpa,EAC3B,CAKA,SAASgY,KACR,GAAuB,MAAnB/Q,GAAyB,MAAM,IAAIsS,MAAM,wDAG7C,MAAMc,EAAQ5e,GAAE,qBAChB0V,GAAekJ,GAGf5e,GAAE,sBAAsB4I,MAAQ4C,GAAgBjX,KAGhDyL,GAAE,4BAA4ByV,QAAkC,MAAxBjK,GAAgBtW,IAExD,MAAM2pB,EAAc7e,GAAE,4BAA4B8e,WAAU,GAC5DD,EAAY9F,gBAAgB,MAC5B6F,EAAM1L,YAAY2L,GAGlBrT,GAAgBpE,WAAWnS,SAAQ,CAAC+oB,EAAMrR,MAU3C,SAAwBxX,EAAO6oB,GAC9B,MAAMY,EAAQ5e,GAAE,qBAEV+e,EAAW/e,GAAE,sBAAsB8e,WAAU,GAC7CE,EAAcD,EAAS9e,cAAc,sBACrCgf,EAAaF,EAAS9e,cAAc,qBACpCif,EAAYH,EAAS9e,cAAc,oBACnCkf,EAAiBJ,EAAS9e,cAAc,kBACxCmf,EAAoBL,EAAS9e,cAAc,qBAEjD+e,EAAYpW,MAAQoV,EAAK1W,MACzB2X,EAAWrW,MAAQoV,EAAK1W,MACxB4X,EAAUtW,MAAQoV,EAAK3W,IAEvB2X,EAAYtB,iBAAiB,SAAU1F,IACtCiH,EAAWrW,MAAQoP,EAAE/hB,OAAO2S,MAC5B4C,GAAgBpE,WAAWjS,GAAOmS,MAAQ0X,EAAYpW,KAAK,IAG5DqW,EAAWvB,iBAAiB,SAAU1F,IACrCgH,EAAYpW,MAAQoP,EAAE/hB,OAAO2S,MAC7B4C,GAAgBpE,WAAWjS,GAAOmS,MAAQ0X,EAAYpW,KAAK,IAG5DsW,EAAUxB,iBAAiB,SAAU1F,IACpCxM,GAAgBpE,WAAWjS,GAAOkS,IAAMgY,WAAWrH,EAAE/hB,OAAO2S,MAAM,IAGnEuW,EAAezB,iBAAiB,SAAS,KAexClS,GAAgBpE,WAAW8V,OAAO/nB,EAAQ,EAAG,EAAG,CAC/CkS,IAfqB,MAIrB,GAAIlS,IAAUqW,GAAgBpE,WAAWpS,OAAS,EAAG,CACpD,MAAMsqB,EAAU9T,GAAgBpE,WAAWoE,GAAgBpE,WAAWpS,OAAS,GAAGqS,IAGlF,OAFAmE,GAAgBpE,WAAWoE,GAAgBpE,WAAWpS,OAAS,GAAGqS,KAChEmE,GAAgBpE,WAAWoE,GAAgBpE,WAAWpS,OAAS,GAAGqS,IAAMiY,GAAW,EAC9EA,CACR,CACC,OAAQ9T,GAAgBpE,WAAWjS,GAAOkS,IAAMmE,GAAgBpE,WAAWjS,EAAQ,GAAGkS,KAAO,CAC9F,EAIKkY,GACLjY,MAAO,YAERiV,IAAsB,IAImB,IAAtC/Q,GAAgBpE,WAAWpS,OAC9BoqB,EAAkBI,aAAa,WAAY,QAE3CJ,EAAkB1B,iBAAiB,SAAS,KAC3ClS,GAAgBpE,WAAW8V,OAAO/nB,EAAO,GACzConB,IAAsB,IAIxBwC,EAAShG,gBAAgB,MACzB6F,EAAM1L,YAAY6L,EACnB,CAvEEU,CAAe9S,EAAGnB,GAAgBpE,WAAWuF,GAAG,IAGjD3M,GAAE,sBAAsB4I,MAAQ4C,GAAgB/D,OACjD,CAyEAjR,eAAekpB,KACd,MAAM9V,EAAahJ,GAAagI,MAC7B+W,EAAkB,IAAI7mB,OAAQ,OAAS0D,GAAexC,KAAK,KAAO,KAAM,KACxE4lB,EAAkB,IAAI9mB,OAAQ,OAAS6D,GAAe3C,KAAK,KAAO,KAAM,KAK3E,GAHAsR,GAAW,GACXC,GAAW,GAEN3B,GAAc1O,GAClB,IACC,MAAMnE,QAAiBD,MAAO2D,GAC3B9G,QAAiBoD,EAASG,OAE7B,IAAM,MAAM,KAAE1B,KAAU,EAA4B7B,GAAY,CAC/D,MAAMY,EAAO6a,GAAW5Z,GAAOka,SAC5BvZ,EAAOsE,EAAe,IAAMolB,mBAAoBrqB,GAE9CmqB,EAAgBrtB,KAAMkD,GAC1B8V,GAAShV,KAAM,CAAE/B,OAAM4B,QACdypB,EAAgBttB,KAAMkD,IAC/B+V,GAASjV,KAAM,CAAE/B,OAAM4B,OACzB,CACD,CACA,MAAO6hB,GAAK,MAER,GAAKpO,GAAczO,GAAiB,CACxC,MAAM2kB,QAAoB,QAAKjjB,IAE/B,IACC,GAAKijB,EACJ,UAAY,MAAQvrB,EAAMK,KAAYkrB,EAAYjpB,UACjD,GAAKjC,aAAkBuE,qBAAuB,CAC7C,MAAM4mB,EAAUJ,EAAgBrtB,KAAMiC,GACnCyrB,EAAUJ,EAAgBttB,KAAMiC,GAEnC,GAAKwrB,GAAWC,EAAU,CACzB,MAAMxqB,QAAaZ,EAAOa,UACvBU,EAAON,IAAIC,gBAAiBN,GAE1BuqB,EACJzU,GAAShV,KAAM,CAAE/B,OAAM4B,QAEvBoV,GAASjV,KAAM,CAAE/B,OAAM4B,OACzB,CACD,CAGH,CACA,MAAO6hB,GAAK,CACb,CAEA,GAAKpO,GAAc3O,GAAgB,CAClC,MAAM+hB,EAAa1R,GAAStW,OACzBioB,EAAa1R,GAASvW,OAEzBwf,GAAY,UAAawI,EAAaC,GAAc,EAAI,WAAaD,EAAa,oBAAsBC,EAAa,UAAa,mCACnI,CAEAJ,IACD,CAKArmB,eAAe4c,KAEd,GAAKvH,IAAmBnR,EACvB,OAGD,MAAMulB,EAAY1K,MAAMC,KAAMxK,GAASkF,UAAWlX,MAAMC,GAAMA,EAAGzE,QAAQ2e,WAEzE,GAAK8M,EAAY,CAEhB,IAAI1nB,EAAS0nB,EAAUzrB,QAAQgB,KAC9B0qB,GAAS,EAEVrU,YACOoU,EAAUzrB,QAAQ2e,SAEzBgN,EAAe,CACd,GAAKF,EAAUrrB,OAAS,CACvB,GAAmD,iBAAxCqrB,EAAUrrB,OAAOilB,oBAC3B,MAAMsG,EAEP5nB,EAAM1C,IAAIC,sBAAuBmqB,EAAUrrB,OAAOa,WAClDyqB,GAAS,CACV,CAEA,IACC,MAAMtO,QAAiB,KAAiBrZ,EAAK,CAAE6nB,iBAAiB,IAC3DxO,IACJD,GAAaC,EAAUqO,GACvBI,GAA6BJ,GACtBA,EAAUrrB,QAAcgd,EAASG,OAAOS,SAAWZ,EAASG,OAAOS,QAAQxd,QA72CvF,SAAyBuD,GACxB,OAAO,IAAIhC,SAASI,IACnB,MAAMjC,EAAO0a,GAAW7W,GAAM7D,KAE9B,GAAK,IAAc+K,IAAe6O,GAAe/V,GAChD5B,EAAQ,SACJ,QAA8B0W,IAAzB5B,GAAc/W,GACvBiC,EAASqZ,GAAWtb,EAAO+W,GAAc/W,SACrC,CACJ,MAAM4rB,EAAe,IAAc9gB,GAAkBlF,EAAc+R,GAAe3X,GAASA,EAE3FoC,MAAOwpB,GACL5qB,MAAMqB,GACsB,KAAnBA,EAASC,OAAkBD,EAASG,OAAS,OAEtDxB,MAAM/B,IACN,IAAI4sB,EAAW,GACf,GAAK5sB,EACJ,GAAK,IAAc6L,GAClB+gB,EAAW5sB,MACP,CACJ,MAAM6sB,EAAc,EAA6B7sB,GAC5C6sB,EAAYnrB,QAChBkrB,EAAWC,EAAYnrB,MACzB,CAEDoW,GAAc/W,GAAS6rB,EACvB5pB,EAASqZ,GAAWtb,EAAO6rB,GAAY,GAE1C,IAEF,CA+0CME,CAAgBloB,GAAM7C,MAAML,IAC3B4qB,EAAUzrB,QAAQa,MAAQA,EAC1BgrB,GAA6BJ,EAAW,IAI5C,CACA,MAAOjI,GAAK,CAEPkI,GACJrqB,IAAIijB,gBAAiBvgB,EACvB,CAEAsT,KACAuH,IACD,CACD,CAKA,SAAS6E,GAAehkB,GACvB,MAAMoB,EAAQpB,EAAKO,QAAQa,MACtB8Y,GAAQ9Y,IACZQ,IAAIijB,gBAAiBzjB,EACvB,CAMA,SAASqrB,KACgB,OAApBlV,KAEJtE,GAAUsE,GAAgBjH,KAAOiH,GACjChB,GAAYmW,iBAAiBnV,GAAgBjH,IAAKiH,IAClDuK,KACAC,KACAC,GAAgBnZ,IAEhB0O,GAAkB,KAClBzZ,SAASmkB,KAAO,WACjB,CA2BA,SAAS0K,GAAuBlsB,EAAMmsB,GACrC,GAAsB,GAAjB5Q,KAEJ,YADA,UAAY,CAAE/Y,KAAM,oBAIrB,IAAOxC,EAgBN,YAfA,UAAY,CACXwC,KAAM,mEACNqf,WAAY,OACZC,eAAgB5N,IACVA,EAEJgY,GADgB,EAAuBhY,GAAO,IAI9C,UAAY,CAAE1R,KAAM,YAAa,EAEnCuf,eAAgB,KACf,UAAY,CAAEvf,KAAM,YAAa,IAMpC,MAAMO,EAAW,GAEjBuT,GAAS8V,WAAW7rB,SAAShB,IAC5B,MAAM,KAAEuB,EAAI,OAAEqG,EAAM,MAAEI,EAAK,SAAEF,GAAa9H,EAAKO,QAC/CiD,EAASnB,KAAM,CAAEd,KAAM6Z,GAAsB7Z,GAAQqG,SAAQI,QAAOF,YAAY,IAGjFjF,MAAOyD,EAAa7F,EAAM,CACzBqsB,OAAQF,EAAS,MAAQ,OACzBG,QAAS,CACR,eAAgB,oBAEjBC,KAAM5H,KAAK6H,UAAW,CAAEzpB,eAExB/B,MAAMqB,GAA+B,KAAnBA,EAASC,OAAgBD,EAASE,OAAS,CAAEyd,MAAO,2BAA4B3d,EAASC,aAC3GtB,MAAM,EAAIF,OAAMkf,YAChB,MAAMxd,EAAO1B,EAAO,GAAIqrB,EAAS,UAAY,cAAgBzR,GAAW5Z,GAAOlB,WAAcogB,EAC7F,UAAY,CAAExd,SACd+iB,GAAmBzkB,GACnB,GAAsB,GAExB,CAOA,SAASygB,GAAiB1R,GAEzB,MAAM4c,EAAmB3C,GAASA,EAAMvQ,KAAK,EAAIrF,QAAOrB,eAAgB,CAAIqB,QAAOrB,eAWnF,GATOhD,GAAOA,GAAOrH,IACpBqT,GAAerT,GAAoBikB,EAAkBxY,KAE/CpE,GAAOA,GAAOvH,IACpBuT,GAAevT,GAAoBmkB,EAAkB1X,KAE/ClF,GAAOA,GAAOtH,IACpBsT,GAAetT,GAAoBuR,OAAOC,KAAMvH,IAAY+G,KAAK1J,IAAO,CAAIqE,MAAOrE,EAAKgD,SAAUL,GAAW3C,GAAMgD,eAE9GhD,GAAOA,GAAOzH,GAAkB,CACrC,MAAMskB,EAAkB,CAAC,EACzB5S,OAAOC,KAAKvH,IACV4O,QAAOvR,GAAOA,EAAI6J,WAAW,YAC7BnZ,SAAQsP,GAAO6c,EAAgB7c,GAAO2C,GAAU3C,KAClDgM,GAAezT,GAAkBskB,EAClC,CAKA,GAHO7c,GAAOA,GAAOpH,IACpBoT,GAAepT,GAAoBgkB,EAAkBrY,MAE/CvE,GAAOA,GAAO5G,GAAkB,CACtC,IAAI0jB,EAAqB,GACzB,IAAM,MAAM1U,IAAK,CAAC,EAAE,EAAE,GACrB0U,EAAmB/qB,KAAM,CACxB0S,IAAKhJ,GAAE,wBAAwB2M,OAAO/D,MACtCK,IAAKjJ,GAAE,wBAAwB2M,OAAO/D,MACtCM,MAAOlJ,GAAE,8BAA8B2M,OAAO/D,QAGhD2H,GAAe5S,GAAiB0jB,EACjC,CAEA,IAAO9c,GAAOA,GAAOnH,GAAmB,CACvC,MAAMkkB,EAAiB,CACtBlY,KAAQzH,GAAciH,MACtBS,MAAQpF,GAAe2E,MACvBU,IAAQnI,GAAayH,MACrBW,OAAQ7F,GAAY+R,QACpBjM,MAAQ/F,GAAYgS,SAErBlF,GAAenT,GAAkBkkB,EAClC,CAEA,IAAO/c,GAAOA,GAAOjH,GAAmB,CACvC,MAAMikB,EAAiB,CACtB3X,WAAahJ,GAAagI,MAC1BiB,WAAahJ,GAAa+H,MAC1BkB,YAAa5I,GAAcuU,QAC3B1L,QAAa3I,GAAUwH,MACvBoB,SAAaxI,GAAWoH,MACxBqB,OAAa9H,GAASyG,MACtBsB,SAAavH,GAAWiG,MACxBuB,QAAa/G,GAAUqS,QACvBrL,UAAa/G,GAAYoS,QACzBpL,UAAaxG,GAAY+E,OAE1B2H,GAAejT,GAAkBikB,EAClC,CACD,CAQA,SAAShR,GAAehM,EAAKoO,GAC5B,MAAM/J,EAAQyQ,KAAK6H,UAAWvO,GACzB,EACJ4G,SAASC,IAAK,cAAejV,EAAKqE,GAElC6Q,aAAa+H,QAASjd,EAAKqE,EAC7B,CASA,SAASkP,GAAgB3iB,EAAOqP,EAASjQ,EAAM6hB,GAC9C,MAAMC,EAAiB,gBAAiBlhB,EAAQ,IAC7CmhB,EAAiBnL,GAAahW,GAAQZ,MAAQ,GAC9CktB,EAAiBjX,GAAYiX,aAIhC,IAAOvT,GAAS/C,GAAahW,MAAeihB,GAASzK,KAAoBxW,EAiBxE,YAhBKssB,GACJ3N,GAAc,aAAcuC,8BALV,GAMlB1K,GAAkBxW,EAClBusB,YAAY,KACN/V,KAAoBxW,IACxBwW,IAAkB,EAAK,GACtBgW,MAGH,YAAc,CACbzqB,KAAM,mCAAoCmf,SAAwBC,IAClEC,WAAY,YACZC,eAAgB,KAAQsB,GAAgB3iB,EAAOqP,EAASjQ,GAAM,EAAM,EACpEkiB,eAAgB,KAAQ,UAAY,CAAEvf,KAAM,aAAa,KAQ5D,GAFAyU,IAAkB,GAEXpX,IAAU,GAAIA,IAAQ6lB,OAAS,CACrC,IAAKqH,EAWJ,YARA,UAAY,CACXvqB,KAAM,+CACNqf,WAAY,OACZ3N,MAAO0N,EACPsL,UAAW,GACXpL,eAAgBqL,IAAa/J,GAAgB3iB,EAAOqP,EAASqd,EAAQzH,QAAUra,IAAe,EAAM,EACpG0W,eAAgB,KAAQ,UAAY,CAAEvf,KAAM,kBAAkB,IAR/D3C,EAAO,EAYT,CAGKA,GAAQwL,KACZxL,EAAO,IAGR4W,GAAahW,GAAU,CAAEZ,OAAMiQ,WAC/B+L,GAAexT,GAAmBoO,IAElC,MAAMjU,EAAO,YAAamf,IACrBoL,EACJ3N,GAAc5c,EAAM,GAEpB,UAAY,CAAEA,QAChB,CAQA,SAAS0f,GAAoBlR,EAAMxQ,EAAM,GAExCyV,GAAoB+W,YAAY,KAC/BhW,GAAehG,EACfgR,GAAYxhB,EAAK,GACf,IACJ,CAKA,SAAS4sB,GAAoB3rB,GAC5B/B,SAAS2tB,gBAAgBjuB,MAAMogB,YAAa,qBAAsB/d,EAAM,QAASA,EAAImB,QAAS,SAAU,YAAgB,OACzH,CAKA,SAASuc,GAAYjL,GACpBpI,GAAUhM,QAAQoU,MAAQA,EACrBmC,KACJA,GAAQiX,IAAIpZ,MAAQ2D,KAAK0V,MAAO,EAAI1V,KAAKwH,IAAKnL,GAAU,GAAM2D,KAAK2V,KAAMtZ,IAC1EpI,GAAUP,cAAc,WAAWnM,MAAMquB,UAAY,WAAY,IAAMvZ,EAAQ,SAChF,CAUA,SAASkL,GAAcW,EAAK2N,EAAQ,EAAGltB,GAAM,GAC5C,GAAOuf,EAEF,CACJ,MAAM4N,EAAMC,YAAYD,MACpBE,EAAaF,EAAc,IAARD,EAClB3N,IAAQA,GACZhK,GAAUrB,KAAOqL,EACjBhK,GAAU+X,UAAYH,EACtB5X,GAAUgY,QAAUlW,KAAKtD,IAAKsZ,EAAY9X,GAAUgY,SAAW,GAC/DhY,GAAUiY,KAASN,GAAS3R,IAAa,EAAI2R,EAAQ,EAAIltB,IAGzDuV,GAAUgK,IAAMA,EACO,GAAlBhK,GAAUrB,OACdqB,GAAUrB,KAAO,GAClBqB,GAAUkY,SAAWJ,EAEvB,MAhBC9X,GAAY,CAAEgY,QAAS,EAAGE,SAAU,EAiBtC,CAKA,SAAS/P,KACR5G,GAAWjX,IAAMsW,GAAcX,IAAYlW,QAAQa,MAC9CkL,GAAaqI,OAAS9N,GAC1BgnB,GAAoB9V,GAAWjX,IACjC,CAKA,SAAS6tB,GAAmBpe,GAC3B5D,GAAagI,MAAWpE,EAAQoF,WAChC/I,GAAa+H,MAAWpE,EAAQqF,WAChC3I,GAAcuU,QAAUjR,EAAQsF,YAChC1I,GAAUwH,MAAcpE,EAAQuF,QAChCvI,GAAWoH,MAAapE,EAAQwF,SAChC7H,GAASyG,MAAepE,EAAQyF,OAChCtH,GAAWiG,MAAapE,EAAQ0F,SAChC9G,GAAUqS,QAAcjR,EAAQ2F,QAChC9G,GAAYoS,QAAYjR,EAAQ4F,UAChCvG,GAAY+E,MAAYpE,EAAQ6F,SACjC,CAKA,SAASwY,GAAgBre,GACxB7C,GAAciH,MAASpE,EAAQ4E,KAC/BnF,GAAe2E,MAAQpE,EAAQ6E,MAC/BlI,GAAayH,MAAUpE,EAAQ8E,IAC/B5F,GAAY+R,QAAWjR,EAAQ+E,OAC/B9F,GAAYgS,QAAWjR,EAAQgF,KAChC,CAKA,SAASyQ,GAAmBvlB,EAAO,IAC7B,IACJA,EAAO2a,GAAsB3a,GAC7BsN,GAAcxN,QAAQE,KAAO2X,GAAe3X,GAC5CsN,GAAcrN,UAAYya,GAAW1a,GAAOJ,SAC5C0N,GAAc/F,MAAQkQ,GAAezX,GAAM,GAE7C,CAQA,SAASwf,GAAa4O,EAAOC,GAAO,GAC5BxN,MAAM+E,QAASwI,KACrBA,EAAQ,CAAEA,IAEX,MAAME,EAAkB,IAAMthB,GAAgB5N,MAAM0oB,QAAYtP,GAAiBpM,KAAiB3E,IAAkB4R,GAAYhM,IAAkB,OAAS,GAE3J,IAAM,MAAM9I,KAAM6pB,EAAQ,CACzB,OAAS7pB,GACR,KAAKmH,GACJoK,GAAY9F,UAAYqJ,GAAY3N,IACpC,MAED,KAAKE,GACJkK,GAAY7F,UAAYoJ,GAAYzN,IACpC,MAED,KAAKC,GACJ,MAAM+X,EAAY/X,GAAaqI,MAAM,GAClCzT,EAAYoL,GAAcA,GAAa0M,eAAgBqI,IACvD2N,EAAY3K,GAAY1d,GAAc0d,GAAYzd,EAKrD,GAHA2P,GAAY0Y,QAAUD,EACtBzY,GAAY2Y,YAAc7K,GAAY1d,EAEjC0d,GAAYtd,GAAW,CAC3B8mB,KACA5d,GAAQpQ,MAAM0oB,QAAU,GAGxB,MAAMrmB,EAAMoV,QAAoB8B,IAAVlY,EAAsBgb,GAAW5E,GAASvW,QAAWG,GAAQgB,IAE5E+N,GAAQnP,IAAIquB,SAAUjtB,KAC5B+N,GAAQnP,IAAMoB,EAChB,MAEC+N,GAAQpQ,MAAM0oB,QAAU,OACnByG,EAEHnB,GADIxJ,GAAYxd,EACIkR,GAAWjX,IAEXuW,QAAoB+B,IAAVlY,EAAsBgb,GAAW7E,GAAStW,QAAWG,GAAQgB,KAG5F2rB,KAEF,MAED,KAAKnhB,GACJ,MAAM0iB,EAAS1iB,GAAaiI,MACzB0a,EAASD,GAAS7nB,IAAc6nB,GAAS5nB,IAAkB4nB,GAAS3nB,GACvEsF,GAAY2N,UAAU4U,OAAQ,SAAUF,GAAS/nB,IACjD0F,GAAY2N,UAAU4U,OAAQ,QAASF,GAASjoB,IAAgBkoB,GAChEtiB,GAAYlN,MAAM0vB,eAAiB,GACnCpf,GAAOtQ,MAAM0oB,QAAU8G,EAAS,GAAK,OACrClf,GAAOuK,UAAU4U,OAAQ,WAAYF,GAAS3nB,IAC9C0I,GAAOuK,UAAU4U,OAAQ,SAAUF,GAAS7nB,IAC5C,MAED,KAAKkF,GACJO,GAAMnN,MAAM8Q,WAAa,cAAe,EAAIlE,GAAakI,SACzD,MAED,KAAKhI,GACCA,GAAagI,OAASzN,GAC1B/I,OAAOM,oBAAoB,CAAE+wB,QAAS,aACpC/tB,MAAMd,KACN,QAAKiI,GAAmBjI,EAAQ,IAEhCuC,OAAO6gB,IAEPpX,GAAagI,MAAQ3N,IACrB,QAAK4B,GAAmB,IAExB6mB,SAAS,IAAMhE,SAGjB,QAAK7iB,IACL6iB,MAED,MAED,KAAK7e,GACJgc,KACA,MAED,KAAKpc,GACJ+J,GAAY3F,SAAW2F,GAAYmZ,WAAa,IAAMzW,GAAiBzM,IACvE,MAED,KAAKK,GACJ0J,GAAYxF,cAAgBkI,GAAiBpM,IAC7CkiB,IACA,MAED,KAAKjiB,GACJyJ,GAAYvF,UAAYiI,GAAiBnM,IACzC,MAED,KAAKG,GACJ,EAAgC,IAAKzE,MAAmBC,MAAqBwE,GAAcuU,QAAU9Y,GAAiB,KACtH,IACA,MAED,KAAK0E,GACJmJ,GAAYlE,UAAcjE,GAAOuG,OAAS/K,GAAc,EAAIwD,GAAYuH,MACxE,MAED,KAAKxH,GACJoJ,GAAYT,QAAU3I,GAAUwH,MAChC4L,GAAY,eAAiBhK,GAAYT,QAAU,YACnD,MAED,KAAKxI,GACJiJ,GAAYwQ,eAAiB9N,GAAiB3L,IAC9C,MAED,KAAKC,GACJnB,GAAWvM,MAAM8vB,OAAS,GAAGpiB,GAAWoH,SACxC,MAED,KAAK5F,GACL,KAAKD,GACJ,MAASA,GAAW6F,QAAU5F,GAAW4F,OACxC7F,GAAWkK,gBACZzC,GAAYqZ,aAAc7gB,GAAW4F,MAAO7F,GAAW6F,OACvD,MAED,KAAKnH,GACL,KAAKC,GACc,KAAbzI,EAAG2P,QACP3P,EAAGgU,cAAgB,GACfc,GAAYhM,IAChByI,GAAYnF,SAAW5D,GAAWmH,MAAQlH,GAAgBkH,MAAQ3P,EAAG2P,MAErE4B,GAAavR,GAAMwI,GAAa,eAAiB,iBAAoBxI,EAAG2P,MACzE,MAED,KAAKhH,GACJ4I,GAAYyQ,QAAUlN,GAAYnM,IAClC,MAED,KAAKC,GACJ2I,GAAY0Q,gBAAkBnN,GAAYlM,IAC1C,MAED,KAAKC,GACJ0I,GAAYhE,UAAcnE,GAAOuG,OAAS/K,GAAc,EAAIiE,GAAY8G,MACxE,MAED,KAAK7G,GACJihB,IACKjV,GAAYhM,KAChBmS,GAAazS,IAAY,GAC1B,MAED,KAAKQ,GACJuI,GAAY5D,MAAQmH,GAAY9L,IAChC,MAED,KAAKC,GACJsI,GAAYhF,SAAWuI,GAAY7L,IACnCgS,GAAazT,IAAY,GACzB,MAED,KAAK0B,GACJqI,GAAYP,OAAS9H,GAASyG,MAC9B,MAED,KAAKvG,GACJ,MAAMqD,EAAOrD,GAAOuG,MACb,CAAE/K,GAAWC,IAAYlG,SAAU8N,GAGzC8E,GAAY9E,KAAO,GAFnB8E,GAAY9E,KAAOA,EAIfA,GAAQ7H,IACZ2M,GAAYhE,UAAY,EACxBgE,GAAYlE,UAAY,IAGxBkE,GAAYhE,UAAY1E,GAAY8G,MACpC4B,GAAYlE,UAAYjF,GAAYuH,OAGrCsL,GAAazT,IAAY,GACzB,MAED,KAAK2B,GACJoI,GAAY/E,OAASyH,GAAiB9K,IACtC,MAED,KAAKI,GACJgI,GAAY7E,WAAaoI,GAAYvL,IACrC,MAED,KAAKC,GACJ+H,GAAY5E,YAAcmI,GAAYtL,IACtC,MAED,KAAKE,GACC+L,OACJlE,GAAYsZ,MAAQtZ,GAAYoZ,OAASjhB,GAAWiG,OACrD,MAED,KAAK/F,GACJ2H,GAAY3E,OAASkI,GAAYlL,IACjCqR,GAAazT,IAAY,GACzB,MAED,KAAKqC,GACJ,MAAMiK,EAASjK,GAAa8F,MAEvBsC,KACJA,GAAkB6Y,cAAe7Y,KAE7B6B,EAAS,IACb7B,GAAkB8Y,YAAapM,GAAmB,KAAO7K,IAE1D,MAED,KAAK9J,GACJ,OAASiK,GAAiBjK,KACzB,KAAKlF,GACJyM,GAAYyZ,YAAc,GAC1BzZ,GAAY0Z,YAAc,GAC1B,MAED,KAAKlmB,GACJwM,GAAYyZ,YAAc,GAC1BzZ,GAAY0Z,YAAc,EAC1B,MAED,QACC1Z,GAAYyZ,YAAc,EAE5B,MAED,KAAK9gB,GACJqH,GAAYzE,UAAYgI,GAAY5K,IACpC,MAED,KAAKC,GACCA,GAAUqS,QACdnF,GD9qGGld,KCgrGH,QAAKoK,IACLwe,GAAmBxe,KAEpB,MAED,KAAK6F,GACCA,GAAYoS,QAChB/D,IAAgB,IAEhB,QAAKhU,IACN,MAED,KAAK4F,GACJkH,GAAYvE,WAAa8H,GAAYzK,IACrC,MAED,KAAKC,GACJiH,GAAYtE,WAAa6H,GAAYxK,IACrC,MAED,KAAKC,GACJ,MAAMuD,EAAcmG,GAAiB1J,IACrCgH,GAAY2Z,eACXnkB,GAAE,wBAAwB+G,OAAiB6B,MAC3C5I,GAAE,wBAAwB+G,OAAiB6B,OAE5C4B,GAAY4Z,YAAcpkB,GAAE,8BAA8B+G,OAAiB6B,MAC3E,MAED,KAAKtH,GACJkJ,GAAYxD,QAAU+G,GAAYzM,IAClC,MAED,KAAKqC,GACJ6G,GAAYxE,UAAY+H,GAAYpK,IACpC,MAED,KAAKE,GACJ2G,GAAYH,UAAYxG,GAAY+E,MACpC4L,GAAY,4BAA8BhK,GAAYH,WACtD,MAED,KAAKtG,GACJyG,GAAY6Q,UAAYtX,GAAO6E,MAC/B,MAED,KAAK5E,GACJwG,GAAY8Q,cAAgBvN,GAAY/J,IACxC,MAED,KAAKK,GACJmG,GAAY+Q,gBAAkBrO,GAAiB7I,IAK5C0e,IACCrZ,GAAuB9R,SAAUqB,GACrCgd,GAAiB3Y,IAEjB0W,KAGH,CAED,CAKAxd,eAAe6tB,KAEdzZ,GAAc9G,GAAS2R,QAElB7K,GAEkB,UAAmB2O,SAASC,IAAI,0BAEhCjnB,UAAU+xB,cAkB/B9P,GAAY,iCAAiC,GAC7C1Q,GAAS2R,QAAU7K,IAAc,GAlBjCrY,UAAU+xB,aAAaC,aAAc,CAAEC,OAAO,IAC7C9uB,MAAM+uB,IACN5Z,GAAYL,GAAYka,SAASC,wBAAyBF,GACrD5V,MACJxD,GAAcX,IAAYiS,QAE3BvR,GAAW9I,GAAOmT,QAClBmP,IAAY,GACZpa,GAAYqa,aAAcha,IAC1B2J,GAAY,iCAAkC,IAE9Crd,OAAOulB,IACPlI,GAAY,mCAAmCkI,KAAO,GACtD5Y,GAAS2R,QAAU7K,IAAc,CAAK,KASnCC,KACJL,GAAYsa,gBAAiBja,IAC7BA,GAAUka,YAAYC,YAAY,GAAGhH,OACrCnT,GAAY,KACZ+Z,GAAYxZ,KAEboJ,GAAY,uCAGd,CAKA,SAASJ,GAAWxL,GACnBzE,GAAS3P,QAAQoU,MAAQA,EACzB4B,GAAYvD,OAAS2B,GAAS,IAC9BzE,GAASlE,cAAc,WAAWnM,MAAMquB,UAAY,WAAY,IAAM,IAAMvZ,QAC7E,CAMA,SAASqc,KAGR,MAAMC,EAAmBllB,GAAE,oBAC3BklB,EAAiBxH,iBAAkB,SAAS,KAC3C1d,GAAE,aAAa2O,UAAU4U,OAAO,SAAU2B,EAAiBvW,UAAU4U,OAAO,UAAW,IAExFvjB,GAAE,mBAAmB0d,iBAAkB,SAAS,IAAMwH,EAAiB3M,UAGvE,MAAM4M,EAAkBnlB,GAAE,mBA8C1B,IAAIolB,EA7CJD,EAAgBzH,iBAAkB,SAAS,KAC1C1d,GAAE,YAAY2O,UAAU4U,OAAQ,SAAU4B,EAAgBxW,UAAU4U,OAAO,WAC3E4B,EAAgBxW,UAAUuJ,OAAO,WACjC1D,IAAY,IAEbxU,GAAE,kBAAkB0d,iBAAkB,SAAS,IAAMyH,EAAgB5M,UACrEvY,GAAE,kBAAkB0d,iBAAkB,SAAS,IAAMlJ,GAAY,oBAAoB,GAAO,KAG5FrU,GAAG,WAAWlL,SAASgE,IACtBA,EAAGykB,iBAAkB,SAAS,KAC7BzkB,EAAGzE,QAAQ8Y,UAAYrU,EAAGzE,QAAQ8Y,OAClC4G,GAAajb,EAAI,GAChB,IAIHkH,GAAG,eAAelL,SAASgE,IACrB6T,GAAe7T,GACnBA,EAAGkU,SAAUlU,EAAGzE,QAAQ4Y,MAAOnY,SAASowB,IACvCA,EAAI3H,iBAAkB,SAAS,IAAMxJ,GAAajb,IAAM,IAIzDA,EAAGykB,iBAAkB,UAAU,KAC9BxJ,GAAajb,GACb6hB,GAAkB7hB,EAAI,GAExB,IAID6K,GAAS4Z,iBAAkB,SAAU2G,IACrC/hB,GAAOob,iBAAkB,UAAU,IAAMkH,OAazC,CAAEzgB,GACA3D,IAAYvL,SAASgE,IACpBA,EAAGykB,iBAAkB,SAAS1F,IAE/B,GADAA,EAAEP,iBACG2N,EACJ,OACDA,EAAa1D,YAAY,IAAM0D,GAAa,GAAO,IACnD,MAAMzR,EAAOpH,KAAK2V,KAAMlK,EAAEsN,QAAU,GAC/BrsB,GAAMkL,GACVgQ,GAAcR,GAEdD,GAAeC,EAAM,GACrB,IAGHnT,GAAUkd,iBAAkB,YAAY,KACvChK,GAAc,EAAE,IAIjB1T,GAAE,aAAa0d,iBAAkB,SAAS,IAAMtF,OAChDpY,GAAE,aAAa0d,iBAAkB,QAASM,IAC1Che,GAAE,aAAa0d,iBAAkB,QAASjF,IAE1CzY,GAAE,aAAa0d,iBAAkB,aAAa,IAAM9G,GAAmB,KAAM,KAC7E5W,GAAE,aAAa0d,iBAAkB,SAAS1F,IAClCnB,MACNwB,IAAU,EAAK,IAGjBrY,GAAE,aAAa0d,iBAAkB,aAAa,IAAM9G,GAAmB,OACvE5W,GAAE,aAAa0d,iBAAkB,SAAS,KAClC7G,MACNwB,IAAW,IAIbrY,GAAE,gBAAgB0d,iBAAkB,SAAS,KAC5C,MAAM6H,EAAU,GAEhBjhB,GAAQrP,SAAShB,IACTia,GAASja,EAAKuQ,UACpB+gB,EAAQjvB,KAAM,CAAEY,KAAMjD,EAAKM,MAAqB,WAAZN,EAAKsQ,IAAmB,6BAA+B,IAAMihB,QAAS,IAAMzN,GAAY9jB,EAAKsQ,MAAS,IAG5IghB,EAAQjvB,KAAK,CACZY,KAAM,kCAAmCsuB,QAAS,KACjD,MAAMC,EAAc,GACpBzX,KAAiB/Y,SAAS,CAAEiC,EAAM/B,KACjCswB,EAAYnvB,KAAM,CAAEY,OAAMsuB,QAAS,IAAMzN,GAAY5iB,IAAW,IAEjE,WAAa,CACZ+B,KAAM,eACNquB,QAASE,GACR,IAIJ,WAAa,CACZvuB,KAAM,eACNquB,WACC,IAGHvlB,GAAE,aAAa0d,iBAAkB,SAAS,KACzC,MAAM6H,EAAU,GAChBvX,KAAiB/Y,SAAS,CAAEiC,EAAM/B,KACjC,MAAMqP,EAAU2G,GAAahW,GAAQqP,QACrC+gB,EAAQjvB,KACP,CAAEpC,KAAM,EAAGgD,OAAMsuB,QAAS,IAAM1N,GAAgB3iB,EAAOoY,OACvD,CAAErZ,KAAM,EAAGgD,KAAMgX,GAAS1J,GAAY,GAAK,8CAA+CghB,QAAS,IAAM1N,GAAgB3iB,EAAOqP,EAAS,IAAI,IAC7I,CAAEtQ,KAAM,EAAGgD,KAAMgX,GAAS1J,GAAY,GAAK,kDAAmDghB,QAAS,IAAMrP,GAAiBhhB,IAC9H,IAGF,WAAa,CACZ+B,KAAM,sEACNquB,WACC,IAGHvlB,GAAE,mBAAmB0d,iBAAkB,QAAS3G,IAIhD/W,GAAE,kBAAkB0d,iBAAkB,SAAS,KAC9C,GAAK,EAAa,CACjB,MAAMhpB,EAAOsN,GAAcxN,QAAQE,KAC9BA,EACJ,YAAc,CACbwC,KAAM,WAAY8K,GAAcrN,yFAChC4hB,WAAY,YACZC,eAAgB,IAAMoK,GAAuBlsB,GAAM,GACnD+hB,eAAgB,IAAM,UAAY,CAAEvf,KAAM,eAI3C0pB,IACF,MA31BqBzrB,EA61BNyN,GAAYqK,cA31BO,IAA9BrK,GAAazN,GAAQyT,MACzB8I,KACW9O,GAAazN,GAAQX,QAAQynB,QAGxC,YAAc,CAAE/kB,KAAM,cAAc0L,GAAazN,GAAQR,0CACxD4hB,WAAY,YACZC,eAAgB,KACf9E,GAAgB9O,GAAazN,GAAQyT,MAAO,EAE7C6N,eAAgB,KACf,UAAY,CAAEvf,KAAM,YAAa,IARnC,UAAY,CAAEA,KAAM,+GAAgHua,KAAM,IAL5I,IAAuBtc,CA61BqB,IAE3C6K,GAAE,oBAAoB0d,iBAAkB,SAAS,IAAM,EAAakD,KAA0BlP,OAC9F1R,GAAE,cAAc0d,iBAAkB,SAAS,MAvlF5C,WAEC,KAAQ1S,GAAS0a,iBAChBzN,GAAejN,GAAS4K,YAAa5K,GAAS2K,aAExC9G,KAKN5D,IAAe,GAJfA,GAAc,EACdoJ,GAAmB3J,KAKpB2J,GAAmBvJ,IACnBqR,IACD,CA0kFEwJ,GACA1L,KACAvI,IAAgB,EAAM,KAIrB,EAAa1R,GAAE,iBAAmBgC,IAAgBlO,MAAM0oB,QAAU,OAE7D,IACNxc,GAAE,kBAAkB0d,iBAAkB,SAAS,KAC9ClK,GAAc,CAAEhe,KAAMoN,GAAYgG,QAAUlT,MAAM0a,IACjD,MAAMlZ,GAAe,GAANkZ,EAAY,uBAAyB,GAAGA,SAAUA,EAAI,EAAI,IAAM,wBAC/E,UAAY,CAAElZ,OAAMua,KAAM,GAAI,GAC7B,IAEHzR,GAAE,oBAAoB0d,iBAAkB,SAAS,KAAMkI,OA/+EhCzwB,EA++EgDyN,GAAYqK,mBA9+E/ErK,GAAazN,GAAQX,QAAQynB,QACjC,YAAc,CACb/kB,KAAM,qCAAqC0L,GAAazN,GAAQR,iDAChE4hB,WAAY,SACZC,eAAgBhgB,UACf,MAAMilB,EAAY7Y,GAAazN,GAAQyT,MACpCrE,EAAY3G,GAAkB6d,EAC9BG,QAAkB,QAAKne,IAErBme,UACGA,EAAWH,SAGb,QAAKlX,SACL,QAAK9G,GAAeme,GAE1B,UAAY,CAAE1kB,KAAM,qBACpBskB,IAAoB,EAErB/E,eAAgB,KACf,UAAY,CAAEvf,KAAM,YAAY,IAIzB0L,GAAazN,GAAQyT,OAC9B,UAAY,CAAE1R,KAAM,sCA1BtB,IAAyB/B,CA++E4E,KAIpGuN,GAAMgb,iBAAkB,SAAS,IAAMlF,OAGvC,MAAMqN,EAAc7lB,GAAE,0BACnB8lB,EAAsB,IAAMD,EAAYlxB,UAAY,cAAc,GAAmB,SAAW,WAE5F,IAAoB,KAAsB,IAGhDmxB,IACAD,EAAYnI,iBAAkB,SAASlnB,UACtC,IAAqB,GACrB,MAAMuvB,QAAkB,IAAmB,QAAKvoB,IAAiB4b,GAAiB5b,KDx2G9E,IAAqBwoB,ECy2GlB,IAAsBD,GAA0D,iBAAzCA,EAAQ,GAAGnxB,OAAOilB,oBAM/D,IAAmB,GD92GtBpmB,GAAqBA,EAErBL,EAAc,GACdN,EAAmB,KACnBQ,EAAS,CAAEG,EAAmBd,EAAgBT,IALnB8zB,EC02GCD,GDl2G3B9rB,EAAS+rB,GAETtyB,ICi2GEoyB,IACAvV,GAAelT,GAAkB,IAGT,KAZ1BwoB,EAAY/xB,MAAM0oB,QAAU,OAiB7B,MAAMyJ,EAAiBjmB,GAAE,qBACtBkmB,EAAiBlmB,GAAE,mBAEjB,GAAc,IAAkB,IACpCimB,EAAevI,iBAAkB,aAAa,IAAM3M,GAAqB,EAA+B,gBACxGmV,EAAaxI,iBAAkB,SAAS,IAAM3M,GAAqB,SAGnEkV,EAAenyB,MAAM0oB,QAAU,OAC/B0J,EAAapyB,MAAM0oB,QAAU,QAI9B,MAAM2J,EAAYnmB,GAAE,eAqBpB,IAAIomB,EAAaC,EApBZ,GAAc,GAClBF,EAAUG,cAAcxyB,MAAM0oB,QAAU,OAExC2J,EAAUzI,iBAAkB,UAAU1F,GAzgExC,SAAwBzJ,GACvB,MAAM5Y,EAAW4Y,EAAIhZ,MAAM,GAE3B,GAAKI,EAAW,CACf0e,KACA,MAAMvF,EAAUzD,GAAcX,IAC9BsO,GAAcrjB,EAAUmZ,GAAS,GACjC,KAAcnZ,GACZD,MAAMkc,GAAYD,GAAaC,EAAU9C,KACzC3X,OAAO6gB,OACV,CACD,CA8/D6CuO,CAAevO,EAAE/hB,UAG7D+J,GAAE,iBAAiB0d,iBAAkB,SAAS,KAC7C,UAAY,CACXxmB,KAAM,qCACNqf,WAAY,OACZC,eAAgBrgB,IACVA,EAAIikB,SACRlJ,GAAgB,CAAE1b,KAAMW,IAAO,GAC/Bub,IAAgB,GACjB,GAEA,IAMH,MAAM8U,EAAYxmB,GAAE,YACf5L,SAASqyB,wBACbD,EAAU9I,iBAAkB,SAASlnB,UACpC,GAAK0V,KAAa9X,SAASsyB,wBAA0B,CACpD,MAAMC,EAAenc,GAAYoc,OAAOC,gBACxCT,EAAcO,EAAa3B,YAAY,GACvC9Y,GAAS4a,OAAQ,EACjB5a,GAAS6a,UAAYJ,QACfza,GAASiN,OACfjN,GAAS8a,yBACV,MAEC5yB,SAAS4iB,sBAAsB,IAIjCwP,EAAU7X,UAAUwG,IAAI,YAEzB,MAAM8R,EAnNW,EAAEC,EAAMC,EAAU,OAClC,IAAI/E,EACJ,MAAO,IAAKgF,KACXtQ,aAAcsL,GACdA,EAAQV,YAAY,IAAMwF,EAAKG,MAAOC,KAAMF,IAAQD,EAAS,CAC9D,EA8MyBI,EAAU,IAAM/c,GAAYgd,cAAenB,EAAUvC,MAAOuC,EAAUzC,UAEhG1X,GAASwR,iBAAkB,yBAAyBrG,IACnDgP,EAAYhP,EAAMoQ,uBAClBzmB,GAAY2N,UAAUwG,IAAI,OAC1BqR,EAAU7X,UAAUwG,IAAI,UAExB3K,GAAYgd,cAAenB,EAAUzC,OAASjhB,GAAWiG,MAAOyd,EAAUzC,QAC1EyC,EAAU3I,iBAAkB,SAAUuJ,EAAmB,IAG1D/a,GAASwR,iBAAkB,yBAAyB,KACnD2I,EAAUqB,oBAAqB,SAAUT,GACzC/a,GAASyQ,QACTyJ,EAAYpI,OACZ9R,GAAS6a,UAAYX,EAAc,KACnCI,EAAU7X,UAAUuJ,OAAO,UAC3BlX,GAAY2N,UAAUuJ,OAAO,OAC7B1N,GAAYgd,eAAe,IAI5B,MAAMG,EAAgBp1B,UAAUo1B,aAC3BA,IACJA,EAAaC,iBAAkB,QAAQ,IAAMxP,OAC7CuP,EAAaC,iBAAkB,SAAS,IAAMxP,OAC9CuP,EAAaC,iBAAkB,iBAAiB,IAAMhL,OACtD+K,EAAaC,iBAAkB,aAAa,IAAMnL,QAInDzc,GAAE,iBAAiB0d,iBAAiB,QAAStB,IAC7Cpc,GAAE,sBAAsB0d,iBAAkB,QAASgD,IACnD1gB,GAAE,wBAAwB0d,iBAAiB,QAAS7H,IAGpD7V,GAAE,sBAAsB0d,iBAAiB,SAAU1F,IAClDxM,GAAgB/D,QAAUuQ,EAAE/hB,OAAO2S,KAAK,IAGzC5I,GAAE,sBAAsB0d,iBAAiB,SAAU1F,IAClDxM,GAAgBjX,KAAOyjB,EAAE/hB,OAAO2S,KAAK,IAGtC5I,GAAE,4BAA4B0d,iBAAiB,SAAU1F,IACxDxM,GAAgBtW,IAAM8iB,EAAE/hB,OAAOwf,QAAU,SAAMpI,CAAS,GAE1D,CAKA,SAASoL,KAER,IAAM,IAAI9L,EAAIsD,KAAgB,EAAGtD,EAAI,EAAGA,IAAM,CAC7C,MAAMkb,EAAYtb,KAAK8D,UAAa1D,EAAI,GAAM,EAC3Cmb,EAAY9c,GAAS+c,aAAc/c,GAASkF,SAAU2X,GAAa7c,GAASkF,SAAUvD,IACzF3B,GAASgd,aAAcF,EAAU9c,GAASkF,SAAU2X,GACrD,CAEApU,GAAS,EACV,CAKA,SAAS4E,GAAW4P,GAAO,IACXA,EAAOrL,KAAqBH,OAE1C3I,GAAc,cAAemU,EAAO,QAAU,eAChD,CAKA,SAASjK,KACR3S,GAAcX,IAAYiS,QAC1B7I,KACAT,GAAU,EACX,CAQA7c,eAAekb,GAAgBnd,EAAMssB,GAAS,GAE7C,MAAMqH,EAAsB,GAAR3zB,EAEpB,IAAK2zB,GAAiB7kB,GAAYoS,QAGlC,GAAsB,GAAjBxF,MAAwBiY,EAK7B,GAAK3zB,EAAO,CACX,IAAI4zB,EAAW5zB,EAEf,IAAO2zB,IAAiBrH,EAAS,CAChCsH,EAAWA,EAASC,UAAU,OAAO9wB,QAAS,mBAAoB,IAClE6wB,EAAWA,EAASvY,cAActY,QAAS,aAAc,KAEzD,IAAIskB,QAAkB,QAAKne,KAAmB,CAAC,EAC9C4qB,EAAY,EACZC,EAAYH,EAEb,KAAQvM,EAAU2M,eAAgBJ,IAAcE,EAAU,KACzDF,EAAWG,EAAW,IAAMD,EAC5BA,IAGDzM,EAAWuM,GAAa5zB,QAClB,QAAKkJ,GAAeme,GAC1BJ,GAAoB2M,EACrB,CAEA,IAAIpM,EAAQ,GAEZ,IAAM,MAAM9nB,KAAQ+W,GAAS8V,WAC5B/E,EAAMzlB,KAAM,CAAEd,KAAMvB,EAAKO,QAAQgB,KAAMZ,OAAQX,EAAKW,SAEhDszB,GACJ,QAAKxqB,GAAeqe,IAEpB,QAAKne,GAAkBuqB,EAAUpM,GAAQrmB,MAAM,IAAM,UAAY,CAAEwB,KAAM,qBAC3E,MAEC,UAAY,CACXA,KAAM,6BACNqf,WAAY,OACZC,eAAgB5N,IACVA,GACJ8I,GAAgB9I,GAAO,EAAO,EAEhC6N,eAAgB,KACf,UAAY,CAAEvf,KAAM,YAAa,SA5CnC,UAAY,CAAEA,KAAM,mBAiDtB,CAKA,SAASmpB,GAA6BtnB,GACrC,IAAM,MAAME,KAAMoS,GACZpS,EAAGzE,QAAQgB,MAAQuD,EAAOvE,QAAQgB,MACtCmc,GAAa5Y,EAAQE,EAExB,CAKA,SAASuf,KACH/N,GAAUgY,QAAUH,YAAYD,QACpC5X,GAAUrB,KAAO,GACK,GAAlBqB,GAAUrB,KACd0K,KAEAA,GAAuC,GAAN,EAAjBrJ,GAAUrB,OAAiBzH,GAAciH,OAAS6H,IACpE,CAKA,SAAS0L,KAER,MAAMhE,EAAUnN,GAAS/K,cAAc,YACpCuoB,EAAUxd,GAASkF,SAAUjF,IAE3BkN,GACJA,EAAQxJ,UAAUuJ,OAAO,WAErBsQ,IACJA,EAAQ7Z,UAAUwG,IAAI,WACtBqT,EAAQC,yBAEV,CAKA,SAAS7D,GAAY8D,QACNrb,IAATqb,EACJpmB,GAAOmT,QAAUiT,EAEjBA,EAAOpmB,GAAOmT,QAEViT,EACJle,GAAYme,mBAEZne,GAAYoe,eACd,CAKA,SAAS5U,KACRzD,GAAehT,GAAiB,IAAKgQ,KAAsBtG,OAAQ9C,GAAS3P,QAAQoU,MAAOjC,QAASnG,GAAUhM,QAAQoU,OACvH,CAKA,SAASkS,GAAkB7hB,GAC1B,MAAM4vB,EAAQ5vB,EAAG2T,uBACZic,GAA4B,SAAnBA,EAAMC,YACnBD,EAAMl0B,UAAYsE,EAAG2P,MACvB,EAOA,iBAEC,IAAImgB,EAAUC,EAAWC,EAAWC,EAAUC,EAAUC,EAAUC,EAAaC,EAAaC,EAAaC,EAAaC,EAAaC,EAAYC,EAG/I,MAiNMC,EAAepc,IACbiP,IAAc,KACpBpJ,GAAU,GACVS,GAAc,cAAe,IACxBpF,MACJxC,GAASyQ,QACX,EAGKkN,EAAe7R,IACfA,EAAE/hB,OAAO6zB,WAAW/0B,KACxByf,GAAY,iBAAmBwD,EAAE/hB,OAAOlB,KAAK,EAAM,EAG/Cg1B,EAAcvc,IACZnC,GAAcX,IAAYof,WAAW/0B,KAKvC2Z,MACJxC,GAASiN,OAEL9N,GAAcX,IAAYqE,YAAc,IAA4B,KAAtBjM,GAAa8F,OAC/DgP,IAAmB,GAEf7J,GAAYnK,KAEhBkQ,GAAc,GADG7P,GAAe2E,OAAS6H,MAXzCgD,GAAUxI,GAaX,EAMD7Y,OAAOsrB,iBAAkB,SAASrG,GAAS7C,GAAY,cAAc6C,EAAM3C,SAAS,KAEpF,IAAIsV,GAAW,EAEfxV,GAAY,gBAAgBha,qBAC5Bga,GAAY,eAAejiB,UAAUC,aAErCwN,GAAE,YAAYrL,UAAY6F,EAG1B,MAAMzD,QAAiBD,MAAO4I,IAE9B,IAAIuqB,EAAkC,KAAnBlzB,EAASC,aAAsBD,EAASG,OAAS,KACpE,IACC+yB,EAAe5Q,KAAKC,MAAO2Q,EAC5B,CACA,MAAOvN,GACNlI,GAAY,iBAAkB9U,QAAsBgd,KAAQ,GAC5DuN,EAAe,CAAC,CACjB,CAEAA,EAAe,IAAKtqB,MAAuBsqB,GAE3C,GAAwBA,EAAapqB,qBAAwBzN,OAAOM,oBAGpE,MACGw3B,EADe,IAAIr0B,IAAKzB,SAASrC,UAAWo4B,aACtBC,IAAI,QAE7B,IAAIC,EAAqBJ,EAAapqB,oBAAuBqqB,GAAYttB,IAttIlD,UAstI4EstB,SAA4C9Q,GAAiB/b,KAEpI,OAAvBgtB,IACJA,EAAqBJ,EAAarqB,mBAAqBhD,IAGnD,GACJ4X,GAAY,uCAAwC+E,SAASC,IAAI,mBAClE,MAAM8Q,QAz5EP9zB,iBAEC,MAAM+zB,EAAgB,CAAE5X,EAAM6X,KACxBjV,MAAM+E,QAAS3H,IACnBA,EAAK1d,SAAS8X,IAEb,MAAM,MAAEnE,EAAK,SAAErB,GAA8B,iBAAVwF,EAAqBA,EAAS,CAAEnE,MAAOmE,EAAQxF,UAAU,GACtFkjB,EAAMlV,MAAM+E,QAASkQ,GAAeA,EAAWxxB,MAAM/E,GAAQA,EAAK2U,OAASA,IAAU4hB,EAAY5hB,GAClG6hB,IACJA,EAAIljB,SAAWA,EAAQ,GAE1B,EAGKmjB,QAAsBtR,GAAiB7b,IACzC+sB,EAA+B,OAAfI,EArmCH,EAAEnmB,EAAKC,KACxB,MAAMrP,EAAQsY,GAumCH,SAtmCI,GAAVtY,IAELmP,GAASnP,GAAQqP,QAAUA,EAAO,EAomClCmmB,CAAW,EAAQ,IAAKhd,GAAU,cAAe+c,IAGjDvf,SAAoBiO,GAAiBrc,KAAuB,GACrDwY,MAAM+E,QAASnP,MACrBA,GAAc,CAAE,CAAE5W,KAAM,SAAUiQ,QAAS2G,MAC5C,IAAM,IAAIwB,EAAI,EAAGA,EAAI,EAAGA,SACGU,IAArBlC,GAAawB,GACjBxB,GAAawB,GAAM,CAAC,EACTuB,GAAS/C,GAAawB,KAAWxB,GAAawB,GAAInI,UAC7D2G,GAAawB,GAAM,CAAEnI,QAAS2G,GAAawB,KAI7C4d,QAAqBnR,GAAiBlc,IAAsByL,IAG5D4hB,QAAqBnR,GAAiBpc,IAAsByM,IAG5D,MAAM2X,QAAwBhI,GAAiBtc,IAC1CskB,GACJ5S,OAAOC,KAAM2S,GAAkBnsB,SAASsP,IACvC2C,GAAW3C,GAAQ6c,EAAiB7c,EAAK,IAK3CgmB,QAAqBnR,GAAiBnc,IAAsBiK,IAG5DqjB,QAAqBnR,GAAiBjc,IAAsB2L,IAG5D,MAAM8hB,EAAYzqB,GAAG,WACrByqB,EAAU31B,SAASgE,GAAM2X,GAAc3X,GAAK,KAAM,MAElD,MAAM4xB,EAAY1qB,GAAG,WACrB0qB,EAAU51B,SAASgE,GAAM2X,GAAc3X,GAAK,GAAI,KAEhD,MAAM6xB,EAAgB3qB,GAAG,iBACzB2qB,EAAc71B,SAASgE,GAAM2X,GAAc3X,EAAI,EAAG,EAAG,aAEpBmgB,GAAiBzb,KAAqBoL,IAEpD9T,SAAS,CAAE81B,EAAQ51B,KACrCy1B,EAAWz1B,GAAQyT,MAAQmiB,EAAO/hB,IAClC6hB,EAAW11B,GAAQyT,MAAQmiB,EAAO9hB,IAClC6hB,EAAe31B,GAAQyT,MAAQmiB,EAAO7hB,OAASH,GAAqB5T,GAAQ+T,KAAK,IAIlF2Z,GAAgB,IAAK1Z,YAAgCiQ,GAAiBhc,KAAsB,CAAC,IAG7F,IAAM,IAAIuP,EAAI,GAAIA,EAAI,GAAIA,IACzBvL,GAAWA,GAAUoD,QAAQxP,QAAW,IAAI0mB,OAAQ,GAAG/O,GAoBxD,OAlBAiE,GAAc/M,GAAa,EAAG,GAAI,IAElCsZ,GAAgBxa,GAAY4H,IAE5BqG,GAAcpP,GAAY,GAAI,IAAK,GAEnC2b,GAAgBhb,GAAUmI,IAE1B6S,GAAgBvc,GAAc,CAC7B,CAAE3F,GAAiB,WACnB,CAAEC,GAAiB,UACnB,IAAO,GAAwB,CAAEC,GAAgB,gBAAmB,MAGrEyV,GAAc/P,GAAc,EAAG,KAE/B+hB,GAAmB,IAAKjZ,YAAmCyP,GAAiB9b,KAAsB,CAAC,IAE5FgtB,CACR,CA0zE6BU,GAG5BhgB,GAAWhL,GAAE,aACbgL,GAAS0S,iBAAkB,YAAY1F,IACjCA,EAAE/hB,QAAU+hB,EAAE/hB,OAAOzB,QAAQgB,OACjCie,GAAUhH,GAAUuL,EAAE/hB,SACtB+hB,EAAE/hB,OAAO0Y,UAAUuJ,OAAQ,WAAY,mBACxC,IAEDjN,GAAc,EAGd,KAASggB,OAAQjgB,GAAU,CAC1BkgB,UAAW,IACXC,MAAO,CACN52B,KAAM,WACN62B,MAAM,EACNC,KAAK,GAENC,WAAW,EACXC,aAAc,OACdC,cAAe,WACfC,MAAOC,IACNzgB,GAAcwB,GAAUzB,GAAS/K,cAAc,aAC1B,GAAhByrB,EAAIC,UAAmB9c,MAC3BwE,GAAS,GACVC,KACA5B,IAAgB,EAAM,IAMxB8C,GAAY,uCAAwC,EAAAoX,EAAoBC,WAExErhB,GAAc,IAAI,EAAAohB,EAAqBvrB,GAAY,CAClDyrB,UAAW9qB,GACX+qB,aArQwB,CAAEC,EAAUrZ,KAEpC,MAAM7D,EAAazD,GAAcX,IAC9BmH,EAAa/C,EAAQta,QACrBy3B,EAAand,EAAQ/S,SAAW+S,EAAQC,YACxCmd,GAAc/qB,GAAayH,MAC3B0P,EAAa/X,GAAaqI,MAAM,GAChC7D,EAAapE,GAAaiI,MAC1B/B,EAAakH,GAAYxL,IACzB4pB,EAAa3hB,GAAY2hB,YACzB,UAAEC,GAAczZ,EAWnB,GARKsZ,EAAY,IAChBxP,IAAc,GAGVyP,EAAa,GAAKD,GAAaC,GAAcne,GAAYnK,KAAgBwoB,EAAY3hB,GAAUgY,SAAW5T,MAC9GiF,GAAc,EAAGmY,EAAW,KAI1BlnB,GAAcxJ,IA5jIC,KA4jIcwJ,GA3jId,KA2jI6CA,GAC5DuT,GAAYxd,GAAYwd,GAAYvd,GACrC,CACD,IAAIsxB,EAEJ,GAAKtnB,GAAcxJ,GAClB8wB,GAAmC,GAA1B7hB,GAAY8hB,YAAmB,GAAM,OAC1C,CACJ,MAAMC,EAAezd,EAAQC,YAAcD,EAAQ/S,SACnDswB,EAA2E,KArkI3D,KAqkIPtnB,EAA8BwnB,EAAe,EAAIA,EAC3D,CAEAvrB,GAAYlN,MAAM0vB,eAAiB,QAAS,IAAM6I,IACnD,CAEA3pB,GAAMohB,OAAS,EAEf,MAAM,QAAErB,EAAO,UAAED,EAAS,SAAEG,EAAQ,KAAEvZ,EAAI,IAAEqL,EAAG,KAAEiO,GAASjY,GAE1D,GAAK2hB,EAAY3J,GAAW2J,EAAYzJ,EACvC,OAGD,MAAM6J,EAAW,CAAEt1B,EAAMu1B,EAAGC,EAAGC,KACzB9lB,GACJiF,GAAU8gB,WAAY11B,EAAMu1B,EAAGC,EAAGC,GAClC7gB,GAAU+gB,SAAU31B,EAAMu1B,EAAGC,EAAGC,KAGhC7gB,GAAUghB,cAAgBhhB,GAAUihB,cAAgB,EAAIZ,EACxDrgB,GAAU+gB,SAAU31B,EAAMu1B,EAAGC,EAAGC,GAChC7gB,GAAUghB,cAAgBhhB,GAAUihB,cAAgB,EACrD,EAYD,GATAjhB,GAAUtF,UAAY,EAAI2lB,EAC1BrgB,GAAUkhB,SAAW,QACrBlhB,GAAUmhB,KAAOvD,EACjB5d,GAAUohB,UAAY,SAEtBphB,GAAUqhB,UAAY,OACtBrhB,GAAUshB,YAActhB,GAAUuhB,YAAc,OAG3C1K,EAAWyJ,IAAeA,EAAY3J,GAAmB,GAARrZ,GAAc,CACnE,MAAMkkB,GAAa3K,EAAWyJ,GAAc,IAC5CtgB,GAAUyhB,YAAcD,EAAW,EAAI,EAAIA,EAC3Cd,EAAU/hB,GAAUgK,IAAKwU,EAAWE,EACrC,CAGA,GAAK1G,EAAU2J,EAAY,CAC1B,GAAK1J,EAAO,EAAI,CAEf,MAAM4K,GAAa7K,EAAU2J,GAAc,IAC3CtgB,GAAUyhB,YAAcD,GAAY5K,EAAO,EAAI4K,GAAY5K,CAC5D,KACK,CAEJ,MAAM8K,EAAcjhB,KAAKtD,IAAK,GAAKmjB,EAAY5J,GAAc,KAC7D1W,GAAUyhB,YAAcC,EAAc9K,EAAO,EAAI8K,EAAc9K,CAChE,CAeA,GAZuB,GAAlBjY,GAAUrB,OACdojB,EAAU3e,KAAwBob,EAAWE,EAAUK,GAEvD1d,GAAUohB,UAAY,OACtBV,EAAU3f,GAASxK,IAAU0mB,EAAUI,EAAUK,GACjDgD,EAAU,cAAe3f,GAAS/J,MAAmBimB,EAAUK,EAAUI,GAEzE1d,GAAUohB,UAAY,QACtBV,EAAU3f,GAASrJ,IAAgByP,cAAgB,eAAgBiW,EAAUC,EAAUK,GACvFgD,EAAU,aAAcrd,GAAOjM,MAAegmB,EAAUE,EAAUI,IAG9D5e,GACJkB,GAAUohB,UAAY,OACtBphB,GAAUmhB,KAAOtD,EACjB6C,EAAU,aAAczD,EAAUO,EAAaG,OAE3C,CAEJ3d,GAAUohB,UAAY,QACtBV,EAAU3a,EAAU/V,MAAOotB,EAAUG,GACrCmD,EAAU3a,EAAU7V,QAASktB,EAAUG,EAAcN,GAGrD,MAAM0E,EAAaxd,KACdwd,GAAchqB,GAAYgS,SAG9B+W,EADe,UAAY,IAAOvhB,GAAc,IAAMiK,UADlC,GAAKuY,GAAaz4B,OACqC,WAAcy4B,IACtEvE,EAAUG,EAAcN,GAI5Cjd,GAAUohB,UAAY,OACtBV,EAAU3a,EAAUhW,OAAOoX,cAAe8V,EAAUM,EAAaI,GAGjE3d,GAAUmhB,KAAO,UAAUvD,IAC3B8C,EAAU3a,EAAUjW,MAAOmtB,EAAUQ,EAAaE,GAGlD3d,GAAUmhB,KAAOtD,EACjB6C,EAAU1d,EAAQ/Z,IAAM8c,EAAU5V,MAAQ,iBAAkB8sB,EAAUO,EAAaG,IAG9E3a,EAAQ/S,UAAY8V,EAAU9V,YAC3B8V,EAAU9V,WAChB8V,EAAU9V,SAAWgU,GAAejB,EAAQ/S,UAEvCiP,GAASkF,SAAUjF,MACvBD,GAASkF,SAAUjF,IAAczW,QAAQuH,SAAW8V,EAAU9V,WAEhE+P,GAAUohB,UAAY,QAEtBV,EAAUzc,GAAejB,EAAQC,aAAgB,MAAQ8C,EAAU9V,SAAUmtB,EAAUK,IAInFvd,GAAW8X,OAASpgB,GAAY+R,SACpC3J,GAAU4hB,UAAW1hB,GAAY+c,EAAUM,EAA0B,IAAZL,EAAiBA,EAAWA,EACvF,CACD,GAoHA2E,eAhUsB,CAAEC,EAAQ5B,KAChC,IAAIvX,EAGJ,MAAMoZ,EAAS7B,EAASG,WACrBrI,EAASphB,GAAMohB,MAAS9iB,GAAY8sB,YAAcD,EAClDjK,EAASlhB,GAAMkhB,OAAS5iB,GAAY+sB,aAAeF,EAEtD,OAASD,GACR,IAAK,SACJpZ,GAAY,uBAAuBwX,EAASgC,aAAahC,EAAShiB,4BAA4B5X,OAAO67B,qBACrGxZ,EAAM,iBACN,MACD,IAAK,QACJA,EAAM,UAAWuX,EAASplB,MAAQ,KAAO,uBAAwBinB,KACjE,MACD,IAAK,WACJpZ,GAAUuX,EAASvK,aAAe,QAAU,QAAtC,gBACN,MACD,IAAK,SACJhN,EAAM,iBACN,MACD,IAAK,OACJA,GAAU/F,KAAU,cAAgB,UAA9B,OAGR8F,GAAY,GAAIC,GAAOmZ,qBAA4B5B,EAASpF,OAAO9C,WAAakI,EAASpF,OAAOhD,aAGhGmF,EAAcxc,KAAKvD,IAAK8a,EAAOF,GAAW,GAC1CoF,EAAyB,EAAXD,EACdE,EAAcnF,EAAQ,EACtBoF,EAAcpF,EAAQiF,EACtBI,EAAyB,IAAXJ,EACdK,EAAyB,IAAXD,EACdK,EAAc1F,EAAQ,EAAIiF,EAC1BM,EAAczF,EAAoB,EAAXmF,EACvBO,EAAc1F,EAAoB,IAAXmF,EACvBQ,EAAc3F,EAAoB,IAAXmF,EACvBU,EAAc3F,EAAmB,EAAXiF,EAEtBW,EAAc,QAAoB,GAAXX,iBACvBY,EAAc,QAAQZ,gBAAuB,IAyR9C,MAAMrE,EAAWla,GAAYka,SAGxBA,EAASwJ,qBACbnjB,GAAU2Z,EAASwJ,qBACnB1jB,GAAYqa,aAAc9Z,KAK3BL,GAAY,EACZI,GAAY,EAEZ,IAAM,MAAM6B,IAAK,CAAC,EAAE,GACnBtB,GAAcsB,GAAM3M,GAAG,UAAU2M,KACjC0H,GAAmB1H,GACnBtB,GAAcsB,GAAI+Q,iBAAkB,OAAQqM,GAC5C1e,GAAcsB,GAAI+Q,iBAAkB,QAASkM,GAC7Cve,GAAcsB,GAAI+Q,iBAAkB,QAASmM,GAExC9e,GACJ2Z,EAASyJ,yBAA0B9iB,GAAcsB,IAAMyhB,QAASrjB,IAEhEP,GAAYqa,aAAcxZ,GAAcsB,KA7lG3C,WAGC,MAAM0hB,EAAe,CAAElc,EAAWmc,EAAU9pB,EAASnO,EAAQk4B,KAE5D/pB,EAAQvP,SAAShB,IAChBke,EAAUte,WAAa,wCAAwCy6B,mBAA0Br6B,EAAK2U,UAAW3U,EAAKsT,SAAW,GAAK,cAAetT,EAAKiD,cAAc,IAIjKiJ,GAAI,IAAImuB,KAAar5B,SAAS4b,IAC7BA,EAAQ6M,iBAAkB,SAASrG,IAClC,IAAOxG,EAAQ4E,SACAjR,EAAQsR,QAAQ7hB,IAAUA,EAAKsT,WAAWvS,OAC3C,EAGZ,OAFA,UAAY,CAAEkC,KAAM,uCACpBmgB,EAAMI,kBACC,EAGT,MAAMgT,EAAMjmB,EAAQxL,MAAM/E,GAAQA,EAAK2U,OAASiI,EAAQrc,QAAQuY,SAC3D0d,IACJA,EAAIljB,UAAasJ,EAAQ4E,QACzB0H,GAAgB9mB,EAAQmO,GACxByR,GAAiBsY,GAClB,GACC,GACD,EAIHF,EAAcruB,GAAE,kBAAmB,cAAe2I,GAAatG,GAAQnF,IAGvEmxB,EAAcruB,GAAE,kBAAmB,eAAgByJ,GAAc9I,GAAc3D,IAI/E,MAAMygB,EAAqBzd,GAAE,sBAE7BwO,OAAOC,KAAMvH,IAAYjS,SAASsP,IACjCkZ,EAAmB5pB,WAAa,oEAAoE0Q,MAAQ2C,GAAW3C,GAAMgD,SAAW,GAAK,cAAcL,GAAW3C,GAAMhQ,cAAc,IAG3LyhB,KAIA,MAAMwY,EAAexuB,GAAE,sBAEvB8I,GAAiB7T,SAASmY,IACzBohB,EAAa36B,WAAa,+DAA+DuZ,EAAKxE,UAAUwE,EAAK7F,SAAW,GAAK,cAAc6F,EAAKlW,cAAc,IAG/JiJ,GAAG,mBAAmBlL,SAASgE,IAC9BA,EAAGykB,iBAAkB,SAASrG,IAC7BvO,GAAiB9P,MAAM/E,GAAQA,EAAK2U,OAAS3P,EAAG2P,QAAQrB,UAAatO,EAAGwc,QACxEQ,GAAiB9Y,GAAoB,GACpC,IAIHgD,GAAI,iBAAkBlL,SAASgE,IACT,cAAhBA,EAAG6vB,UACP7vB,EAAGykB,iBAAkB,SAAS,KAC7B,MAAMqN,EAAS9xB,EAAGzE,QAAQu2B,OAC1B/qB,GAAE,wBAAwB+qB,OAAYniB,MAAQG,GAAqBgiB,GAAS/hB,IAC5EhJ,GAAE,wBAAwB+qB,OAAYniB,MAAQG,GAAqBgiB,GAAS9hB,IAC5EjJ,GAAE,8BAA8B+qB,OAAYniB,MAAQG,GAAqBgiB,GAAS7hB,MAClF/I,GAAG,iBAAiB4qB,OAAY91B,SAASw5B,IACxCA,EAAM9f,UAAUuJ,OAAO,cAAc,IAEjCjf,EAAGzE,QAAQu2B,QAAU7d,GAAiB1J,KAC1C0Q,GAAa1Q,IAAe,GAC7ByS,GAAiBtY,GAAiB,IAInC1E,EAAGykB,iBAAkB,UAAU,KAC9B,MAAMgR,GAAaz1B,EAAG2P,QAAU3P,EAAG+P,MAAQ/P,EAAG2P,QAAU3P,EAAGgQ,IACtDylB,IACCz1B,EAAGzE,QAAQu2B,QAAU7d,GAAiB1J,KAC1C0Q,GAAa1Q,IAAe,GAC7ByS,GAAiBtY,KAElB1E,EAAG0V,UAAU4U,OAAQ,eAAiBmL,EAAS,GAEjD,IAID,IAAM,MAAMz1B,IAAM,CAAE0I,GAAesC,GAAgB9C,GAAcuC,GAAaD,IAC7ExK,EAAGykB,iBAAkB,UAAU,IAAMzH,GAAiB7Y,MAEvD4C,GAAE,cAAc0d,iBAAkB,SAAS,KAC1CmF,GAAgB1Z,IAChB8M,GAAiB7Y,GAAkB,IAIpCsM,GAAuBzU,SAASgE,IAC/BA,EAAGykB,iBAAkB,UAAU,IAAMxJ,GAAajb,IAAM,IAGzD+G,GAAE,kBAAkB0d,iBAAkB,SAAS,KAC9CkF,GAAmBjZ,IACnBuK,GAAaxK,GAAwB,GAEvC,CAq/FCilB,GAIAxR,GAAgB9a,GAAQsG,IAExB,IAAM,MAAMgE,IAAK,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAK,KACvD3J,GAAYA,GAAWwB,QAAQxP,QAAW,IAAI0mB,QAAU/O,GAAK,IAASA,EAAI,IAAS,IAAMA,GAAM,KAAMA,GAEtG,IAAM,MAAMA,IAAK,CAAC,IAAK,IAAK,IAAK,IAAK,KAAM,KAAM,IAAM,MACvD5J,GAAYA,GAAWyB,QAAQxP,QAAW,IAAI0mB,OAAU/O,EAAI,IAAS,MAAOA,GAE7EyQ,GAAqBtc,GAAa+H,IAElCuU,GAAqB5Z,GAAe,CACnC,CAAE,IAAK,OACP,CAAE,IAAK,UACP,CAAE,IAAK,UAGR4Z,GAAqB3c,GAAY,CAChC,CAAE,MAAQ,OACV,CAAE,MAAQ,MACV,CAAE,OAAQ,MACV,CAAE,MAAQ,MACV,CAAE,OAAQ,QAGX0c,GAAgBra,GAAc,CAC7B,CAAE,IAAO,OACT,CAAE,IAAO,mBACT,CAAE,IAAO,aACT,CAAE,IAAO,cACT,CAAE,KAAO,cACT,CAAE,KAAO,YACT,CAAE,KAAO,aACT,CAAE,MAAO,eAGVsa,GAAqBna,GAAU,CAC9B,CAAE,IAAK,OACP,CAAE,IAAK,MACP,CAAE,IAAK,UAGRka,GAAgBxc,GAAc8I,IAE9B2T,GAAqBhb,GAAU,CAC9B,CAAE,KAAM,QACR,CAAE,IAAM,OACR,CAAE,IAAM,WAGTgb,GAAqB7b,GAAa,CACjC,CAAEjC,GAAc,QAChB,CA1xIgB,SA0xIA,OAChB,CAAEC,GAAc,OAChB,CA1xIgB,MA0xIA,SAGjB6d,GAAqB/Y,GAAa,CACjC,CA/wIkB,GA+wIH,OACf,CA/wIe,IA+wIA,KACf,CA/wIe,IA+wIA,KACf,CA/wIe,IA+wIA,KACf,CAAEvE,GAAa,KACf,CA/wIe,MA+wIA,SAGhBsd,GAAqBrc,GAAa,CACjC,CAAE3E,GAAgB,YAClB,CAAEC,GAAgB,SAClB,CAAEC,GAAgB,WAGnBsU,GAAclQ,GAAc,GAAK,EAAG,IACpCkQ,GAAc9O,GAAa,EAAG,EAAG,IACjC8O,GAAcvP,GAAa,EAAG,GAAI,IAClCuP,GAAc7M,GAAQ,EAAG,EAAG,GAG5B+P,KAGAtF,OAAOC,KAAMvH,IAAYjS,SAASsP,IACjC,MAAM,QAAEkD,EAAO,IAAEvS,EAAG,WAAEkS,GAAeF,GAAW3C,GAC3C6C,GACJoD,GAAYmW,iBAAkBpc,EAAK,CAAEkD,UAASvS,MAAKkS,cAAc,IAEnE2O,KAGAsO,KAGA,MAAMuK,GDpjIA,SAAiBzc,EAAW3N,EAAU,CAAC,GAE7C,IAAIqqB,EA+DJ,OA7DA57B,EAAUmB,SAASC,cAAc,MACjCpB,EAAQ61B,UAAY,aACpB3W,EAAUtd,OAAQ5B,GAElBC,EAAWkB,SAASC,cAAc,MAClCnB,EAAS41B,UAAY,WACrB3W,EAAUtd,OAAQ3B,GAElB27B,EAAenN,YAAY,KAC1BzuB,EAAQY,UAAY,uBAAuB,GACzC,KAEHZ,EAAQY,UAAY,iCAEpBZ,EAAQyqB,iBAAkB,SAASlnB,eAAgBwhB,GAC7CA,EAAE/hB,QAA+B,MAArB+hB,EAAE/hB,OAAO64B,UAnS5B,SAAoBC,GAEnB,IAAI74B,EAEJ,KAAQ64B,EAAQ,GACf74B,EAAO9C,EAAYgD,MACnB24B,IAGD,MAAM14B,EAASjD,EAAaA,EAAY4B,OAAS,GAC5CqB,GAAUA,EAAOzB,SACrB9B,EAAmBuD,EAAOzB,OAC1BsB,EAAO,MAGRF,EAAUE,EAAMA,GAAQA,EAAKtC,UAC9B,CAoRGo7B,CAAWhX,EAAE/hB,OAAOzB,QAAQu6B,MAE9B,IAEA77B,EAASwqB,iBAAkB,SAASlnB,eAAgBwhB,GACnD,MAAM/jB,EAAO+jB,EAAE/hB,OACf,GAAKhC,GAAyB,MAAjBA,EAAK66B,SACjB,GAA0B,OAArB76B,EAAKO,QAAQN,KACjB8B,EAAU/B,EAAKW,QAAUX,EAAKO,QAAQE,WAClC,GAA0B,SAArBT,EAAKO,QAAQN,KACtB,GAAKT,EACJ,IACCX,QAAyBV,OAAOM,oBAAoB,CAAE+wB,QAAS,UAC/DrwB,EAAc,GACd4C,EAAUlD,EACX,CACA,MAAOklB,GAEP,MAGA5kB,EAAc,GACd4C,EAAU/B,EAAKO,QAAQE,KAI3B,IAEAxB,EAASwqB,iBAAkB,YAAY,SAAU1F,GAChD,MAAM/jB,EAAO+jB,EAAE/hB,OACVhC,GAAyB,MAAjBA,EAAK66B,UACZ/7B,GAAoB,CAAC,OAAO,QAAQ6E,SAAU3D,EAAKO,QAAQN,OAC/DnB,EAAkB,CAAEyC,KAAMO,EAAU9B,EAAKO,QAAQE,MAAQE,OAAQX,EAAKW,QAAUojB,EAEnF,IAEkC,mBAAtBxT,EAAQyqB,aACnBl8B,EAAmByR,EAAQyqB,YAEM,mBAAtBzqB,EAAQ0qB,aACnBl8B,EAAmBwR,EAAQ0qB,YAEvB1qB,EAAQnR,gBACZyG,EAAmB0K,EAAQnR,gBAErB,IAAIkD,SAASI,IACnBG,MAAO,eACLpB,MAAMqB,GACCA,EAASG,SAEhBxB,MAAMc,UAWN,GAVAsgB,aAAc+X,GACTl7B,EAAQya,WAAW,gBACvB7a,GAAa,EACbJ,EA1fa,GA8fbA,EAAaN,EA9fA,GAigBTM,GAA2BhB,EAAa,CAC5C,MAAM4E,QAAiBD,MAAO,cAC9BxD,QAAeyD,EAASE,OACxBgD,QAhQEzD,iBAEN,MAAMO,QAAiBD,MAAO,eAC3Bq4B,QAAiBp4B,EAASG,OAE7B,IAAIk4B,EAAW,GACf,IAAM,MAAMl6B,KAAOi6B,EAAQn3B,MAAO3F,EAAY,KAAO,KACpD+8B,EAAS94B,KAAM,CAAEpB,MAAKtB,UAAW,IAElC,OAAOw7B,CACR,CAsPoBC,GAChB,MAGC/7B,EAAS,CAAEkR,EAAQ8qB,UAAYp9B,GAC/BsB,QAAuBwC,EAAU1C,EAAO,KAEnCkR,EAAQ6lB,oBAAsB53B,IAA2Be,KAE7DJ,EAAc,GACTX,GACJa,EAAS,CAAEX,GACXc,GAAmB,GAGnBH,EAAS,GACVI,KAGFiD,EAAS,CAAExD,aAAYM,mBAAkBD,iBAAgB+7B,SAAUr8B,EAAUs8B,gBAAiBr8B,GAAcN,EAAW,sBAAwBc,GAAW,IAE1JwD,OAAOulB,IAEP5F,aAAc+X,GACd17B,GA1hBW,EA2hBNV,GACJa,EAAS,CAAEX,GACXc,GAAmB,GAGnBH,EAAS,GACVI,IACAiD,EAAS,CAAExD,aAAYM,mBAAkB87B,SAAUr8B,GAAY,GAC9D,GAGL,CC47H6B,CAC3B8M,GAAE,kBACF,CACCivB,WAAY,CAAEnc,EAAYuE,KACzBtG,GAAqB,CAAE+B,IAAc,GACrCuE,EAAMphB,OAAO0Y,UAAUuJ,OAAQ,WAAY,kBAAmB,EAE/DgX,WAAYx6B,IACN0O,GAAUqS,SAAWuU,GACzB1Z,GAAa5b,EAAM,EAErBrB,eAAgB,IAAKoJ,MAAmBC,MAAqBwE,GAAcuU,QAAU9Y,GAAiB,IACtG0tB,uBAEA30B,MAAMsB,IAEP,GAAmBA,EAAO7D,WAC1B,GAAmB6D,EAAOxD,eAC1B,GAAmBwD,EAAOvD,iBAE1B,MAAM,SAAE87B,EAAQ,gBAAEC,GAAoBx4B,EAEjC,IAAcyI,IAClB+U,GAAY,GAAIgb,iBAAiC,KAC3C,IACNhb,GAAgB,IAAc/U,GAAc,kBAAoB,2CAA8C,GAC1G,IACJ+U,GAAY,kEACN,IAAyByV,EAAapqB,mBAC5C2U,GAAY,wFAAyF6V,GAE/F,IACN9Z,GAAelT,GAAkBgtB,GAAsB,IACvD7O,OAII,GAAc,IAAoB,KACtC,KAASyP,OAAQsE,EAAU,CAC1BrE,UAAW,IACXuE,UAAW,yCACXtE,MAAO,CACN52B,KAAM,WACN62B,KAAM,QACNC,KAAK,GAENC,WAAW,EACXC,aAAc,OACdC,cAAe,WACf5xB,MAAM,EACN6xB,MAAOC,IACN,GAAkB,YAAbA,EAAIgE,GAAGrS,GAAmB,CAC9B,IAAImB,EAAWkN,EAAIlN,MAAMxpB,OAAS02B,EAAIlN,MAAQ,CAAEkN,EAAIz3B,MACnDgd,EAAW,GACZuN,EAAMvpB,SAAShB,IACdgd,EAAS3a,KAAM4a,GAAgB,CAAE1b,KAAM,EAAuBvB,EAAKO,QAAQE,MAAQE,OAAQX,EAAKW,UAChGX,EAAKikB,QAAQ,IAEd3hB,QAAQ4a,IAAKF,GAAWvb,MAAM,IAAMgc,IAAgB,IACrD,KAMHuT,IAAqB,IAItB7yB,OAAOsrB,iBAAkB,UAAWtG,IACpChlB,OAAOsrB,iBAAkB,QAAStG,IAGlC,eAAiB,CAChBuY,UAAW,CAAEpV,MAAO,YAIrBhkB,QAAQ4a,IAAK,CAAEuO,KAAuBkP,KAAwBl5B,MAAMc,UAEnE,MAAMo5B,EAAe,KACf7J,GACJ,EAAsBA,GAClB1iB,GAAYoS,SAChBjC,GAAc,CAAEhe,MAAM,GAAQ,EAI1BqkB,EAAoBrjB,YACLq5B,GAA0D,iBAAnC/P,EAAYjG,qBAC/CiW,GAAkE,iBAAzC/J,EAAQ,GAAGnxB,OAAOilB,uBAGlDkW,EAAWphB,UAAUuJ,OAAO,UAC5B9lB,OAAOs1B,oBAAqB,QAAS7N,GAChCgW,GACJnQ,KACDkQ,IACD,EAGKG,EAAkB/vB,GAAE,gBACvB+lB,QAA0B,IAAmB,QAAKvoB,IAAiB4b,GAAiB5b,KACpFsiB,QAAwB,QAAKjjB,IAC7BgzB,EAAkB,IAAyB/P,GAAsD,iBAAjCA,EAAYkQ,kBAC5EF,EAAkB,IAAoBva,MAAM+E,QAASyL,IAAaA,EAAQ,IAAmD,iBAAvCA,EAAQ,GAAGnxB,OAAOo7B,kBAE3Gxb,GAAY,WAAY8V,EAAgB,eAAiB,sBACzDvS,GAAY,QAAQ,GAAO,GAEtB8X,GAAiBC,GACrBC,EAAWphB,UAAUwG,IAAI,UACzB/iB,OAAOsrB,iBAAkB,QAAS7D,IAGlC+V,IAEDpb,GAAY,+BAA+BkQ,EAASrS,kCAAgG,MAAzDqS,EAASuL,eAAiB,GAAMvL,EAASwL,aAAsB,OAC1J1b,GAAY,4BACZwV,GAAW,CAAI,GAGhB,CA5jBD,cC9iIKmG,QAAQC,UAAU3H,yBACtB0H,QAAQC,UAAU3H,uBAAyB,SAAU4H,GACpDA,EAAsC,IAArBC,UAAUt7B,UAAwBq7B,EAEnD,IAAIh6B,EAASixB,KAAKiJ,WACjBC,EAAsBp+B,OAAOq+B,iBAAiBp6B,EAAQ,MACtDq6B,EAAuBC,SAASH,EAAoBI,iBAAiB,qBACrEC,EAAwBF,SAASH,EAAoBI,iBAAiB,sBACtEE,EAAUxJ,KAAKyJ,UAAY16B,EAAO06B,UAAY16B,EAAOzC,UACrDo9B,EAAc1J,KAAKyJ,UAAY16B,EAAO06B,UAAYzJ,KAAKyG,aAAe2C,EAAyBr6B,EAAOzC,UAAYyC,EAAO03B,aACzHkD,EAAW3J,KAAK4J,WAAa76B,EAAO66B,WAAa76B,EAAO86B,WACxDC,EAAa9J,KAAK4J,WAAa76B,EAAO66B,WAAa5J,KAAKwG,YAAc+C,EAA0Bx6B,EAAO86B,WAAa96B,EAAOy3B,YAC3HuD,EAAeP,IAAYE,GAEvBF,GAAWE,IAAeX,IAC9Bh6B,EAAOzC,UAAY0zB,KAAKyJ,UAAY16B,EAAO06B,UAAY16B,EAAO03B,aAAe,EAAI2C,EAAuBpJ,KAAKyG,aAAe,IAGxHkD,GAAYG,IAAcf,IAC9Bh6B,EAAO86B,WAAa7J,KAAK4J,WAAa76B,EAAO66B,WAAa76B,EAAOy3B,YAAc,EAAI+C,EAAwBvJ,KAAKwG,YAAc,IAG1HgD,GAAWE,GAAcC,GAAYG,KAAef,GACxD/I,KAAKgK,eAAeD,EAEtB,4BC5BGE,EAA2B,CAAC,EAGhC,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqBpkB,IAAjBqkB,EACH,OAAOA,EAAaC,QAGrB,IAAIC,EAASL,EAAyBE,GAAY,CAGjDE,QAAS,CAAC,GAOX,OAHAE,EAAoBJ,GAAUK,KAAKF,EAAOD,QAASC,EAAQA,EAAOD,QAASH,GAGpEI,EAAOD,OACf,CAGAH,EAAoBO,EAAIF,EJzBpBhgC,EAAW,GACf2/B,EAAoBQ,EAAI,CAACC,EAAQC,EAAUC,EAAIC,KAC9C,IAAGF,EAAH,CAMA,IAAIG,EAAe5hB,IACnB,IAAS9D,EAAI,EAAGA,EAAI9a,EAASmD,OAAQ2X,IAAK,CAGzC,IAFA,IAAKulB,EAAUC,EAAIC,GAAYvgC,EAAS8a,GACpC2lB,GAAY,EACPC,EAAI,EAAGA,EAAIL,EAASl9B,OAAQu9B,MACpB,EAAXH,GAAsBC,GAAgBD,IAAa5jB,OAAOC,KAAK+iB,EAAoBQ,GAAGQ,OAAOjuB,GAASitB,EAAoBQ,EAAEztB,GAAK2tB,EAASK,MAC9IL,EAAShV,OAAOqV,IAAK,IAErBD,GAAY,EACTF,EAAWC,IAAcA,EAAeD,IAG7C,GAAGE,EAAW,CACbzgC,EAASqrB,OAAOvQ,IAAK,GACrB,IAAI8lB,EAAIN,SACE9kB,IAANolB,IAAiBR,EAASQ,EAC/B,CACD,CACA,OAAOR,CAnBP,CAJCG,EAAWA,GAAY,EACvB,IAAI,IAAIzlB,EAAI9a,EAASmD,OAAQ2X,EAAI,GAAK9a,EAAS8a,EAAI,GAAG,GAAKylB,EAAUzlB,IAAK9a,EAAS8a,GAAK9a,EAAS8a,EAAI,GACrG9a,EAAS8a,GAAK,CAACulB,EAAUC,EAAIC,EAqBjB,EKzBdZ,EAAoBphB,EAAKwhB,IACxB,IAAIc,EAASd,GAAUA,EAAOe,WAC7B,IAAOf,EAAiB,QACxB,IAAM,EAEP,OADAJ,EAAoBoB,EAAEF,EAAQ,CAAEp5B,EAAGo5B,IAC5BA,CAAM,ECLdlB,EAAoBoB,EAAI,CAACjB,EAASkB,KACjC,IAAI,IAAItuB,KAAOsuB,EACXrB,EAAoBsB,EAAED,EAAYtuB,KAASitB,EAAoBsB,EAAEnB,EAASptB,IAC5EiK,OAAOukB,eAAepB,EAASptB,EAAK,CAAEyuB,YAAY,EAAM5I,IAAKyI,EAAWtuB,IAE1E,ECNDitB,EAAoByB,EAAI,WACvB,GAA0B,iBAAfC,WAAyB,OAAOA,WAC3C,IACC,OAAO5L,MAAQ,IAAI6L,SAAS,cAAb,EAChB,CAAE,MAAOnb,GACR,GAAsB,iBAAX5lB,OAAqB,OAAOA,MACxC,CACA,CAPuB,GCAxBo/B,EAAoBsB,EAAI,CAACvkB,EAAKnB,IAAUoB,OAAO4hB,UAAU7H,eAAeuJ,KAAKvjB,EAAKnB,SCKlF,IAAIgmB,EAAkB,CACrB,IAAK,GAaN5B,EAAoBQ,EAAEO,EAAKc,GAA0C,IAA7BD,EAAgBC,GAGxD,IAAIC,EAAuB,CAACC,EAA4B5gB,KACvD,IAGI8e,EAAU4B,GAHTnB,EAAUsB,EAAaC,GAAW9gB,EAGhBhG,EAAI,EAC3B,GAAGulB,EAAS5V,MAAMe,GAAgC,IAAxB+V,EAAgB/V,KAAa,CACtD,IAAIoU,KAAY+B,EACZhC,EAAoBsB,EAAEU,EAAa/B,KACrCD,EAAoBO,EAAEN,GAAY+B,EAAY/B,IAGhD,GAAGgC,EAAS,IAAIxB,EAASwB,EAAQjC,EAClC,CAEA,IADG+B,GAA4BA,EAA2B5gB,GACrDhG,EAAIulB,EAASl9B,OAAQ2X,IACzB0mB,EAAUnB,EAASvlB,GAChB6kB,EAAoBsB,EAAEM,EAAiBC,IAAYD,EAAgBC,IACrED,EAAgBC,GAAS,KAE1BD,EAAgBC,GAAW,EAE5B,OAAO7B,EAAoBQ,EAAEC,EAAO,EAGjCyB,EAAqBC,KAA8B,wBAAIA,KAA8B,yBAAK,GAC9FD,EAAmBz+B,QAAQq+B,EAAqBpzB,KAAK,KAAM,IAC3DwzB,EAAmBp9B,KAAOg9B,EAAqBpzB,KAAK,KAAMwzB,EAAmBp9B,KAAK4J,KAAKwzB,QC7CvF,IAAIE,EAAsBpC,EAAoBQ,OAAE3kB,EAAW,CAAC,KAAK,IAAOmkB,EAAoB,QAC5FoC,EAAsBpC,EAAoBQ,EAAE4B","sources":["webpack://audioMotion/webpack/runtime/chunk loaded","webpack://audioMotion/./src/file-explorer.js","webpack://audioMotion/./src/index.js","webpack://audioMotion/./src/scrollIntoViewIfNeeded-polyfill.js","webpack://audioMotion/webpack/bootstrap","webpack://audioMotion/webpack/runtime/compat get default export","webpack://audioMotion/webpack/runtime/define property getters","webpack://audioMotion/webpack/runtime/global","webpack://audioMotion/webpack/runtime/hasOwnProperty shorthand","webpack://audioMotion/webpack/runtime/jsonp chunk loading","webpack://audioMotion/webpack/startup"],"sourcesContent":["var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","/**\n * audioMotion\n * File explorer module\n *\n * https://github.com/hvianna/audioMotion.js\n * Copyright (C) 2019-2024 Henrique Vianna <hvianna@gmail.com>\n */\n\nconst URL_ORIGIN            = location.origin + location.pathname,\n      defaultRoot           = '/music',\n\t  isElectron            = 'electron' in window,\n\t  isWindows             = isElectron && /Windows/.test( navigator.userAgent ),\n\t  supportsFileSystemAPI = !! window.showDirectoryPicker, // does browser support File System API?\n\t  openFolderMsg         = 'Click to open a new root folder',\n\t  noFileServerMsg       = 'No music found on server and no browser support for File System API';\n\nconst MODE_NODE = 1,  // Electron app or custom node.js file server\n\t  MODE_WEB  = 0,  // standard web server\n\t  MODE_FILE = -1; // local access via file://\n\nlet currentPath       = [],    // array of { dir: <string>, scrollTop: <number>, handle: <FileSystemHandle> }\n\tcurrentDirHandle,          // for File System API accesses\n\tdblClickCallback,\n\tenterDirCallback,\n\tfileExtensions    = /.*/,\n\tmounts            = [],\n\tnodeServer        = false, // using our custom server? (node server or Electron app)\n\tui_path,\n\tui_files,\n\tserverMode,\n\thasServerMedia    = false, // music directory found on server\n\tuseFileSystemAPI  = false; // use FileSystem API (default on file:// mode or no media found on server)\n\n/**\n * Updates the file explorer user interface\n *\n * @param {object} directory content returned by the node server or parseDirectory()\n * @param {number} scrollTop scroll position for the filelist container\n */\nfunction updateUI( content, scrollTop ) {\n\n\tui_path.innerHTML = '';\n\tui_files.innerHTML = '';\n\tui_files.style.backgroundImage = '';\n\n\tconst addListItem = ( item, type ) => {\n\t\tconst li = document.createElement('li'),\n\t\t\t  fileName = item.name || item;\n\n\t\tli.dataset.type = fileName.match(/\\.(m3u|m3u8)$/) !== null && type == 'file' ? 'list' : type;\n\t\tli.dataset.path = fileName;\n\t\tli.innerText = fileName;\n\t\tli.handle = item.handle; // for File System API accesses\n\n\t\tui_files.append( li );\n\t}\n\tconst setFileExplorerBgImage = src => ui_files.style.backgroundImage = 'linear-gradient( #fff9 0%, #fff9 100% )' + ( src ? `, url('${ src }')` : '' );\n\n\tif ( mounts.length == 0 )\n\t\tui_path.innerHTML = noFileServerMsg;\n\n\t// breadcrumbs\n\tcurrentPath.forEach( ( { dir }, index ) => {\n\t\tui_path.innerHTML += `<li data-depth=\"${ currentPath.length - index - 1 }\">${dir}</li> ${ isWindows ? '\\\\' : dir == '/' ? '' : '/' } `;\n\t});\n\n\t// mounting points\n\tmounts.forEach( mount => {\n\t\tui_files.innerHTML += `<li data-type=\"mount\" ${ useFileSystemAPI && ! currentDirHandle ? 'class=\"full-panel\"' : '' } data-path=\"${mount}\">[ ${mount} ]</li>`;\n\t});\n\n\t// link to parent directory\n\tif ( currentPath.length > 1 )\n\t\tui_files.innerHTML += '<li data-type=\"dir\" data-path=\"..\">[ parent folder ]</li>';\n\n\t// current directory contents\n\tif ( content ) {\n\t\tconst { cover, dirs, files } = content;\n\n\t\tif ( dirs )\n\t\t\tdirs.forEach( dir => addListItem( dir, 'dir' ) );\n\n\t\tif ( files )\n\t\t\tfiles.forEach( file => addListItem( file, 'file' ) );\n\n\t\tif ( useFileSystemAPI && cover ) {\n\t\t\tcover.handle.getFile().then( fileBlob => {\n\t\t\t\tconst imgsrc = URL.createObjectURL( fileBlob );\n\t\t\t\tsetFileExplorerBgImage( imgsrc );\n//\t\t\t\tURL.revokeObjectURL( imgsrc );\n\t\t\t});\n\t\t}\n\t\telse\n\t\t\tsetFileExplorerBgImage( cover ? makePath( cover ) : '' );\n\t}\n\n\t// restore scroll position when provided (returning from subdirectory)\n\tui_files.scrollTop = scrollTop || 0;\n}\n\n/**\n * Enters a subdirectory\n *\n * @param {string} [target]    directory name (if empty will open the current path)\n * @param {number} [scrollTop] scrollTop attribute for the filelist container\n * @returns {Promise<boolean>} A promise that resolves to true if the directory change was successful, or false otherwise\n */\nfunction enterDir( target, scrollTop ) {\n\n\tlet prev,\n\t\turl,\n\t\thandle = ! target || typeof target == 'string' ? null : target;\n\n\tif ( handle )\n\t\ttarget = handle.name;\n\n\tif ( target ) {\n\t\tif ( target == '..' ) {\n\t\t\tprev = currentPath.pop(); // remove last directory from currentPath; `prev` is used to restore scrollTop\n\t\t\tconst parent = currentPath[ currentPath.length - 1 ];\n\t\t\tif ( parent && parent.handle )\n\t\t\t\thandle = parent.handle;\n\t\t}\n\t\telse\n\t\t\tcurrentPath.push( { dir: target, scrollTop: ui_files.scrollTop, handle } );\n\t}\n\n\tui_files.innerHTML = '<li>Loading...</li>';\n\n\turl = makePath();\n\n\treturn new Promise( async resolve => {\n\n\t\tconst parseContent = content => {\n\t\t\tif ( content !== false ) {\n\t\t\t\tif ( ! nodeServer || useFileSystemAPI )\n\t\t\t\t\tcontent = parseDirectory( content );\n\t\t\t\tupdateUI( content, scrollTop || ( prev && prev.scrollTop ) );\n\t\t\t\tif ( enterDirCallback )\n\t\t\t\t\tenterDirCallback( currentPath );\n\t\t\t\tresolve( true );\n\t\t\t}\n\t\t\tresolve( false );\n\t\t}\n\n\t\tif ( currentDirHandle ) { // File System API\n\t\t\tif ( handle )\n\t\t\t\tcurrentDirHandle = handle;\n\n\t\t\tlet content = [];\n\t\t\tfor await ( const p of currentDirHandle.entries() )\n\t\t\t\tcontent.push( p );\n\t\t\tparseContent( content );\n\t\t}\n\t\telse {\n\t\t\tfetch( url )\n\t\t\t\t.then( response => {\n\t\t\t\t\tif ( response.status == 200 ) {\n\t\t\t\t\t\tif ( nodeServer )\n\t\t\t\t\t\t\treturn response.json();\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\treturn response.text();\n\t\t\t\t\t}\n\t\t\t\t\treturn false;\n\t\t\t\t})\n\t\t\t\t.then( content => parseContent( content ) )\n\t\t\t\t.catch( () => resolve( false ) );\n\t\t}\n\t});\n}\n\n/**\n * Climbs up the current path (breadcrumbs navigation)\n *\n * @param {number} depth  how many levels to climb up\n */\nfunction resetPath( depth ) {\n\n\tlet prev;\n\n\twhile ( depth > 0 ) {\n\t\tprev = currentPath.pop();\n\t\tdepth--;\n\t}\n\n\tconst parent = currentPath[ currentPath.length - 1 ];\n\tif ( parent && parent.handle ) {\n\t\tcurrentDirHandle = parent.handle;\n\t\tprev = null;\n\t}\n\n\tenterDir( prev, prev && prev.scrollTop );\n}\n\n/* ******************* Public functions: ******************* */\n\n/**\n * Generates full path for a file or directory\n *\n * @param {string} fileName\n * @param {boolean} if `true` does not prefix path with server route\n * @returns {string} full path to filename\n */\nexport function makePath( fileName, noPrefix ) {\n\n\tlet fullPath = '';\n\n\tcurrentPath.forEach( ( { dir } ) => {\n\t\tfullPath += dir + ( dir == '/' ? '' : '/' ); // avoid extra slash after the root directory\n\t});\n\n\tif ( fileName )\n\t\tfullPath += fileName;\n\n\tfullPath = fullPath.replace( /#/g, '%23' ); // replace any '#' character in the filename for its URL-safe code\n\n\tif ( isElectron ) {\n\t\tfullPath = fullPath.replace( /\\//g, '%2f' );\n\t\tif ( ! noPrefix )\n\t\t\tfullPath = ( fileName ? '/getFile/' : '/getDir/' ) + fullPath;\n\t}\n\telse if ( serverMode == MODE_WEB )\n\t\tfullPath = URL_ORIGIN + fullPath;\n\n\treturn fullPath;\n}\n\n/**\n * Returns current folder's file list\n *\n * @param {string} [selector='li']  optional CSS selector\n * @returns {array} list of music files and playlists only\n */\nexport function getFolderContents( selector = 'li' ) {\n\n\tlet contents = [];\n\n\tui_files.querySelectorAll( selector ).forEach( entry => {\n\t\tif ( ['file', 'list'].includes( entry.dataset.type ) )\n\t\t\tcontents.push( { file: makePath( entry.dataset.path ), handle: entry.handle, type: entry.dataset.type } );\n\t});\n\treturn contents;\n}\n\n/**\n * Resolve a given filename and return the corresponding FileSystemFileHandle\n *\n * @param {string} path to filename (must be relative to currentPath)\n * @returns {FileSystemFileHandle}\n */\nexport async function getHandle( pathname ) {\n\tconst workPath   = [ ...currentPath ],\n\t\t  targetPath = pathname.split('/');\n\n\tlet handle = workPath[ workPath.length - 1 ].handle;\n\n\twhile ( targetPath.length > 1 ) {\n\t\tconst dirName = targetPath.shift();\n\t\tif ( dirName == '..' ) {\n\t\t\tworkPath.pop();\n\t\t\thandle = workPath[ workPath.length - 1 ].handle;\n\t\t}\n\t\telse {\n\t\t\thandle = await handle.getDirectoryHandle( dirName );\n\t\t\tworkPath.push( { handle } );\n\t\t}\n\t}\n\n\treturn await handle.getFileHandle( targetPath.shift() );\n}\n\n/**\n * Returns user's home path (for Electron only)\n *\n * @returns {array} array of { dir: <string>, scrollTop: <number> }\n */\nexport async function getHomePath() {\n\n\tconst response = await fetch( '/getHomeDir' ),\n\t\t  homeDir  = await response.text();\n\n\tlet homePath = [];\n\tfor ( const dir of homeDir.split( isWindows ? '\\\\' : '/' ) )\n\t\thomePath.push( { dir, scrollTop: 0 } );\n\n\treturn homePath;\n}\n\n/**\n * Returns current path object\n *\n * @returns {array} array of { dir: <string>, scrollTop: <number> }\n **/\nexport function getPath() {\n\treturn currentPath;\n}\n\n/**\n * Parses the list of files off a web server directory index\n *\n * @param {string}  content HTML body of a web server directory listing\n * @returns {array} an array of objects representing each link found in the listing, with its full uri and filename only\n */\nexport function parseWebIndex( content ) {\n\n\tconst entries = content.match( /href=\"[^\"]*\"[^>]*>[^<]*<\\/a>/gi ); // locate links\n\n\tlet listing = [];\n\n\tfor ( const entry of entries ) {\n\t\tconst [ , uri, file ] = entry.match( /href=\"([^\"]*)\"[^>]*>\\s*([^<]*)<\\/a>/i );\n\t\tlisting.push( { uri, file } );\n\t}\n\n\treturn listing;\n}\n\n/**\n * Parses filenames from standard web server or File System API directory listing\n *\n * @param {string}   content HTML body of a web server directory listing\n * @returns {object} folder/cover image, list of directories, list of files\n */\nexport function parseDirectory( content ) {\n\n\tconst coverExtensions = /\\.(jpg|jpeg|webp|avif|png|gif|bmp)$/i;\n\n\tlet files = [],\n\t\tdirs  = [],\n\t\timgs  = [];\n\n\t// helper function\n\tconst findImg = ( arr, pattern ) => {\n\t\tconst regexp = new RegExp( `${pattern}.*${coverExtensions.source}`, 'i' );\n\t\treturn arr.find( el => ( el.name || el ).match( regexp ) );\n\t}\n\n\tif ( useFileSystemAPI ) {\n\t\tfor ( const [ name, handle ] of content ) {\n\t\t\tif ( handle instanceof FileSystemDirectoryHandle )\n\t\t\t\tdirs.push( { name, handle } );\n\t\t\telse if ( handle instanceof FileSystemFileHandle ) {\n\t\t\t\tif ( name.match( coverExtensions ) )\n\t\t\t\t\timgs.push( { name, handle } );\n\t\t\t\tif ( name.match( fileExtensions ) )\n\t\t\t\t\tfiles.push( { name, handle } );\n\t\t\t}\n\t\t}\n\t}\n\telse {\n\t\tfor ( const { uri, file } of parseWebIndex( content ) ) {\n\t\t\tif ( uri.substring( uri.length - 1 ) == '/' ) {\n\t\t\t\tif ( ! file.match( /(parent directory|\\.\\.)/i ) ) {\n\t\t\t\t\tif ( file.substring( file.length - 1 ) == '/' )\n\t\t\t\t\t\tdirs.push( file.substring( 0, file.length - 1 ) );\n\t\t\t\t\telse\n\t\t\t\t\t\tdirs.push( file );\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif ( file.match( coverExtensions ) )\n\t\t\t\t\timgs.push( file );\n\t\t\t\tif ( file.match( fileExtensions ) )\n\t\t\t\t\tfiles.push( file );\n\t\t\t}\n\t\t}\n\t}\n\n\tconst cover = findImg( imgs, 'cover' ) || findImg( imgs, 'folder' ) || findImg( imgs, 'front' ) || imgs[0];\n\n\tconst customSort = ( a, b ) => {\n\t\tconst collator = new Intl.Collator(), // for case-insensitive sorting - https://stackoverflow.com/a/40390844/2370385\n\t\t\t  isObject = typeof a == 'object';\n\n\t\treturn collator.compare( ...( isObject ? [ a.name, b.name ] : [ a, b ] ) );\n\t}\n\n\treturn { cover, dirs: dirs.sort( customSort ), files: files.sort( customSort ) }\n}\n\n/**\n * Update the contents of the current directory\n */\nexport function refresh() {\n\tenterDir( null, ui_files.scrollTop );\n}\n\n/**\n * Set or change the file extensions recognized by the file explorer\n *\n * @param {array}\n */\nexport function setFileExtensions( validExtensions ) {\n\tfileExtensions = new RegExp( '\\\\.(' + validExtensions.join('|') + ')$', 'i' );\n}\n\n/**\n * Set current path\n *\n * @param {array} path\tarray of { dir: <string>, scrollTop: <number>, handle?: FileSystemDirectoryHandle }\n * @returns {boolean}\n */\nexport async function setPath( path ) {\n\tif ( ! path )\n\t\treturn false;\n\n\tconst savedPath = [ ...currentPath ],\n\t\t  finalDir  = path[ path.length - 1 ];\n\n\tcurrentPath = path;\n\n\tif ( finalDir && finalDir.handle )\n\t\tcurrentDirHandle = finalDir.handle;\n\n\tconst success = await enterDir();\n\n\tif ( ! success )\n\t\tcurrentPath = savedPath;\n\n\treturn success;\n}\n\n/**\n * Switch between server and local mode\n *\n * @param {object} new path\n */\nexport function switchMode( newPath ) {\n\tuseFileSystemAPI = ! useFileSystemAPI;\n\n\tcurrentPath = [];\n\tcurrentDirHandle = null;\n\tmounts = [ useFileSystemAPI ? openFolderMsg : defaultRoot ];\n\n\tif ( newPath )\n\t\tsetPath( newPath );\n\telse\n\t\tupdateUI();\n}\n\n\n/**\n * Constructor function\n *\n * @param {Element} container  DOM element where the file explorer should be inserted\n * @param {object} [options]   { onDblClick, onEnterDir, rootPath }\n * @returns {Promise<array>}   A promise with the server status and the filelist's DOM element\n */\nexport function create( container, options = {} ) {\n\n\tlet startUpTimer;\n\n\tui_path = document.createElement('ul');\n\tui_path.className = 'breadcrumb';\n\tcontainer.append( ui_path );\n\n\tui_files = document.createElement('ul');\n\tui_files.className = 'filelist';\n\tcontainer.append( ui_files );\n\n\tstartUpTimer = setTimeout( () => {\n\t\tui_path.innerHTML = 'Waiting for server...';\n\t}, 5000 );\n\n\tui_path.innerHTML = 'Initializing... please wait...';\n\n\tui_path.addEventListener( 'click', async function( e ) {\n\t\tif ( e.target && e.target.nodeName == 'LI' ) {\n\t\t\tresetPath( e.target.dataset.depth );\n\t\t}\n\t});\n\n\tui_files.addEventListener( 'click', async function( e ) {\n\t\tconst item = e.target;\n\t\tif ( item && item.nodeName == 'LI' ) {\n\t\t\tif ( item.dataset.type == 'dir' )\n\t\t\t\tenterDir( item.handle || item.dataset.path );\n\t\t\telse if ( item.dataset.type == 'mount' ) {\n\t\t\t\tif ( useFileSystemAPI ) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tcurrentDirHandle = await window.showDirectoryPicker({ startIn: 'music' });\n\t\t\t\t\t\tcurrentPath = []; // not cleared if directory picker is cancelled by user\n\t\t\t\t\t\tenterDir( currentDirHandle );\n\t\t\t\t\t}\n\t\t\t\t\tcatch (e) {\n\t\t\t\t\t\t// avoid console error when user cancels the directory picker window\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tcurrentPath = [];\n\t\t\t\t\tenterDir( item.dataset.path );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n\n\tui_files.addEventListener( 'dblclick', function( e ) {\n\t\tconst item = e.target;\n\t\tif ( item && item.nodeName == 'LI' ) {\n\t\t\tif ( dblClickCallback && ['file','list'].includes( item.dataset.type ) )\n\t\t\t\tdblClickCallback( { file: makePath( item.dataset.path ), handle: item.handle }, e );\n\t\t}\n\t});\n\n\tif ( typeof options.onDblClick == 'function' )\n\t\tdblClickCallback = options.onDblClick;\n\n\tif ( typeof options.onEnterDir == 'function' )\n\t\tenterDirCallback = options.onEnterDir;\n\n\tif ( options.fileExtensions )\n\t\tsetFileExtensions( options.fileExtensions );\n\n\treturn new Promise( resolve => {\n\t\tfetch( '/serverInfo' )\n\t\t\t.then( response => {\n\t\t\t\treturn response.text();\n\t\t\t})\n\t\t\t.then( async content => {\n\t\t\t\tclearTimeout( startUpTimer );\n\t\t\t\tif ( content.startsWith('audioMotion') ) {\n\t\t\t\t\tnodeServer = true;\n\t\t\t\t\tserverMode = MODE_NODE;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t// no response for our custom query, so it's probably running on a standard web server\n\t\t\t\t\tserverMode = MODE_WEB;\n\t\t\t\t}\n\n\t\t\t\tif ( serverMode == MODE_NODE && isElectron ) {\n\t\t\t\t\tconst response = await fetch( '/getMounts' );\n\t\t\t\t\tmounts = await response.json();\n\t\t\t\t\tsetPath( await getHomePath() ); // on Electron start at user's home by default\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t// web or custom server\n\t\t\t\t\tmounts = [ options.rootPath || defaultRoot ];\n\t\t\t\t\thasServerMedia = await enterDir( mounts[0] );\n\n\t\t\t\t\tif ( options.forceFileSystemAPI && supportsFileSystemAPI || ! hasServerMedia ) {\n\t\t\t\t\t\t// local file system requested or no music directory on server - use File System API if supported\n\t\t\t\t\t\tcurrentPath = [];\n\t\t\t\t\t\tif ( supportsFileSystemAPI ) {\n\t\t\t\t\t\t\tmounts = [ openFolderMsg ];\n\t\t\t\t\t\t\tuseFileSystemAPI = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tmounts = [];\n\t\t\t\t\t\tupdateUI();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tresolve( { serverMode, useFileSystemAPI, hasServerMedia, filelist: ui_files, serverSignature: serverMode == MODE_WEB ? 'Standard web server' : content } );\n\t\t\t})\n\t\t\t.catch( err => {\n\t\t\t\t// if the fetch fails, it's probably running in file:// mode\n\t\t\t\tclearTimeout( startUpTimer );\n\t\t\t\tserverMode = MODE_FILE;\n\t\t\t\tif ( supportsFileSystemAPI ) {\n\t\t\t\t\tmounts = [ openFolderMsg ];\n\t\t\t\t\tuseFileSystemAPI = true;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t\tmounts = [];\n\t\t\t\tupdateUI();\n\t\t\t\tresolve( { serverMode, useFileSystemAPI, filelist: ui_files } );\n\t\t\t});\n\t});\n\n}\n","/**\n *                    ░    ░          ░     ░                ░\n *                    ░               ░░   ░░         ░\n *   ░░░   ░   ░   ░░░░   ░░    ░░░   ░ ░ ░ ░   ░░░  ░░░    ░░    ░░░   ░░░░\n *      ▒  ▒   ▒  ▒   ▒    ▒   ▒   ▒  ▒  ▒  ▒  ▒   ▒  ▒      ▒   ▒   ▒  ▒   ▒\n *   ▒▒▒▒  ▒   ▒  ▒   ▒    ▒   ▒   ▒  ▒     ▒  ▒   ▒  ▒      ▒   ▒   ▒  ▒   ▒\n *  ▓   ▓  ▓   ▓  ▓   ▓    ▓   ▓   ▓  ▓     ▓  ▓   ▓  ▓  ▓   ▓   ▓   ▓  ▓   ▓\n *   ▓▓▓▓   ▓▓▓▓   ▓▓▓▓  ▓▓▓▓▓  ▓▓▓   ▓     ▓   ▓▓▓    ▓▓  ▓▓▓▓▓  ▓▓▓   ▓   ▓\n *\n * audioMotion | High-resolution real-time audio spectrum analyzer and music player\n *\n * https://github.com/hvianna/audioMotion.js\n *\n * @author    Henrique Vianna <hvianna@gmail.com>\n * @copyright (c) 2018-2024 Henrique Avila Vianna\n * @license   AGPL-3.0-or-later\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport AudioMotionAnalyzer from 'audiomotion-analyzer';\nimport packageJson from '../package.json';\nimport * as fileExplorer from './file-explorer.js';\nimport * as mm from 'music-metadata-browser';\nimport './scrollIntoViewIfNeeded-polyfill.js';\nimport { get, set, del } from 'idb-keyval';\n\nimport Sortable, { MultiDrag } from 'sortablejs';\nSortable.mount( new MultiDrag() );\n\nimport notie from 'notie';\nimport './notie.css';\n\nimport './styles.css';\n\nconst isElectron  = 'electron' in window,\n\t  isWindows   = isElectron && /Windows/.test( navigator.userAgent ),\n\t  ROUTE_FILE  = '/getFile/',   // server route to read files anywhere (Electron only)\n\t  ROUTE_COVER = '/getCover/',  // server route to get a folder's cover image (Electron and legacy node server)\n\t  ROUTE_SAVE  = '/savePlist/', // server route to save a file to the filesystem (Electron only)\n\t  URL_ORIGIN  = location.origin + location.pathname,\n\t  VERSION     = packageJson.version;\n\nconst BG_DIRECTORY          = isElectron ? '/getBackground' : 'backgrounds', // folder name (or server route on Electron) for backgrounds\n\t  MAX_METADATA_REQUESTS = 4,\t// max concurrent metadata requests\n\t  MAX_QUEUED_SONGS      = 1000;\n\n// Background option values\nconst BG_DEFAULT = '0',\n\t  BG_BLACK   = '1',\n\t  BG_COVER   = '2',\n\t  BG_IMAGE   = '3',\n\t  BG_VIDEO   = '4';\n\n// Backgrounds folder options\nconst BGFOLDER_NONE   = '0',\n\t  BGFOLDER_SERVER = '1',\n\t  BGFOLDER_LOCAL  = '2';\n\n// Background image fit option values\nconst BGFIT_ADJUST   = '0',\n\t  BGFIT_CENTER   = '1',\n\t  BGFIT_REPEAT   = '2',\n\t  BGFIT_PULSE    = '3',\n\t  BGFIT_ZOOM_IN  = '4',\n\t  BGFIT_ZOOM_OUT = '5',\n\t  BGFIT_WARP     = '6',\n\t  BGFIT_WARP_ANI = '7',\n\t  BGFIT_WARP_ROT = '8';\n\n// Dataset template for playqueue items and audio elements\nconst DATASET_TEMPLATE = {\n\talbum: '',\n\tartist: '',\n\tcodec: '',\n\tcover: '',\n\tduration: '',\n\tfile: '',\n\tquality: '',\n\ttitle: ''\n};\n\n// Channel Layouts\nconst CHANNEL_COMBINED   = 'dual-combined',\n \t  CHANNEL_HORIZONTAL = 'dual-horizontal',\n\t  CHANNEL_SINGLE     = 'single',\n\t  CHANNEL_VERTICAL   = 'dual-vertical';\n\n// Color modes\nconst COLOR_GRADIENT = 'gradient',\n\t  COLOR_INDEX    = 'bar-index',\n\t  COLOR_LEVEL    = 'bar-level';\n\n// Error codes\nconst ERR_ABORT = 20; // AbortError\n\n// Recognized file extensions\nconst FILE_EXT_IMAGE = ['jpg','jpeg','webp','avif','png','gif','bmp'],\n\t  FILE_EXT_MUSIC = ['mp3','flac','m4a','aac','ogg','wav'],\n\t  FILE_EXT_PLIST = ['m3u','m3u8'],\n\t  FILE_EXT_VIDEO = ['mkv','mpg','webm','mp4','avi','mov'];\n\n// File mode access options\nconst FILEMODE_SERVER = 'server',\n\t  FILEMODE_LOCAL  = 'local';\n\n// localStorage and indexedDB keys\nconst KEY_BG_DIR_HANDLE  = 'bgDir',\n\t  KEY_CUSTOM_GRADS   = 'custom-grads',\n\t  KEY_CUSTOM_PRESET  = 'custom-preset',\n\t  KEY_DISABLED_BGFIT = 'disabled-bgfit',\n\t  KEY_DISABLED_GRADS = 'disabled-gradients',\n\t  KEY_DISABLED_MODES = 'disabled-modes',\n\t  KEY_DISABLED_PROPS = 'disabled-properties',\n\t  KEY_DISPLAY_OPTS   = 'display-options',\n\t  KEY_FORCE_FS_API   = 'force-filesystem',\n\t  KEY_GENERAL_OPTS   = 'general-settings',\n\t  KEY_LAST_CONFIG    = 'last-config',\n\t  KEY_LAST_DIR       = 'last-dir',\n\t  KEY_PLAYLISTS      = 'playlists',\n\t  KEY_PLAYQUEUE      = 'playqueue',\n\t  KEY_SENSITIVITY    = 'sensitivity-presets',\n\t  PLAYLIST_PREFIX    = 'pl_';\n\n// Visualization modes\nconst MODE_DISCRETE    = '0',\n\t  MODE_AREA        = '10',\n\t  MODE_LINE        = '101',\n\t  MODE_OCTAVE_FULL = '8',\n\t  MODE_OCTAVE_HALF = '7',\n\t  MODE_OCTAVE_3RD  = '6',\n\t  MODE_OCTAVE_4TH  = '5',\n\t  MODE_OCTAVE_6TH  = '4',\n\t  MODE_OCTAVE_8TH  = '3',\n\t  MODE_OCTAVE_12TH = '2',\n\t  MODE_OCTAVE_24TH = '1';\n\n// Reflex options\nconst REFLEX_OFF  = '0',\n\t  REFLEX_ON   = '1',\n\t  REFLEX_FULL = '2';\n\n// Property keys for Randomize settings\nconst RND_ALPHA       = 'alpha',\n\t  RND_BACKGROUND  = 'nobg',\n\t  RND_BARSPACING  = 'barSp',\n\t  RND_BGIMAGEFIT  = 'imgfit',\n\t  RND_CHNLAYOUT   = 'stereo',\n\t  RND_COLORMODE   = 'colormode',\n\t  RND_FILLOPACITY = 'fill',\n\t  RND_GRADIENT    = 'gradient',\n\t  RND_LEDS        = 'leds',\n\t  RND_LINEWIDTH   = 'line',\n\t  RND_LUMI        = 'lumi',\n\t  RND_MIRROR      = 'mirror',\n\t  RND_MODE        = 'mode',\n\t  RND_OUTLINE     = 'outline',\n\t  RND_PEAKS       = 'peaks',\n\t  RND_PRESETS     = 'presets',\n\t  RND_RADIAL      = 'radial',\n\t  RND_SPIN        = 'spin',\n\t  RND_REFLEX      = 'reflex',\n\t  RND_ROUND       = 'round',\n\t  RND_SPLIT       = 'split';\n\n// Frequency scales\nconst SCALE_BARK   = 'bark',\n\t  SCALE_LINEAR = 'linear',\n\t  SCALE_LOG    = 'log',\n\t  SCALE_MEL    = 'mel';\n\n// Server modes\nconst SERVER_CUSTOM = 1,  // custom server (node or Electron)\n\t  SERVER_FILE   = -1, // local access via file://\n\t  SERVER_WEB    = 0;  // standard web server\n\n// Server configuration file\nconst SERVERCFG_FILE     = 'config.json',\n\t  SERVERCFG_DEFAULTS = {\n\t  \tdefaultAccessMode: FILEMODE_LOCAL,\n\t\tenableLocalAccess: true\n\t  };\n\n// Weighting filters\nconst WEIGHT_NONE = '',\n\t  WEIGHT_A    = 'A',\n\t  WEIGHT_B    = 'B',\n\t  WEIGHT_C    = 'C',\n\t  WEIGHT_D    = 'D',\n\t  WEIGHT_468  = '468';\n\n// User presets placeholders\nconst PRESET_EMPTY  = 'Empty slot',\n\t  PRESET_NONAME = 'No description';\n\n// selector shorthand functions\nconst $  = document.querySelector.bind( document ),\n\t  $$ = document.querySelectorAll.bind( document );\n\n// UI HTML elements\nconst elAlphaBars     = $('#alpha_bars'),\n\t  elAnalyzer      = $('#analyzer'),\t\t\t// analyzer canvas container\n\t  elAnsiBands     = $('#ansi_bands'),\n\t  elBackground    = $('#background'),\n\t  elBalance       = $('#balance'),\n\t  elBarSpace      = $('#bar_space'),\n\t  elBgImageDim    = $('#bg_img_dim'),\n\t  elBgImageFit    = $('#bg_img_fit'),\n\t  elBgLocation    = $('#bg_location'),\n\t  elBgMaxItems    = $('#bg_max_items'),\n\t  elChnLayout     = $('#channel_layout'),\n\t  elColorMode     = $('#color_mode'),\n\t  elContainer     = $('#bg_container'),\t\t// outer container with background image\n\t  elDim           = $('#bg_dim'),\t\t\t// background image/video darkening layer\n\t  elEnableVideo   = $('#enable_video'),\n\t  elEndTimeout    = $('#end_timeout'),\n\t  elFFTsize       = $('#fft_size'),\n\t  elFillAlpha     = $('#fill_alpha'),\n\t  elFPS           = $('#fps'),\n\t  elFreqScale     = $('#freq_scale'),\n\t  elFsHeight      = $('#fs_height'),\n\t  elGradient      = $('#gradient'),\n\t  elGradientRight = $('#gradientRight'),\n\t  elInfoTimeout   = $('#info_timeout'),\n\t  elLedDisplay    = $('#led_display'),\n\t  elLinearAmpl    = $('#linear_amplitude'),\n\t  elLineWidth     = $('#line_width'),\n\t  elLinkGrads     = $('#link_grads'),\n\t  elLoadedPlist   = $('#loaded_playlist'),\n\t  elLoRes         = $('#lo_res'),\n\t  elLumiBars      = $('#lumi_bars'),\n\t  elMaxFPS        = $('#max_fps'),\n\t  elMirror        = $('#mirror'),\n\t  elMode          = $('#mode'),\n\t  elMute          = $('#mute'),\n\t  elNoShadow      = $('#no_shadow'),\n\t  elNoteLabels    = $('#note_labels'),\n\t  elOutline       = $('#outline'),\n\t  elOSD           = $('#osd'),\t\t\t\t// message canvas\n\t  elPIPRatio      = $('#pip_ratio'),\n\t  elPlaylists     = $('#playlists'),\n\t  elRadial        = $('#radial'),\n\t  elRandomMode    = $('#random_mode'),\n\t  elRangeMax      = $('#freq_max'),\n\t  elRangeMin      = $('#freq_min'),\n\t  elReflex        = $('#reflex'),\n\t  elRepeat        = $('#repeat'),\n\t  elRoundBars     = $('#round_bars'),\n\t  elSaveDir       = $('#save_dir'),\n\t  elSaveQueue     = $('#save_queue'),\n\t  elScaleX        = $('#scaleX'),\n\t  elScaleY        = $('#scaleY'),\n\t  elSensitivity   = $('#sensitivity'),\n\t  elShowCount     = $('#show_count'),\n\t  elShowCover     = $('#show_cover'),\n\t  elShowPeaks     = $('#show_peaks'),\n\t  elShowSong      = $('#show_song'),\n\t  elSmoothing     = $('#smoothing'),\n\t  elSource        = $('#source'),\n\t  elSpin\t\t  = $('#spin'),\n\t  elSplitGrad     = $('#split_grad'),\n\t  elTrackTimeout  = $('#track_timeout'),\n\t  elVideo         = $('#video'),\t\t\t// background video\n\t  elVolume        = $('#volume'),\n \t  elWarp          = $('#warp'),\t\t\t\t// \"warp\" effect layer\n \t  elWeighting     = $('#weighting');\n\n// Configuration presets\nconst presets = [\n\t{\n\t\tkey: 'demo',\n\t\tname: 'Demo (random)',\n\t\toptions: {\n\t\t\trandomMode  : 6    // 15 seconds\n\t\t}\n\t},\n\n\t{\n\t\tkey: 'bands',\n\t\tname: 'Octave Bands',\n\t\toptions: {\n\t\t\talphaBars    : 0,\n\t\t\tansiBands    : 0,\n\t\t\tbackground   : BG_COVER,\n\t\t\tbarSpace     : .25,\n\t\t\tbgImageDim   : .3,\n\t\t\tbgImageFit   : BGFIT_ADJUST,\n\t\t\tchannelLayout: CHANNEL_SINGLE,\n\t\t\tcolorMode    : COLOR_GRADIENT,\n\t\t\tfreqMax      : 20000,\n\t\t\tfreqMin      : 25,\n\t\t\tfreqScale    : SCALE_LOG,\n\t\t\tgradient     : 'rainbow',\n\t\t\tledDisplay   : 0,\n\t\t\tlinearAmpl   : 1,\n\t\t\tlumiBars     : 0,\n\t\t\tmirror       : 0,\n\t\t\tmode         : MODE_OCTAVE_12TH,\n\t\t\tnoteLabels   : 1,\n\t\t\toutlineBars  : 0,\n\t\t\tradial       : 0,\n\t\t\trandomMode   : 0,\n\t\t\treflex       : REFLEX_ON,\n\t\t\troundBars    : 0,\n\t\t\tshowPeaks    : 1,\n\t\t\tshowScaleX   : 1,\n\t\t\tshowScaleY   : 0,\n\t\t\tshowSong     : 1,\n\t\t\tsplitGrad    : 0,\n\t\t\tweighting    : WEIGHT_D\n\t\t}\n\t},\n\n\t{\n\t\tkey: 'ledbars',\n\t\tname: 'Classic LED bars',\n\t\toptions: {\n\t\t\talphaBars    : 0,\n\t\t\tansiBands    : 1,\n\t\t\tbackground   : BG_COVER,\n\t\t\tbarSpace     : .25,\n\t\t\tbgImageDim   : .3,\n\t\t\tbgImageFit   : BGFIT_CENTER,\n\t\t\tchannelLayout: CHANNEL_SINGLE,\n\t\t\tcolorMode    : COLOR_GRADIENT,\n\t\t\tfreqMax      : 20000,\n\t\t\tfreqMin      : 25,\n\t\t\tfreqScale    : SCALE_LOG,\n\t\t\tgradient     : 'classic',\n\t\t\tledDisplay   : 1,\n\t\t\tlinearAmpl   : 1,\n\t\t\tlumiBars     : 0,\n\t\t\toutlineBars  : 0,\n\t\t\tmirror       : 0,\n\t\t\tmode         : MODE_OCTAVE_3RD,\n\t\t\tnoteLabels   : 0,\n\t\t\tradial       : 0,\n\t\t\trandomMode   : 0,\n\t\t\treflex       : REFLEX_OFF,\n\t\t\troundBars    : 0,\n\t\t\tshowPeaks    : 1,\n\t\t\tshowScaleX   : 1,\n\t\t\tshowScaleY   : 0,\n\t\t\tshowSong     : 1,\n\t\t\tsplitGrad    : 0,\n\t\t\tweighting    : WEIGHT_D\n\t\t}\n\t},\n\n\t{\n\t\tkey: 'dual',\n\t\tname: 'Dual-channel combined Graph, Bark frequency scale',\n\t\toptions: {\n\t\t\tansiBands    : 0,\n\t\t\tbackground   : BG_COVER,\n\t\t\tbgImageDim   : .3,\n\t\t\tbgImageFit   : BGFIT_CENTER,\n\t\t\tchannelLayout: CHANNEL_COMBINED,\n\t\t\tcolorMode    : COLOR_GRADIENT,\n\t\t\tfillAlpha    : .3,\n\t\t\tfreqMax      : 20000,\n\t\t\tfreqMin      : 20,\n\t\t\tfreqScale    : SCALE_BARK,\n\t\t\tgradient     : 'cool',\n\t\t\tgradientRight: 'dusk',\n\t\t\tlinearAmpl   : 1,\n\t\t\tlineWidth    : 1.5,\n\t\t\tlinkGrads    : 0,\n\t\t\tmirror       : 0,\n\t\t\tmode         : MODE_LINE,\n\t\t\tnoteLabels   : 0,\n\t\t\tradial       : 0,\n\t\t\trandomMode   : 0,\n\t\t\treflex       : REFLEX_OFF,\n\t\t\tshowPeaks    : 0,\n\t\t\tshowScaleX   : 0,\n\t\t\tshowScaleY   : 0,\n\t\t\tshowSong     : 1,\n\t\t\tsplitGrad    : 0,\n\t\t\tweighting    : WEIGHT_D\n\t\t}\n\t},\n\n\t{\n\t\tkey: 'radial',\n\t\tname: 'Radial Color by Level',\n\t\toptions: {\n\t\t\talphaBars    : 1,\n\t\t\tansiBands    : 0,\n\t\t\tbackground   : BG_COVER,\n\t\t\tbarSpace     : .1,\n\t\t\tbgImageDim   : .3,\n\t\t\tbgImageFit   : BGFIT_PULSE,\n\t\t\tchannelLayout: CHANNEL_SINGLE,\n\t\t\tcolorMode    : COLOR_LEVEL,\n\t\t\tfreqMax      : 20000,\n\t\t\tfreqMin      : 20,\n\t\t\tfreqScale    : SCALE_LOG,\n\t\t\tgradient     : 'prism',\n\t\t\tledDisplay   : 0,\n\t\t\tlinearAmpl   : 1,\n\t\t\tlumiBars     : 0,\n\t\t\tmirror       : 0,\n\t\t\tmode         : MODE_OCTAVE_4TH,\n\t\t\tnoteLabels   : 0,\n\t\t\toutlineBars  : 0,\n\t\t\tradial       : 1,\n\t\t\trandomMode   : 0,\n\t\t\tshowPeaks    : 1,\n\t\t\tshowScaleX   : 1,\n\t\t\tshowScaleY   : 0,\n\t\t\tshowSong     : 1,\n\t\t\tspin         : 1,\n\t\t\tsplitGrad    : 0,\n\t\t\tweighting    : WEIGHT_D\n\t\t}\n\t},\n\n\t{\n\t\tkey: 'round',\n\t\tname: 'Round Bars reflex',\n\t\toptions: {\n\t\t\talphaBars    : 0,\n\t\t\tbackground   : BG_COVER,\n\t\t\tbarSpace     : .25,\n\t\t\tbgImageDim   : .3,\n\t\t\tbgImageFit   : BGFIT_WARP_ANI,\n\t\t\tchannelLayout: CHANNEL_SINGLE,\n\t\t\tcolorMode    : COLOR_INDEX,\n\t\t\tfreqMax      : 20000,\n\t\t\tfreqMin      : 20,\n\t\t\tfreqScale    : SCALE_LOG,\n\t\t\tgradient     : 'apple',\n\t\t\tledDisplay   : 0,\n\t\t\tlinearAmpl   : 1,\n\t\t\tlumiBars     : 0,\n\t\t\tmirror       : 0,\n\t\t\tmode         : MODE_OCTAVE_8TH,\n\t\t\tnoteLabels   : 0,\n\t\t\toutlineBars  : 0,\n\t\t\tradial       : 0,\n\t\t\trandomMode   : 0,\n\t\t\treflex       : REFLEX_FULL,\n\t\t\troundBars    : 1,\n\t\t\tshowPeaks    : 0,\n\t\t\tshowScaleX   : 0,\n\t\t\tshowScaleY   : 0,\n\t\t\tshowSong     : 1,\n\t\t\tsplitGrad    : 0,\n\t\t\tweighting    : WEIGHT_D\n\t\t}\n\t},\n\n\t{\n\t\tkey: 'last',\n\t\tname: 'Last session',\n\t\toptions: {}\n\t},\n\n\t{\n\t\tkey: 'default',\n\t\tname: 'Restore defaults',\n\t\toptions: {\n\t\t\talphaBars    : 0,\n\t\t\tansiBands    : 0,\n\t\t\tbackground   : BG_DEFAULT,\n\t\t\tbalance      : 0,\n\t\t\tbarSpace     : 0.1,\n\t\t\tbgImageDim   : 0.5,\n\t\t\tbgImageFit   : BGFIT_CENTER,\n\t\t\tchannelLayout: CHANNEL_SINGLE,\n\t\t\tcolorMode    : COLOR_GRADIENT,\n\t\t\tfillAlpha    : 0.1,\n\t\t\tfreqMax      : 20000,\n\t\t\tfreqMin      : 20,\n\t\t\tfreqScale    : SCALE_LOG,\n\t\t\tgradient     : 'prism',\n\t\t\tgradientRight: 'prism',\n\t\t\tledDisplay   : 0,\n\t\t\tlinearAmpl   : 0,\n\t\t\tlineWidth    : 2,\n\t\t\tlinkGrads    : 0,\n\t\t\tloRes        : 0,\n\t\t\tlumiBars     : 0,\n\t\t\tmirror       : 0,\n\t\t\tmode         : MODE_DISCRETE,\n\t\t\tnoShadow     : 1,\n\t\t\tnoteLabels   : 0,\n\t\t\toutlineBars  : 0,\n\t\t\tradial       : 0,\n\t\t\trandomMode   : 0,\n\t\t\treflex       : REFLEX_OFF,\n\t\t\trepeat       : 0,\n\t\t\troundBars    : 0,\n\t\t\tsensitivity  : 1,\n\t\t\tshowFPS      : 0,\n\t\t\tshowPeaks    : 1,\n\t\t\tshowScaleX   : 1,\n\t\t\tshowScaleY   : 0,\n\t\t\tshowSong     : 1,\n\t\t\tspin         : 2,\n\t\t\tsplitGrad    : 0,\n\t\t\tvolume       : 1,\n\t\t\tweighting    : WEIGHT_NONE\n\t\t}\n\t}\n];\n\n// Gradient definitions\nconst gradients = {\n\tapple:    { name: 'Apple ][', colorStops: [\n\t\t\t\t{ pos: .1667, color: '#61bb46' },\n\t\t\t\t{ pos: .3333, color: '#fdb827' },\n\t\t\t\t{ pos: .5, color: '#f5821f' },\n\t\t\t\t{ pos: .6667, color: '#e03a3e' },\n\t\t\t\t{ pos: .8333, color: '#963d97' },\n\t\t\t\t{ pos: 1, color: '#009ddc' }\n\t\t\t  ], disabled: false },\n\taurora:   { name: 'Aurora', bgColor: '#0e172a', colorStops: [\n\t\t\t\t{ pos: .1, color: 'hsl( 120, 100%, 50% )' },\n\t\t\t\t{ pos:  1, color: 'hsl( 216, 100%, 50% )' }\n\t\t\t  ], disabled: false },\n\tborealis:  { name: 'Borealis', bgColor: '#0d1526', colorStops: [\n\t\t\t\t{ pos: .1, color: 'hsl( 120, 100%, 50% )' },\n\t\t\t\t{ pos: .5, color: 'hsl( 189, 100%, 40% )' },\n\t\t\t\t{ pos:  1, color: 'hsl( 290, 60%, 40% )' }\n\t\t\t  ], disabled: false },\n\tcandy:    { name: 'Candy', bgColor: '#0d0619', colorStops: [\n\t\t\t\t{ pos: .1, color: '#ffaf7b' },\n\t\t\t\t{ pos: .5, color: '#d76d77' },\n\t\t\t\t{ pos: 1, color: '#3a1c71' }\n\t\t\t  ], disabled: false },\n\tclassic:  { name: 'Classic', disabled: false },\n\tcool:     { name: 'Cool', bgColor: '#0b202b', colorStops: [\n\t\t\t\t'hsl( 208, 0%, 100% )',\n\t\t\t\t'hsl( 208, 100%, 35% )'\n\t\t\t  ], disabled: false },\n\tdusk:     { name: 'Dusk', bgColor: '#0e172a', colorStops: [\n\t\t\t\t{ pos: .2, color: 'hsl( 55, 100%, 50% )' },\n\t\t\t\t{ pos:  1, color: 'hsl( 16, 100%, 50% )' }\n\t\t\t  ], disabled: false },\n\tmiami:    { name: 'Miami', bgColor: '#110a11', colorStops: [\n\t\t\t\t{ pos: .024, color: 'rgb( 251, 198, 6 )' },\n\t\t\t\t{ pos: .283, color: 'rgb( 224, 82, 95 )' },\n\t\t\t\t{ pos: .462, color: 'rgb( 194, 78, 154 )' },\n\t\t\t\t{ pos: .794, color: 'rgb( 32, 173, 190 )' },\n\t\t\t\t{ pos: 1, color: 'rgb( 22, 158, 95 )' }\n\t\t\t  ], disabled: false },\n\torient:   { name: 'Orient', bgColor: '#100', colorStops: [\n\t\t\t\t{ pos: .1, color: '#f00' },\n\t\t\t\t{ pos: 1, color: '#600' }\n\t\t\t  ], disabled: false },\n\toutrun:   { name: 'Outrun', bgColor: '#101', colorStops: [\n\t\t\t\t{ pos: 0, color: 'rgb( 255, 223, 67 )' },\n\t\t\t\t{ pos: .182, color: 'rgb( 250, 84, 118 )' },\n\t\t\t\t{ pos: .364, color: 'rgb( 198, 59, 243 )' },\n\t\t\t\t{ pos: .525, color: 'rgb( 133, 80, 255 )' },\n\t\t\t\t{ pos: .688, color: 'rgb( 74, 104, 247 )' },\n\t\t\t\t{ pos: 1, color: 'rgb( 35, 210, 255 )' }\n\t\t\t  ], disabled: false },\n\tpacific:  { name: 'Pacific Dream', bgColor: '#051319', colorStops: [\n\t\t\t\t{ pos: .1, color: '#34e89e' },\n\t\t\t\t{ pos: 1, color: '#0f3443' }\n\t\t\t  ], disabled: false },\n\tprism:    { name: 'Prism', disabled: false },\n\tprism_old: { name: 'Prism (legacy)', colorStops: [\n\t\t\t\t'hsl( 0, 100%, 50% )',\n\t\t\t\t'hsl( 60, 100%, 50% )',\n\t\t\t\t'hsl( 120, 100%, 50% )',\n\t\t\t\t'hsl( 180, 100%, 50% )',\n\t\t\t\t'hsl( 240, 100%, 50% )'\n\t\t\t  ], disabled: true },\n\trainbow:  { name: 'Rainbow', disabled: false },\n\trainbow_old: { name: 'Rainbow (legacy)', dir: 'h', colorStops: [\n\t\t\t\t'hsl( 0, 100%, 50% )',\n\t\t\t\t'hsl( 60, 100%, 50% )',\n\t\t\t\t'hsl( 120, 100%, 50% )',\n\t\t\t\t'hsl( 180, 100%, 47% )',\n\t\t\t\t'hsl( 240, 100%, 58% )',\n\t\t\t\t'hsl( 300, 100%, 50% )',\n\t\t\t\t'hsl( 360, 100%, 50% )'\n\t\t\t  ], disabled: true },\n\tshahabi:  { name: 'Shahabi', bgColor: '#060613', colorStops: [\n\t\t\t\t{ pos: .1, color: '#66ff00' },\n\t\t\t\t{ pos: 1, color: '#a80077' }\n\t\t\t  ], disabled: false },\n\tsummer:   { name: 'Summer', bgColor: '#041919', colorStops: [\n\t\t\t\t{ pos: .1, color: '#fdbb2d' },\n\t\t\t\t{ pos: 1, color: '#22c1c3' }\n\t\t\t  ], disabled: false },\n\tsunset:   { name: 'Sunset', bgColor: '#021119', colorStops: [\n\t\t\t\t{ pos: .1, color: '#f56217' },\n\t\t\t\t{ pos: 1, color: '#0b486b' }\n\t\t\t  ], disabled: false },\n\ttiedye:   { name: 'Tie Dye', colorStops: [\n\t\t\t\t{ pos: .038, color: 'rgb( 15, 209, 165 )' },\n\t\t\t\t{ pos: .208, color: 'rgb( 15, 157, 209 )' },\n\t\t\t\t{ pos: .519, color: 'rgb( 133, 13, 230 )' },\n\t\t\t\t{ pos: .731, color: 'rgb( 230, 13, 202 )' },\n\t\t\t\t{ pos: .941, color: 'rgb( 242, 180, 107 )' }\n\t\t\t  ], disabled: false }\n};\n\n// Visualization modes\nconst modeOptions = [\n\t{ value: MODE_DISCRETE,    text: 'Discrete frequencies',    disabled: false },\n\t{ value: MODE_AREA,        text: 'Area graph',              disabled: false },\n\t{ value: MODE_LINE,        text: 'Line graph',              disabled: false },\n\t{ value: MODE_OCTAVE_FULL, text: 'Octave bands / 10 bands', disabled: false },\n\t{ value: MODE_OCTAVE_HALF, text: '1/2 octave / 20 bands',   disabled: false },\n\t{ value: MODE_OCTAVE_3RD,  text: '1/3 octave / 30 bands',   disabled: false },\n\t{ value: MODE_OCTAVE_4TH,  text: '1/4 octave / 40 bands',   disabled: false },\n\t{ value: MODE_OCTAVE_6TH,  text: '1/6 octave / 60 bands',   disabled: false },\n\t{ value: MODE_OCTAVE_8TH,  text: '1/8 octave / 80 bands',   disabled: false },\n\t{ value: MODE_OCTAVE_12TH, text: '1/12 octave / 120 bands', disabled: false },\n\t{ value: MODE_OCTAVE_24TH, text: '1/24 octave / 240 bands', disabled: false }\n];\n\n// Channel Layout options\nconst channelLayoutOptions = [\n\t[ CHANNEL_SINGLE,     'Singl' ],\n\t[ CHANNEL_COMBINED,   'Comb'  ],\n\t[ CHANNEL_HORIZONTAL, 'Horiz' ],\n\t[ CHANNEL_VERTICAL,   'Vert'  ]\n];\n\n// Randomize options\nconst randomProperties = [\n\t{ value: RND_ALPHA,       text: 'Alpha',          disabled: false },\n\t{ value: RND_MODE,        text: 'Analyzer Mode',  disabled: false },\n\t{ value: RND_BACKGROUND,  text: 'Background',     disabled: false },\n\t{ value: RND_BARSPACING,  text: 'Bar Spacing',    disabled: false },\n\t{ value: RND_BGIMAGEFIT,  text: 'BG Image Fit',   disabled: false },\n\t{ value: RND_CHNLAYOUT,   text: 'Channel Layout', disabled: false },\n\t{ value: RND_COLORMODE,   text: 'Color Mode',     disabled: false },\n\t{ value: RND_FILLOPACITY, text: 'Fill Opacity',   disabled: false },\n\t{ value: RND_GRADIENT,    text: 'Gradients',      disabled: false },\n\t{ value: RND_LEDS,        text: 'LEDs',           disabled: false },\n\t{ value: RND_LINEWIDTH,   text: 'Line Width',     disabled: false },\n\t{ value: RND_LUMI,        text: 'Lumi',           disabled: false },\n\t{ value: RND_MIRROR,      text: 'Mirror',         disabled: false },\n\t{ value: RND_OUTLINE,     text: 'Outline',        disabled: false },\n\t{ value: RND_PEAKS,       text: 'Peaks',          disabled: false },\n\t{ value: RND_RADIAL,      text: 'Radial',         disabled: false },\n\t{ value: RND_SPIN,        text: 'Radial Spin',    disabled: false },\n\t{ value: RND_REFLEX,      text: 'Reflex',         disabled: false },\n\t{ value: RND_ROUND,       text: 'Round',          disabled: false },\n\t{ value: RND_SPLIT,       text: 'Split',          disabled: false },\n\t{ value: RND_PRESETS,     text: 'User Presets',   disabled: true }\n];\n\n// Sensitivity presets\nconst sensitivityDefaults = [\n\t{ min: -70,  max: -20, boost: 1 }, // low\n\t{ min: -85,  max: -25, boost: 1.6 }, // normal\n\t{ min: -100, max: -30, boost: 2.4 }  // high\n];\n\n// On-screen information display options\nconst infoDisplayDefaults = {\n\tinfo  : 5,\t  // display time (secs) when requested via click or keyboard shortcut\n\ttrack : 10,   // display time (secs) on track change\n\tend   : 10,   // display time (secs) at the end of the song\n\tcovers: true, // show album covers in song information\n\tcount : true  // show song number and play queue count\n}\n\n// Background Image Fit options\nconst bgFitOptions = [\n\t{ value: BGFIT_ADJUST,   text: 'Adjust',      disabled: false },\n\t{ value: BGFIT_CENTER,   text: 'Center',      disabled: false },\n\t{ value: BGFIT_PULSE,    text: 'Pulse',       disabled: false },\n\t{ value: BGFIT_REPEAT,   text: 'Repeat',      disabled: false },\n\t{ value: BGFIT_WARP,     text: 'Warp',        disabled: false },\n\t{ value: BGFIT_WARP_ANI, text: 'Warp Drive',  disabled: false },\n\t{ value: BGFIT_WARP_ROT, text: 'Wormhole',    disabled: false },\n\t{ value: BGFIT_ZOOM_IN,  text: 'Zoom In',     disabled: false },\n\t{ value: BGFIT_ZOOM_OUT, text: 'Zoom Out',    disabled: false },\n];\n\n// General settings\nconst generalOptionsElements = [ elBgLocation, elBgMaxItems, elEnableVideo, elFFTsize, elFsHeight, elMaxFPS, elPIPRatio, elSaveDir, elSaveQueue, elSmoothing ];\n\nconst generalOptionsDefaults = {\n\tbgLocation : BGFOLDER_SERVER,\n\tbgMaxItems : 20,\n\tenableVideo: false,\n\tfftSize    : 8192,\n\tfsHeight   : 100,\n\tmaxFPS     : 60,\n\tpipRatio   : 2.35,\n\tsaveDir    : true,\n\tsaveQueue  : true,\n\tsmoothing  : .7,\n}\n\nconst maxFpsOptions = [\n\t[ 30, '30' ],\n\t[ 60, '60' ],\n\t[ 0, 'unlimited' ]\n];\n\nconst pipRatioOptions = [\n\t[ 1, '1:1' ],\n\t[ 1.33, '4:3' ],\n\t[ 1.78, '16:9' ],\n\t[ 2.35, '2.35:1' ],\n\t[ 3.55, '32:9' ]\n];\n\n// Global variables\nlet audioElement = [],\n\taudioMotion,\n\tbgImages = [],\n\tbgVideos = [],\n\tcanvasMsg,\n\tcurrAudio, \t\t\t\t\t// audio element currently in use\n\tcurrentGradient = null,     // gradient that is currently loaded in gradient editor\n\tfastSearchTimeout,\n\tfolderImages = {}, \t\t\t// folder cover images for songs with no picture in the metadata\n\thasServerMedia,\t\t\t\t// music directory found on web server\n\tisFastSearch = false,\n\tisMicSource,\t\t\t\t// flag for microphone input in use\n\tmicStream,\n\tnextAudio, \t\t\t\t\t// audio element loaded with the next song (for improved seamless playback)\n\toverwritePreset = false,    // flag to overwrite user preset during fullscreen\n\tpanNode,\t\t\t\t\t// stereoPanner node for balance control\n\tplaylist, \t\t\t\t\t// play queue\n\tplaylistPos, \t\t\t\t// index to the current song in the queue\n\trandomModeTimer,\n\tserverMode,\n\tskipping = false,\n\tsupportsFileSystemAPI,\t\t// browser supports File System API (may be disabled via config.json)\n\tuseFileSystemAPI,\t\t\t// load music from local device when in web server mode\n\tuserPresets,\n\twaitingMetadata = 0,\n\twasMuted;\t\t\t\t\t// mute status before switching to microphone input\n\nconst canvasCtx  = elOSD.getContext('2d'),\n\t  coverImage = new Image(),\t// cover image for the currently playing song (for canvas rendering)\n\t  pipVideo   = document.createElement('video');\n\n\n// HELPER FUNCTIONS -------------------------------------------------------------------------------\n\n// convert URL-encoded slashes back to regular ASCII\nconst decodeSlashes = ( path, osNative ) => path.replace( /(%2f|\\/)/g, osNative && isWindows ? '\\\\' : '/' );\n\n// convert slashes to their URL-safe encoding for server queries\nconst encodeSlashes = path => path.replace( /\\//g, '%2f' );\n\n// precision fix for floating point numbers\nconst fixFloating = value => Math.round( value * 100 ) / 100;\n\n// return the index of an element inside its parent - based on https://stackoverflow.com/a/13657635/2370385\nconst getIndex = node => {\n\tif ( ! node )\n\t\treturn;\n\tlet i = 0;\n\twhile ( node = node.previousElementSibling )\n\t\ti++;\n\treturn i;\n}\n\n// returns the text of the selected option in a `select` or custom radio element\nconst getText = el => {\n\tlet text = '';\n\tif ( isCustomRadio( el ) ) {\n\t\tconst option = el.querySelector(':checked ~ label');\n\t\tif ( option )\n\t\t\ttext = option.textContent;\n\t}\n\telse\n\t\ttext = el[ el.selectedIndex ].text;\n\treturn text;\n}\n\n// return the value of a Settings UI control\nconst getControlValue = el => {\n\tif ( isCustomRadio( el ) )\n\t\treturn el.elements[ el.dataset.prop ].value;\n\tif ( el.dataset.active !== undefined ) // switches\n\t\treturn el.dataset.active;\n\treturn el.value; // select and input elements\n}\n\n// returns an object with the current settings\nconst getCurrentSettings = _ => ({\n\talphaBars    : getControlValue( elAlphaBars ),\n\tansiBands    : getControlValue( elAnsiBands ),\n\tbackground   : getControlValue( elBackground ),\n\tbarSpace     : getControlValue( elBarSpace ),\n\tbgImageDim   : getControlValue( elBgImageDim ),\n\tbgImageFit   : getControlValue( elBgImageFit ),\n\tchannelLayout: getControlValue( elChnLayout ),\n\tcolorMode    : getControlValue( elColorMode ),\n\tfillAlpha    : getControlValue( elFillAlpha ),\n\tfreqMax\t\t : getControlValue( elRangeMax ),\n\tfreqMin\t\t : getControlValue( elRangeMin ),\n\tfreqScale    : getControlValue( elFreqScale ),\n\tgradient\t : getControlValue( elGradient ),\n\tgradientRight: getControlValue( elGradientRight ),\n\tledDisplay   : getControlValue( elLedDisplay ),\n\tlinearAmpl   : getControlValue( elLinearAmpl ),\n\tlineWidth    : getControlValue( elLineWidth ),\n\tlinkGrads    : getControlValue( elLinkGrads ),\n\tloRes        : getControlValue( elLoRes ),\n\tlumiBars     : getControlValue( elLumiBars ),\n\tmirror       : getControlValue( elMirror ),\n\tmode         : getControlValue( elMode ),\n\tnoShadow     : getControlValue( elNoShadow ),\n\tnoteLabels   : getControlValue( elNoteLabels ),\n\toutlineBars  : getControlValue( elOutline ),\n\tradial       : getControlValue( elRadial ),\n\trandomMode   : getControlValue( elRandomMode ),\n\treflex       : getControlValue( elReflex ),\n\trepeat       : getControlValue( elRepeat ),\n\troundBars    : getControlValue( elRoundBars ),\n\tsensitivity  : getControlValue( elSensitivity ),\n\tshowFPS      : getControlValue( elFPS ),\n\tshowPeaks \t : getControlValue( elShowPeaks ),\n\tshowScaleX \t : getControlValue( elScaleX ),\n\tshowScaleY \t : getControlValue( elScaleY ),\n\tshowSong     : getControlValue( elShowSong ),\n\tspin         : getControlValue( elSpin ),\n\tsplitGrad    : getControlValue( elSplitGrad ),\n\tweighting    : getControlValue( elWeighting )\n});\n\n// get the array index for a preset key, or validate a given index; if invalid or not found returns -1\nconst getPresetIndex = key => {\n\tconst index = ( +key == key ) ? key : presets.findIndex( item => item.key == key );\n\treturn ( index < 0 || index > presets.length - 1 ) ? -1 : index;\n}\n\n// get the configurations options of a preset\nconst getPreset = key => {\n\tconst index = getPresetIndex( key );\n\treturn ( index == -1 ) ? {} : presets[ index ].options;\n}\n\n// get the name of a preset\nconst getPresetName = key => {\n\tconst index = getPresetIndex( key );\n\treturn ( index == -1 ) ? false : presets[ index ].name;\n}\n\n// return selected gradient(s) for canvas OSD message\nconst getSelectedGradients = () => {\n\tconst isDual = getControlValue( elChnLayout ) != CHANNEL_SINGLE && ! isSwitchOn( elLinkGrads );\n\treturn `Gradient${ isDual ? 's' : ''}: ${ gradients[ elGradient.value ].name + ( isDual ? ' / ' + gradients[ elGradientRight.value ].name : '' ) }`;\n}\n\n// update configuration options from an existing preset\nconst setPreset = ( key, options ) => {\n\tconst index = getPresetIndex( key );\n\tif ( index == -1 )\n\t\treturn;\n\tpresets[ index ].options = options;\n}\n\n// return a list of user preset slots and descriptions\nconst getUserPresets = () => userPresets.map( ( item, index ) => `<strong>[${ index + 1 }]</strong>&nbsp; ${ isEmpty( item ) ? `<em class=\"empty\">${ PRESET_EMPTY }</em>` : item.name || PRESET_NONAME }` );\n\n// check if a given url/path is a blob\nconst isBlob = src => src.startsWith('blob:');\n\n// check if a given object is a custom radio buttons element\nconst isCustomRadio = el => el.tagName == 'FORM' && el.dataset.prop != undefined;\n\n// check if a string is an external URL\nconst isExternalURL = path => path.startsWith('http') && ! path.startsWith( URL_ORIGIN );\n\n// check if an object is empty\nconst isEmpty = obj => ! obj || typeof obj != 'object' || ! Object.keys( obj ).length;\n\n// check if PIP is active\nconst isPIP = _ => elContainer.classList.contains('pip');\n\n// check if audio is playing\nconst isPlaying = ( audioEl = audioElement[ currAudio ] ) => audioEl && audioEl.currentTime > 0 && ! audioEl.paused && ! audioEl.ended;\n\n// returns a boolean with the current status of a UI switch\nconst isSwitchOn = el => el.dataset.active == '1';\n\n// normalize slashes in path to Linux format\nconst normalizeSlashes = path => typeof path == 'string' ? path.replace( /\\\\/g, '/' ) : path;\n\n// returns a string with the current status of a UI switch\nconst onOff = el => isSwitchOn( el ) ? 'ON' : 'OFF';\n\n// parse a path and return its individual parts\nconst parsePath = uri => {\n\tconst fullPath  = removeServerEncoding( uri ),\n\t\t  lastSlash = fullPath.lastIndexOf('/') + 1,\n\t\t  path      = fullPath.slice( 0, lastSlash ), // path only\n\t\t  fileName  = fullPath.slice( lastSlash ),    // file name with extension\n\t\t  lastDot   = fileName.lastIndexOf('.'),\n\t\t  baseName  = lastDot >= 0 ? fileName.slice( 0, lastDot ) : fileName, // file name only (no extension)\n\t\t  extension = lastDot >= 0 ? fileName.slice( lastDot + 1 ).toLowerCase() : ''; // extension (without dot)\n\n\treturn { path, fileName, baseName, extension };\n}\n\n// try to extract metadata off the filename (artist - title) or #EXTINF text (duration,artist - title)\nconst parseTrackName = name => {\n\tname = name.replace( /_/g, ' ' ); // for some really old file naming conventions :)\n\t// try to discard the track number from the title, by checking commonly used separators (dot, hyphen or space)\n\t// if the separator is a comma, assume the number is actually the duration from an #EXTINF tag\n\tconst [ ,, duration, separator,, artist, title ] = name.match( /(^(-?\\d+)([,\\.\\-\\s]))?((.*?)\\s+-\\s+)?(.*)/ );\n\treturn { artist, title, duration: separator == ',' ? secondsToTime( duration ) : '' };\n}\n\n// prepare a file path for use with the Electron file server if needed\nconst queryFile = path => {\n\tif ( isElectron && ! isExternalURL( path ) ) {\n\t\tif ( path.startsWith( ROUTE_FILE ) )\n\t\t\tpath = path.slice( ROUTE_FILE.length );\n\t\tpath = ROUTE_FILE + encodeSlashes( path );\n\t}\n\treturn path;\n}\n\n// returns the count of queued songs\nconst queueLength = _ => playlist.children.length;\n\n// returns a random integer in the range [ 0, n-1 ]\nconst randomInt = ( n = 2 ) => Math.random() * n | 0;\n\n// remove custom server route and encoded slashes from a URL\nconst removeServerEncoding = uri => {\n\tconst regexp = new RegExp( `^${ ROUTE_FILE }` );\n\treturn normalizeSlashes( decodeSlashes( uri.replace( regexp, '' ) ) );\n}\n\n// helper function to save a path to localStorage or IndexedDB\nconst saveLastDir = path => {\n\tif ( useFileSystemAPI )\n\t\tset( KEY_LAST_DIR, path ); // IndexedDB\n\telse if ( serverMode != SERVER_FILE )\n\t\tsaveToStorage( KEY_LAST_DIR, path );\n}\n\n// format a value in seconds to a string in the format 'hh:mm:ss'\nconst secondsToTime = secs => {\n\tif ( secs == Infinity || secs == -1 )\n\t\treturn 'LIVE';\n\n\tlet str  = '',\n\t\tlead = '';\n\n\tif ( secs >= 3600 ) {\n\t\tstr = ( secs / 3600 | 0 ) + ':';\n\t\tsecs %= 3600;\n\t\tlead = '0';\n\t}\n\n\tstr += ( lead + ( secs / 60 | 0 ) ).slice(-2) + ':' + ( '0' + ( secs % 60 | 0 ) ).slice(-2);\n\n\treturn str;\n}\n\n// set attributes of \"range\" or \"number\" input elements\nconst setRangeAtts = ( element, min, max, step = 1 ) => {\n\telement.min  = min;\n\telement.max  = max;\n\telement.step = step;\n}\n\n// GENERAL FUNCTIONS ------------------------------------------------------------------------------\n\n/**\n * Adds a batch of files to the queue and displays total songs added when finished\n *\n * @param files {array} array of objects with a 'file' property (and optional 'handle' property)\n * @param [autoplay] {boolean}\n */\nfunction addBatchToPlayQueue( files, autoplay = false ) {\n\tconst promises = files.map( entry => addToPlayQueue( entry, autoplay ) );\n\tPromise.all( promises ).then( added => {\n\t\tconst total = added.reduce( ( sum, val ) => sum + val, 0 ),\n\t\t\t  text  = `${total} song${ total > 1 ? 's' : '' } added to the queue${ queueLength() < MAX_QUEUED_SONGS ? '' : '. Queue is full!' }`;\n\t\tnotie.alert({ text, time: 5 });\n\t\tstorePlayQueue( true );\n\t});\n}\n\n/**\n * Add audio metadata to a playlist item or audio element\n */\nfunction addMetadata( metadata, target ) {\n\tconst trackData  = target.dataset,\n\t\t  sourceData = metadata.dataset,\n\t\t  common     = metadata.common,\n\t\t  format     = metadata.format;\n\n\tif ( sourceData ) { // if `metadata` has a dataset it's a playqueue item; just copy the data to target element\n\t\tObject.assign( trackData, sourceData );\n\t}\n\telse {\t\t\t\t// otherwise, it's metadata read from file; we need to parse it and populate the dataset\n\t\ttrackData.artist = common.artist || trackData.artist;\n\t\ttrackData.title  = common.title || trackData.title;\n\t\ttrackData.album  = common.album ? common.album + ( common.year ? ' (' + common.year + ')' : '' ) : '';\n\t\ttrackData.codec  = format ? format.codec || format.container : trackData.codec;\n\n\t\t// for track quality info, metadata is prioritized in the following order, according to availability:\n\t\t// 1. sampleRate (optional) + bitsPerSample (present)        - ex.: 48KHz / 16bits | 16bits\n\t\t// 2. bitrate (present) + codecProfile (optional)            - ex.: 128K CBR | 128K\n\t\t// 3. only sampleRate or bitsPerSample, whichever is present - ex.: 48KHz | 16bits\n\t\tif ( format && ( format.bitsPerSample || ( format.sampleRate && ! format.bitrate ) ) ) {\n\t\t\ttrackData.quality = ( format.sampleRate ? ( format.sampleRate / 1000 | 0 ) + 'KHz' : '' ) +\n\t\t\t\t\t\t\t    ( format.sampleRate && format.bitsPerSample ? ' / ' : '' ) +\n\t\t\t\t\t\t\t    ( format.bitsPerSample ? format.bitsPerSample + 'bits' : '' );\n\t\t}\n\t\telse if ( format && format.bitrate )\n\t\t\ttrackData.quality = ( format.bitrate / 1000 | 0 ) + 'K ' + ( format.codecProfile || '' );\n\t\telse\n\t\t\ttrackData.quality = '';\n\n\t\tif ( format && format.duration )\n\t\t\ttrackData.duration = secondsToTime( format.duration );\n\t\telse\n\t\t\ttrackData.duration = '';\n\n\t\tif ( common.picture && common.picture.length ) {\n\t\t\tconst blob = new Blob( [ common.picture[0].data ], { type: common.picture[0].format } );\n\t\t\ttrackData.cover = URL.createObjectURL( blob );\n\t\t}\n\t}\n\n\tif ( target == audioElement[ currAudio ] )\n\t\tsetCurrentCover();\n}\n\n/**\n * Add a song to the play queue\n * returns a Promise that resolves to 1 when song added, or 0 if queue is full\n */\nfunction addSongToPlayQueue( fileObject, content = {}, autoplay ) {\n\n\treturn new Promise( resolve => {\n\t\tif ( queueLength() >= MAX_QUEUED_SONGS )\n\t\t\tresolve(0);\n\n\t\tlet uri = normalizeSlashes( fileObject.file );\n\n\t\t// extract file name and extension\n\t\tconst file = decodeSlashes( uri ).split('/').pop(),\n\t\t\t  ext  = file.split('.').pop();\n\n\t\t// create new list element\n\t\tconst newEl     = document.createElement('li'),\n\t\t\t  trackData = newEl.dataset;\n\n\t\tObject.assign( trackData, DATASET_TEMPLATE ); // initialize element's dataset attributes\n\n\t\ttrackData.artist   = content.artist || '';\n\t\ttrackData.title    = content.title || file.replace( /%23/g, '#' ) || uri.slice( uri.lastIndexOf('//') + 2 );\n\t\ttrackData.duration = content.duration || '';\n\t\ttrackData.codec    = ( ext !== file ) ? ext.toUpperCase() : '';\n\n\t\tnewEl.handle = fileObject.handle; // for File System API accesses\n\n\t\t// replace any '#' character in the filename for its URL-safe code (for content coming from playlist files)\n\t\turi = uri.replace( /#/g, '%23' );\n\t\ttrackData.file = uri;\n\n\t\tplaylist.appendChild( newEl );\n\n\t\tif ( ! FILE_EXT_VIDEO.includes( ext ) ) {\n\t\t\t// disable retrieving metadata of video files for now - https://github.com/Borewit/music-metadata-browser/issues/950\n\t\t\ttrackData.retrieve = 1; // flag this item as needing metadata\n\t\t\tretrieveMetadata();\n\t\t}\n\n\t\tif ( ( autoplay || queueLength() == 1 ) && ! isPlaying() )\n\t\t\tloadSong( 0, autoplay ).then( () => resolve(1) );\n\t\telse\n\t\t\tresolve(1);\n\n\t\tif ( playlistPos > queueLength() - 3 )\n\t\t\tloadNextSong();\n\t});\n}\n\n/**\n * Add a song or playlist to the play queue\n */\nfunction addToPlayQueue( fileObject, autoplay = false ) {\n\n\tlet ret;\n\n\tif ( FILE_EXT_PLIST.includes( parsePath( fileObject.file ).extension ) )\n\t\tret = loadPlaylist( fileObject, autoplay );\n\telse\n\t\tret = addSongToPlayQueue( fileObject, parseTrackName( parsePath( fileObject.file ).baseName ), autoplay );\n\n\t// when promise resolved, if autoplay requested start playing the first added song\n\tret.then( n => {\n\t\tif ( autoplay && ! isPlaying() && n > 0 )\n\t\t\tplaySong( queueLength() - n );\n\t});\n\n\treturn ret;\n}\n\n/**\n * Increase or decrease balance\n */\nfunction changeBalance( incr ) {\n\tlet newVal = incr ? fixFloating( ( +elBalance.dataset.value || 0 ) + incr * .1 ) : 0;\n\n\tif ( newVal < -1 )\n\t\tnewVal = -1;\n\telse if ( newVal > 1 )\n\t\tnewVal = 1;\n\n\tsetBalance( newVal );\n\tsetCanvasMsg( `Balance: ${ newVal == 0 ? 'CENTER' : ( Math.abs( newVal ) * 100 ) + '% ' + ( newVal > 0 ? 'Right' : 'Left' ) }` );\n\tupdateLastConfig();\n}\n\n/**\n * Change fullscreen analyzer height\n */\nfunction changeFsHeight( incr ) {\n\tconst val = +elFsHeight.value;\n\n\tif ( incr == 1 && val < +elFsHeight.max || incr == -1 && val > +elFsHeight.min ) {\n\t\telFsHeight.value = val + elFsHeight.step * incr;\n\t\tsetProperty( elFsHeight );\n\t}\n\tsetCanvasMsg( `Analyzer height: ${ elFsHeight.value }%` );\n}\n\n/**\n * Increase or decrease volume\n */\nfunction changeVolume( incr ) {\n\tlet newVal = fixFloating( ( +elVolume.dataset.value || 0 ) + incr * .05 );\n\n\tif ( newVal < 0 )\n\t\tnewVal = 0;\n\telse if ( newVal > 1 )\n\t\tnewVal = 1;\n\n\tsetVolume( newVal );\n\tsetCanvasMsg( `Volume: ${ newVal * 20 }` );\n\tupdateLastConfig();\n}\n\n/**\n * Clear audio element\n */\nfunction clearAudioElement( n = currAudio ) {\n\tconst audioEl   = audioElement[ n ],\n\t\t  trackData = audioEl.dataset;\n\n\tloadAudioSource( audioEl, null ); // remove .src attribute\n\tObject.assign( trackData, DATASET_TEMPLATE ); // clear data attributes\n\taudioEl.load();\n\n\tif ( n == currAudio )\n\t\tsetCurrentCover(); // clear coverImage and background image if needed\n}\n\n/**\n * Clear the play queue\n */\nfunction clearPlayQueue() {\n\n\twhile ( playlist.hasChildNodes() )\n\t\trevokeBlobURL( playlist.removeChild( playlist.firstChild ) );\n\n\tif ( ! isPlaying() ) {\n\t\tplaylistPos = 0;\n\t\tclearAudioElement( currAudio );\n\t}\n\telse\n\t\tplaylistPos = -1;\n\n\tclearAudioElement( nextAudio );\n\tupdatePlaylistUI();\n}\n\n/**\n * Output messages to the UI \"console\"\n */\nfunction consoleLog( msg, error, clear ) {\n\tconst content = $('#console-content'),\n\t \t  dt = new Date(),\n\t\t  time = dt.toLocaleTimeString( [], { hour12: false } ) + '.' + String( dt.getMilliseconds() ).padStart( 3, '0' );\n\n\tif ( clear )\n\t\tcontent.innerHTML = '';\n\n\tif ( error )\n\t\t$('#toggle_console').classList.add('warning');\n\n\tif ( msg )\n\t\tcontent.innerHTML += `<div ${ error ? 'class=\"error\"' : '' }>${ time } &gt; ${msg}</div>`;\n\n\tcontent.scrollTop = content.scrollHeight;\n}\n\n/**\n * Select next or previous option in a `select` HTML element or custom radio buttons, cycling around when necessary\n *\n * @param el {object} HTML object\n * @param [prev] {boolean} true to select previous option\n */\nfunction cycleElement( el, prev ) {\n\tconst options = isCustomRadio( el ) ? el.elements[ el.dataset.prop ] : el.options;\n\n\tlet idx = ( isCustomRadio( el ) ? Array.from( options ).findIndex( item => item.checked ) : el.selectedIndex ) + ( prev ? -1 : 1 );\n\n\tif ( idx < 0 )\n\t\tidx = options.length - 1;\n\telse if ( idx >= options.length )\n\t\tidx = 0;\n\n\tif ( isCustomRadio( el ) )\n\t\toptions[ idx ].checked = true;\n\telse\n\t\tel.selectedIndex = idx;\n\n\tsetProperty( el );\n}\n\n/**\n * Cycle X and Y axis scales\n *\n * @param [prev] {boolean} true to select previous option\n * @return integer (bit 0 = scale X status; bit 1 = scale Y status)\n */\nfunction cycleScale( prev ) {\n\tlet scale = +elScaleX.dataset.active + ( elScaleY.dataset.active << 1 ) + ( prev ? -1 : 1 );\n\n\tif ( scale < 0 )\n\t\tscale = 3;\n\telse if ( scale > 3 )\n\t\tscale = 0;\n\n\telScaleX.dataset.active = scale & 1;\n\telScaleY.dataset.active = scale >> 1;\n\n\tsetProperty( [ elScaleX, elScaleY ] );\n\treturn scale;\n}\n\n/**\n * Delete all child nodes of an element\n */\nfunction deleteChildren( el ) {\n\twhile ( el.firstChild )\n\t\tel.removeChild( el.firstChild );\n}\n\n/**\n * Removes gradient that has been loaded into the editor from the gradients object as well as the saved custom gradients\n * preference.\n *\n * Note, this does not remove the gradient from the analyzer. Rather, the analyzer's gradient object will be\n * overwritten next time a gradient is created. This is because custom gradient keys are generated based on how many\n * custom gradients. See `openGradientEditorNew()`. Additionally, the deleted gradient is removed from the stored\n * preferences, so the analyzer will not have it on next load.\n */\nfunction deleteGradient() {\n\tif (!currentGradient || !currentGradient.key) return;\n\n\tdelete gradients[currentGradient.key];\n\n\t// if that was the only enabled gradient, set the first gradient as enabled\n\tif (Object.keys(gradients).filter(key => !gradients[key].disabled).length === 0) {\n\t\tgradients[Object.keys(gradients)[0]].disabled = false;\n\t}\n\n\tpopulateGradients();\n\tpopulateEnabledGradients();\n\tsavePreferences(KEY_CUSTOM_GRADS);\n\tsavePreferences(KEY_DISABLED_GRADS); // saving disabled gradients because if we the only enabled one, we set the first to be enabled.\n\n\tcurrentGradient = null;\n\tlocation.href = '/#config';\n}\n\n/**\n * Delete a playlist from localStorage\n */\nfunction deletePlaylist( index ) {\n\tif ( elPlaylists[ index ].dataset.isLocal ) {\n\t\tnotie.confirm({\n\t\t\ttext: `Do you really want to DELETE the \"${elPlaylists[ index ].innerText}\" playlist?<br>THIS CANNOT BE UNDONE!`,\n\t\t\tsubmitText: 'Delete',\n\t\t\tsubmitCallback: async () => {\n\t\t\t\tconst keyName   = elPlaylists[ index ].value,\n\t\t\t\t\t  key       = PLAYLIST_PREFIX + keyName,\n\t\t\t\t\t  playlists = await get( KEY_PLAYLISTS );\n\n\t\t\t\tif ( playlists )\n\t\t\t\t\tdelete playlists[ keyName ];\n\n\t\t\t\t// delete playlist from indexedDB and update list of playlists\n\t\t\t\tawait del( key );\n\t\t\t\tawait set( KEY_PLAYLISTS, playlists );\n\n\t\t\t\tnotie.alert({ text: 'Playlist deleted' });\n\t\t\t\tloadSavedPlaylists();\n\t\t\t},\n\t\t\tcancelCallback: () => {\n\t\t\t\tnotie.alert({ text: 'Canceled' })\n\t\t\t},\n\t\t});\n\t}\n\telse if ( elPlaylists[ index ].value )\n\t\tnotie.alert({ text: 'Cannot delete a server playlist!' });\n}\n\n/**\n * Populate Config Panel options\n */\nfunction doConfigPanel() {\n\n\t// helper function\n\tconst buildOptions = ( container, cssClass, options, parent, cfgKey ) => {\n\t\t// create checkboxes inside the container\n\t\toptions.forEach( item => {\n\t\t\tcontainer.innerHTML += `<label><input type=\"checkbox\" class=\"${cssClass}\" data-option=\"${item.value}\" ${ item.disabled ? '' : 'checked' }> ${item.text}</label>`;\n\t\t});\n\n\t\t// add event listeners for enabling/disabling options\n\t\t$$( `.${cssClass}` ).forEach( element => {\n\t\t\telement.addEventListener( 'click', event => {\n\t\t\t\tif ( ! element.checked ) {\n\t\t\t\t\tconst count = options.filter( item => ! item.disabled ).length;\n\t\t\t\t\tif ( count < 2 ) {\n\t\t\t\t\t\tnotie.alert({ text: 'At least one item must be enabled!' });\n\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tconst opt = options.find( item => item.value == element.dataset.option );\n\t\t\t\tif ( opt ) {\n\t\t\t\t\topt.disabled = ! element.checked;\n\t\t\t\t\tpopulateSelect( parent, options );\n\t\t\t\t\tsavePreferences( cfgKey );\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\t// Enabled visualization modes\n\tbuildOptions( $('#enabled_modes'), 'enabledMode', modeOptions, elMode, KEY_DISABLED_MODES );\n\n\t// Enabled Background Image Fit options\n\tbuildOptions( $('#enabled_bgfit'), 'enabledBgFit', bgFitOptions, elBgImageFit, KEY_DISABLED_BGFIT );\n\n\t// Enabled gradients\n\n\tconst elEnabledGradients = $('#enabled_gradients');\n\n\tObject.keys( gradients ).forEach( key => {\n\t\telEnabledGradients.innerHTML += `<label><input type=\"checkbox\" class=\"enabledGradient\" data-grad=\"${key}\" ${gradients[ key ].disabled ? '' : 'checked'}> ${gradients[ key ].name}</label>`;\n\t});\n\n\tpopulateEnabledGradients();\n\n\t// Randomize configuration\n\n\tconst elProperties = $('#random_properties');\n\n\trandomProperties.forEach( prop => {\n\t\telProperties.innerHTML += `<label><input type=\"checkbox\" class=\"randomProperty\" value=\"${prop.value}\" ${prop.disabled ? '' : 'checked'}> ${prop.text}</label>`;\n\t});\n\n\t$$('.randomProperty').forEach( el => {\n\t\tel.addEventListener( 'click', event => {\n\t\t\trandomProperties.find( item => item.value == el.value ).disabled = ! el.checked;\n\t\t\tsavePreferences( KEY_DISABLED_PROPS );\n\t\t});\n\t});\n\n\t// Sensitivity presets (already populated by loadPreferences())\n\t$$( '[data-preset]' ).forEach( el => {\n\t\tif ( el.className == 'reset-sens' ) {\n\t\t\tel.addEventListener( 'click', () => {\n\t\t\t\tconst preset = el.dataset.preset;\n\t\t\t\t$(`.min-db[data-preset=\"${preset}\"]`).value = sensitivityDefaults[ preset ].min;\n\t\t\t\t$(`.max-db[data-preset=\"${preset}\"]`).value = sensitivityDefaults[ preset ].max;\n\t\t\t\t$(`.linear-boost[data-preset=\"${preset}\"]`).value = sensitivityDefaults[ preset ].boost;\n\t\t\t\t$$(`[data-preset=\"${preset}\"]`).forEach( field => {\n\t\t\t\t\tfield.classList.remove('field-error');\n\t\t\t\t});\n\t\t\t\tif ( el.dataset.preset == getControlValue( elSensitivity ) ) // current preset has been changed\n\t\t\t\t\tsetProperty( elSensitivity, false );\n\t\t\t\tsavePreferences( KEY_SENSITIVITY );\n\t\t\t});\n\t\t}\n\t\telse {\n\t\t\tel.addEventListener( 'change', () => {\n\t\t\t\tconst isValid = ( +el.value >= +el.min && +el.value <= +el.max );\n\t\t\t\tif ( isValid ) {\n\t\t\t\t\tif ( el.dataset.preset == getControlValue( elSensitivity ) ) // current preset has been changed\n\t\t\t\t\t\tsetProperty( elSensitivity, false );\n\t\t\t\t\tsavePreferences( KEY_SENSITIVITY );\n\t\t\t\t}\n\t\t\t\tel.classList.toggle( 'field-error', ! isValid );\n\t\t\t});\n\t\t}\n\t});\n\n\t// On-screen display options\n\tfor ( const el of [ elInfoTimeout, elTrackTimeout, elEndTimeout, elShowCover, elShowCount ] )\n\t\tel.addEventListener( 'change', () => savePreferences( KEY_DISPLAY_OPTS ) );\n\n\t$('#reset_osd').addEventListener( 'click', () => {\n\t\tsetInfoOptions( infoDisplayDefaults );\n\t\tsavePreferences( KEY_DISPLAY_OPTS );\n\t});\n\n\t// General settings\n\tgeneralOptionsElements.forEach( el => {\n\t\tel.addEventListener( 'change', () => setProperty( el ) );\n\t});\n\n\t$('#reset_general').addEventListener( 'click', () => {\n\t\tsetGeneralOptions( generalOptionsDefaults );\n\t\tsetProperty( generalOptionsElements );\n\t});\n}\n\n/**\n * Erase a user preset\n *\n * @param {number} slot index (0-8)\n * @param [{boolean}] force\n */\nfunction eraseUserPreset( index, force ) {\n\tif ( isEmpty( userPresets[ index ] ) )\n\t\treturn; // nothing to do\n\n\tconst userPresetText = `User Preset #${ index + 1 }`,\n\t\t  currentName = userPresets[ index ].name ? '<br>' + userPresets[ index ].name : '';\n\n\tif ( ! force ) {\n\t\tnotie.confirm({\n\t\t\ttext: `Do you really want to DELETE ${ userPresetText }?${ currentName }<br>THIS CANNOT BE UNDONE!`,\n\t\t\tsubmitText: 'DELETE',\n\t\t\tsubmitCallback: () => {\n\t\t\t\teraseUserPreset( index, true ); // force erase\n\t\t\t},\n\t\t\tcancelCallback: () => {\n\t\t\t\tnotie.alert({ text: 'Canceled!' })\n\t\t\t},\n\t\t});\n\t\treturn;\n\t}\n\n\t// Update presets array in memory and save updated contents to storage\n\tuserPresets[ index ] = {};\n\tsaveToStorage( KEY_CUSTOM_PRESET, userPresets );\n\n\tnotie.alert({ text: `Deleted ${ userPresetText }` });\n}\n\n/**\n * Fast forward or rewind the current audio element\n */\nfunction fastSearch( dir = 1 ) {\n\tconst audioEl = audioElement[ currAudio ];\n\n\tif ( audioEl.duration > 0 && audioEl.duration < Infinity ) {\n\t\tlet newPos = audioEl.currentTime + dir * 5; // 5 seconds steps\n\n\t\tif ( newPos < 0 )\n\t\t\tnewPos = 0;\n\t\telse if ( newPos > audioEl.duration - 1 )\n\t\t\tnewPos = audioEl.duration - 1\n\n\t\tsetCanvasMsg(1); // display song info\n\t\taudioEl.currentTime = newPos;\n\t}\n\n\t// 'keydown' keeps triggering while the key is pressed, but 'mousedown' triggers only once,\n\t// so we need to schedule another call to keep this working when in mouse mode\n\tif ( isFastSearch == 'm' )\n\t\tscheduleFastSearch( 'm', dir );\n}\n\n/**\n * Finish track fast search\n */\nfunction finishFastSearch() {\n\tclearTimeout( fastSearchTimeout );\n\tif ( isFastSearch ) {\n\t\tisFastSearch = false;\n\t\treturn true;\n\t}\n\t// fast search was never activated, return false to indicate a track skip\n\treturn false;\n}\n\n/**\n * Display the canvas in full-screen mode\n */\nasync function fullscreen() {\n\tif ( isPIP() )\n\t\tawait document.exitPictureInPicture();\n\taudioMotion.toggleFullscreen();\n\tdocument.activeElement.blur(); // move keyboard focus to the document body\n}\n\n/**\n * Try to get a cover image from the song's folder\n */\nfunction getFolderCover( uri ) {\n\treturn new Promise( resolve => {\n\t\tconst path = parsePath( uri ).path; // extract path (no filename)\n\n\t\tif ( serverMode == SERVER_FILE || isExternalURL( uri ) )\n\t\t\tresolve(''); // nothing to do when in serverless mode or external file\n\t\telse if ( folderImages[ path ] !== undefined )\n\t\t\tresolve( queryFile( path + folderImages[ path ] ) ); // use the stored image URL for this path\n\t\telse {\n\t\t\tconst urlToFetch = ( serverMode == SERVER_CUSTOM ) ? ROUTE_COVER + encodeSlashes( path ) : path;\n\n\t\t\tfetch( urlToFetch )\n\t\t\t\t.then( response => {\n\t\t\t\t\treturn ( response.status == 200 ) ? response.text() : null;\n\t\t\t\t})\n\t\t\t\t.then( content => {\n\t\t\t\t\tlet imageUrl = '';\n\t\t\t\t\tif ( content ) {\n\t\t\t\t\t\tif ( serverMode == SERVER_CUSTOM )\n\t\t\t\t\t\t\timageUrl = content;\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tconst dirContents = fileExplorer.parseDirectory( content );\n\t\t\t\t\t\t\tif ( dirContents.cover )\n\t\t\t\t\t\t\t\timageUrl = dirContents.cover;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tfolderImages[ path ] = imageUrl;\n\t\t\t\t\tresolve( queryFile( path + imageUrl ) );\n\t\t\t\t});\n\t\t}\n\t});\n}\n\n/**\n * Process keyboard shortcuts\n */\nfunction keyboardControls( event ) {\n\n\tif ( event.code == 'F1' && ! event.altKey && ! event.ctrlKey ) {\n\t\tlocation.href = '#help';\n\t\tevent.preventDefault();\n\t\treturn;\n\t}\n\n\tif ( event.target.tagName != 'BODY' || event.altKey || event.ctrlKey )\n\t\treturn;\n\n\tconst isShiftKey = event.shiftKey;\n\n\t// keys handled on 'keydown' allow automatic repetition\n\tif ( event.type == 'keydown' ) {\n\t\tswitch ( event.code ) {\n\t\t\tcase 'ArrowUp': \t// volume up\n\t\t\t\tif ( isShiftKey )\n\t\t\t\t\tchangeFsHeight(1);\n\t\t\t\telse\n\t\t\t\t\tchangeVolume(1);\n\t\t\t\tbreak;\n\t\t\tcase 'ArrowDown': \t// volume down\n\t\t\t\tif ( isShiftKey )\n\t\t\t\t\tchangeFsHeight(-1);\n\t\t\t\telse\n\t\t\t\t\tchangeVolume(-1);\n\t\t\t\tbreak;\n\t\t\tcase 'ArrowLeft': \t// rewind\n\t\t\t\tif ( isShiftKey )\n\t\t\t\t\tchangeBalance(-1);\n\t\t\t\telse if ( isFastSearch ) {\n\t\t\t\t\tsetCanvasMsg( 'Rewind', 1 );\n\t\t\t\t\tfastSearch(-1);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t\tscheduleFastSearch('k', -1);\n\t\t\t\tbreak;\n\t\t\tcase 'ArrowRight': \t// fast forward\n\t\t\t\tif ( isShiftKey )\n\t\t\t\t\tchangeBalance(1);\n\t\t\t\telse if ( isFastSearch ) {\n\t\t\t\t\tsetCanvasMsg( 'Fast forward', 1 );\n\t\t\t\t\tfastSearch();\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t\tscheduleFastSearch('k');\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\t// no key match - quit and keep default behavior\n\t\t\t\treturn;\n\t\t}\n\t}\n\telse {\n\t\tif ( event.code.match( /^(Digit|Numpad)[0-9]$/ ) ) {\n\t\t\tconst index = event.code.slice(-1) - 1;\n\t\t\tif ( index == -1 ) { // '0' pressed\n\t\t\t\t// ignore if Shift pressed as it could be a user mistake\n\t\t\t\tif ( ! isShiftKey ) {\n\t\t\t\t\trandomizeSettings( true );\n\t\t\t\t\tsetProperty( elRandomMode, false ); // restart randomize timer (if active)\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if ( isShiftKey ) {\n\t\t\t\tconst settings = getCurrentSettings();\n\t\t\t\tsettings.randomMode = 0; // when saving via keyboard shortcut, turn off Randomize\n\t\t\t\tsaveUserPreset( index, settings );\n\t\t\t}\n\t\t\telse\n\t\t\t\tloadPreset( index );\n\t\t}\n\t\telse {\n\t\t\tswitch ( event.code ) {\n\t\t\t\tcase 'Delete': \t\t// delete selected songs from the playlist\n\t\t\t\tcase 'Backspace':\t// for Mac\n\t\t\t\t\tplaylist.querySelectorAll('.selected').forEach( e => {\n\t\t\t\t\t\trevokeBlobURL( e );\n\t\t\t\t\t\te.remove();\n\t\t\t\t\t});\n\t\t\t\t\tconst current = getIndex( playlist.querySelector('.current') );\n\t\t\t\t\tif ( current !== undefined )\n\t\t\t\t\t\tplaylistPos = current;\t// update playlistPos if current song hasn't been deleted\n\t\t\t\t\telse if ( playlistPos > queueLength() - 1 )\n\t\t\t\t\t\tplaylistPos = queueLength() - 1;\n\t\t\t\t\telse\n\t\t\t\t\t\tplaylistPos--;\n\t\t\t\t\tif ( queueLength() )\n\t\t\t\t\t\tloadNextSong();\n\t\t\t\t\telse {\n\t\t\t\t\t\tclearAudioElement( nextAudio );\n\t\t\t\t\t\tif ( ! isPlaying() )\n\t\t\t\t\t\t\tclearAudioElement();\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'Space': \t\t// play / pause\n\t\t\t\t\tsetCanvasMsg( isPlaying() ? 'Pause' : 'Play', 1 );\n\t\t\t\t\tplayPause();\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'ArrowLeft': \t// previous song\n\t\t\t\tcase 'KeyJ':\n\t\t\t\t\tif ( ! finishFastSearch() && ! isShiftKey ) {\n\t\t\t\t\t\tsetCanvasMsg( 'Previous track', 1 );\n\t\t\t\t\t\tskipTrack(true);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'KeyG': \t\t// gradient\n\t\t\t\t\tcycleElement( elGradient, isShiftKey );\n\t\t\t\t\tsetCanvasMsg( getSelectedGradients() );\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'ArrowRight': \t// next song\n\t\t\t\tcase 'KeyK':\n\t\t\t\t\tif ( ! finishFastSearch() && ! isShiftKey ) {\n\t\t\t\t\t\tsetCanvasMsg( 'Next track', 1 );\n\t\t\t\t\t\tskipTrack();\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'KeyA': \t\t// cycle thru Randomize options\n\t\t\t\t\tcycleElement( elRandomMode, isShiftKey );\n\t\t\t\t\tsetCanvasMsg( 'Randomize: ' + getText( elRandomMode ) );\n\t\t\t\t\tsetProperty( elRandomMode );\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'KeyB': \t\t// background or image fit (shift)\n\t\t\t\t\tcycleElement( isShiftKey ? elBgImageFit : elBackground );\n\t\t\t\t\tconst bgOption = elBackground.value[0];\n\t\t\t\t\tsetCanvasMsg( 'Background: ' + getText( elBackground ) + ( bgOption > 1 && bgOption < 7 ? ` (${getText( elBgImageFit )})` : '' ) );\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'KeyC': \t\t// radial\n\t\t\t\t\telRadial.click();\n\t\t\t\t\tsetCanvasMsg( 'Radial ' + onOff( elRadial ) );\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'KeyD': \t\t// display information\n\t\t\t\t\ttoggleInfo();\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'KeyE': \t\t// shuffle queue\n\t\t\t\t\tif ( queueLength() > 0 ) {\n\t\t\t\t\t\tshufflePlayQueue();\n\t\t\t\t\t\tsetCanvasMsg( 'Shuffle' );\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'KeyF': \t\t// toggle fullscreen\n\t\t\t\t\tfullscreen();\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'KeyH': \t\t// toggle fps display\n\t\t\t\t\telFPS.click();\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'KeyI': \t\t// toggle info display on track change\n\t\t\t\t\telShowSong.click();\n\t\t\t\t\tsetCanvasMsg( 'Song info display ' + onOff( elShowSong ) );\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'KeyL': \t\t// toggle LED display effect\n\t\t\t\t\telLedDisplay.click();\n\t\t\t\t\tsetCanvasMsg( 'LED effect ' + onOff( elLedDisplay ) );\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'KeyM': \t\t// visualization mode\n\t\t\t\tcase 'KeyV':\n\t\t\t\t\tcycleElement( elMode, isShiftKey );\n\t\t\t\t\tsetCanvasMsg( 'Mode: ' + getText( elMode ) );\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'KeyN': \t\t// increase or reduce sensitivity\n\t\t\t\t\tcycleElement( elSensitivity, isShiftKey );\n\t\t\t\t\tsetCanvasMsg( getText( elSensitivity ).toUpperCase() + ' sensitivity' );\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'KeyO': \t\t// toggle resolution\n\t\t\t\t\telLoRes.click();\n\t\t\t\t\tsetCanvasMsg( ( isSwitchOn( elLoRes ) ? 'LOW' : 'HIGH' ) + ' Resolution' );\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'KeyP': \t\t// toggle peaks display\n\t\t\t\t\telShowPeaks.click();\n\t\t\t\t\tsetCanvasMsg( 'Peaks ' + onOff( elShowPeaks ) );\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'KeyR': \t\t// toggle playlist repeat\n\t\t\t\t\telRepeat.click();\n\t\t\t\t\tsetCanvasMsg( 'Queue repeat ' + onOff( elRepeat ) );\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'KeyS': \t\t// toggle X and Y axis scales\n\t\t\t\t\tsetCanvasMsg( 'Scale: ' + ['None','Frequency (Hz)','Level (dB)','Both'][ cycleScale( isShiftKey ) ] );\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'KeyT': \t\t// toggle text shadow\n\t\t\t\t\telNoShadow.click();\n\t\t\t\t\tsetCanvasMsg( ( isSwitchOn( elNoShadow ) ? 'Flat' : 'Shadowed' ) + ' text mode' );\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'KeyU': \t\t// toggle lumi bars\n\t\t\t\t\telLumiBars.click();\n\t\t\t\t\tsetCanvasMsg( 'Luminance bars ' + onOff( elLumiBars ) );\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'KeyX':\n\t\t\t\t\tcycleElement( elReflex, isShiftKey );\n\t\t\t\t\tsetCanvasMsg( 'Reflex: ' + getText( elReflex ) );\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\t// no key match - quit and keep default behavior\n\t\t\t\t\treturn;\n\t\t\t} // switch\n\t\t}\n\t} // else if ( event.type == 'keydown' )\n\n\tevent.preventDefault();\n}\n\n/**\n * Sets (or removes) the `src` attribute of a audio element and\n * releases any data blob (File System API) previously in use by it\n *\n * @param {object} audio element\n * @param {string} URL - if `null` completely removes the `src` attribute\n */\nfunction loadAudioSource( audioEl, newSource ) {\n\tconst oldSource = audioEl.src || '';\n\tif ( isBlob( oldSource ) )\n\t\tURL.revokeObjectURL( oldSource );\n\n\tif ( ! newSource )\n\t\taudioEl.removeAttribute('src');\n\telse\n\t\taudioEl.src = newSource;\n}\n\n/**\n * Load a file blob into an audio element\n *\n * @param {object} audio element\n * @param {object} file blob\n */\nfunction loadFileBlob( fileBlob, audioEl, playIt ) {\n\treturn new Promise( resolve => {\n\t\tloadAudioSource( audioEl, URL.createObjectURL( fileBlob ) );\n\t\taudioEl.onloadeddata = () => {\n\t\t\tif ( playIt )\n\t\t\t\taudioEl.play();\n\t\t\tresolve( true );\n\t\t};\n\t});\n}\n\n/**\n * Load a JSON-encoded object from localStorage\n *\n * @param {string} item key\n * @returns {Promise} a promise that resolves to the parsed object\n */\nasync function loadFromStorage( key ) {\n\treturn JSON.parse( isElectron ? await electron.api( 'storage-get', key ) : localStorage.getItem( key ) );\n}\n\n/**\n * Clones the gradient of the given key into the currentGradient variable\n */\nfunction loadGradientIntoCurrentGradient(gradientKey) {\n\tif (!gradients[gradientKey]) throw new Error(`gradients[${gradientKey}] is null or undefined.`);\n\n\tconst src = gradients[gradientKey];\n\tconst dest = {};\n\n\tdest.name = src.name;\n\tdest.bgColor = src.bgColor;\n\tdest.dir = src.dir\n\tdest.disabled = src.disabled;\n\tdest.key = gradientKey;\n\tdest.colorStops = [];\n\tfor (const stop of src.colorStops) {\n\t\tdest.colorStops.push({...stop});\n\t}\n\n\tcurrentGradient = dest;\n}\n\n/**\n * Load a music file from the user's computer\n */\nfunction loadLocalFile( obj ) {\n\tconst fileBlob = obj.files[0];\n\n\tif ( fileBlob ) {\n\t\tclearAudioElement();\n\t\tconst audioEl = audioElement[ currAudio ];\n\t\tloadFileBlob( fileBlob, audioEl, true ); // load and play\n\t\tmm.parseBlob( fileBlob )\n\t\t\t.then( metadata => addMetadata( metadata, audioEl ) )\n\t\t\t.catch( e => {} );\n\t}\n}\n\n/**\n * Loads next song into the audio element not currently in use\n */\nasync function loadNextSong() {\n\tconst next    = ( playlistPos < queueLength() - 1 ) ? playlistPos + 1 : 0,\n\t\t  song    = playlist.children[ next ],\n\t\t  audioEl = audioElement[ nextAudio ];\n\n\tif ( song ) {\n\t\taddMetadata( song, audioEl );\n\t\tif ( song.handle ) {\n\t\t\tawait song.handle.requestPermission();\n\t\t\tsong.handle.getFile()\n\t\t\t\t.then( fileBlob => loadFileBlob( fileBlob, audioEl ) )\n\t\t\t\t.then( () => audioEl.load() );\n\t\t}\n\t\telse {\n\t\t\tloadAudioSource( audioEl, song.dataset.file );\n\t\t\taudioEl.load();\n\t\t}\n\t}\n\n\tskipping = false; // finished skipping track\n}\n\n/**\n * Load a playlist file into the play queue\n */\nfunction loadPlaylist( fileObject, autoplay = false ) {\n\n\tlet path = normalizeSlashes( fileObject.file );\n\n\treturn new Promise( async ( resolve ) => {\n\t\tlet\tpromises = [];\n\n\t\tconst resolveAddedSongs = () => {\n\t\t\tPromise.all( promises ).then( added => {\n\t\t\t\tconst total = added.reduce( ( sum, val ) => sum + val, 0 );\n\t\t\t\tresolve( total );\n\t\t\t});\n\t\t}\n\n\t\tconst parsePlaylistContent = async content => {\n\t\t\tif ( ! elLoadedPlist.dataset.path )\n\t\t\t\tsetLoadedPlaylist( path );\n\n\t\t\tpath = parsePath( path ).path; // extracts the path (no filename); also decodes/normalize slashes\n\n\t\t\tlet songInfo;\n\n\t\t\tfor ( let line of content.split(/[\\r\\n]+/) ) {\n\t\t\t\tif ( line.charAt(0) != '#' && line.trim() != '' ) { // not a comment or blank line?\n\t\t\t\t\tline = normalizeSlashes( line );\n\t\t\t\t\tif ( ! songInfo ) // if no #EXTINF tag found on previous line, use the filename\n\t\t\t\t\t\tsongInfo = parsePath( line ).baseName;\n\n\t\t\t\t\tlet handle;\n\n\t\t\t\t\t// if it's an external URL just add it to the queue as is\n\t\t\t\t\tif ( ! isExternalURL( line ) ) {\n\t\t\t\t\t\tif ( useFileSystemAPI ) {\n\t\t\t\t\t\t\thandle = await fileExplorer.getHandle( line );\n\t\t\t\t\t\t\tif ( ! handle )\n\t\t\t\t\t\t\t\tconsoleLog( `Cannot resolve file handle for ${ line }`, true );\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// if it's not an absolute path, prepend the current path to it\n\t\t\t\t\t\tif ( line[1] != ':' && line[0] != '/' )\n\t\t\t\t\t\t\tline = path + line;\n\t\t\t\t\t}\n\n\t\t\t\t\tpromises.push( addSongToPlayQueue( { file: queryFile( line ), handle }, parseTrackName( songInfo ), autoplay ) );\n\t\t\t\t\tautoplay = false; // disable it after adding the first song\n\t\t\t\t\tsongInfo = '';\n\t\t\t\t}\n\t\t\t\telse if ( line.startsWith('#EXTINF') )\n\t\t\t\t\tsongInfo = line.slice(8); // save #EXTINF metadata for the next iteration\n\t\t\t}\n\t\t\tresolveAddedSongs();\n\t\t}\n\n\t\tif ( ! path ) {\n\t\t\tresolve( -1 );\n\t\t}\n\t\telse if ( typeof path == 'string' && FILE_EXT_PLIST.includes( parsePath( path ).extension ) ) {\n\t\t\tif ( fileObject.handle ) {\n\t\t\t\tfileObject.handle.getFile()\n\t\t\t\t\t.then( fileBlob => fileBlob.text() )\n\t\t\t\t\t.then( parsePlaylistContent )\n\t\t\t\t\t.catch( e => {\n\t\t\t\t\t\tconsoleLog( e, true );\n\t\t\t\t\t\tresolve( 0 );\n\t\t\t\t\t});\n\t\t\t}\n\t\t\telse {\n\t\t\t\tfetch( path )\n\t\t\t\t\t.then( response => {\n\t\t\t\t\t\tif ( response.status == 200 )\n\t\t\t\t\t\t\treturn response.text();\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tconsoleLog( `Fetch returned error code ${response.status} for URI ${path}`, true );\n\t\t\t\t\t})\n\t\t\t\t\t.then( parsePlaylistContent )\n\t\t\t\t\t.catch( e => {\n\t\t\t\t\t\tconsoleLog( e, true );\n\t\t\t\t\t\tresolve( 0 );\n\t\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\telse { // try to load playlist or last play queue from indexedDB\n\t\t\tconst list = await get( path === true ? KEY_PLAYQUEUE : PLAYLIST_PREFIX + path );\n\n\t\t\tif ( Array.isArray( list ) ) {\n\t\t\t\tlist.forEach( entry => {\n\t\t\t\t\tconst file   = normalizeSlashes( entry.file ),\n\t\t\t\t\t\t  handle = entry.handle;\n\t\t\t\t\tpromises.push( addSongToPlayQueue( { file, handle }, parseTrackName( parsePath( file ).baseName ) ) );\n\t\t\t\t});\n\t\t\t\tresolveAddedSongs();\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif ( path !== true ) // avoid error message if no play queue found on storage\n\t\t\t\t\tconsoleLog( `Unrecognized playlist file: ${path}`, true );\n\t\t\t\tresolve( 0 );\n\t\t\t}\n\t\t}\n\t});\n}\n\n/**\n * Load preferences from localStorage\n */\nasync function loadPreferences() {\n\t// helper function\n\tconst parseDisabled = ( data, optionList ) => {\n\t\tif ( Array.isArray( data ) ) {\n\t\t\tdata.forEach( option => {\n\t\t\t\t// if `option` is not an object, `disabled` is inferred true - for compatibility with legacy versions\n\t\t\t\tconst { value, disabled } = typeof option == 'object' ? option : { value: option, disabled: true } ;\n\t\t\t\tconst opt = Array.isArray( optionList ) ? optionList.find( item => item.value == value ) : optionList[ value ];\n\t\t\t\tif ( opt )\n\t\t\t\t\topt.disabled = disabled;\n\t\t\t});\n\t\t}\n\t}\n\n\tconst lastConfig    = await loadFromStorage( KEY_LAST_CONFIG ),\n\t \t  isLastSession = lastConfig !== null;\n\n\t// Merge defaults with the last session settings (if any)\n\tsetPreset( 'last', { ...getPreset('default'), ...lastConfig } );\n\n\t// Load user presets\n\tuserPresets = await loadFromStorage( KEY_CUSTOM_PRESET ) || [];\n\tif ( ! Array.isArray( userPresets ) )\n\t\tuserPresets = [ { name: 'Custom', options: userPresets } ]; // convert old custom preset (version <= 21.11)\n\tfor ( let i = 0; i < 9; i++ ) {\n\t\tif ( userPresets[ i ] === undefined )\n\t\t\tuserPresets[ i ] = {};\n\t\telse if ( ! isEmpty( userPresets[ i ] ) && ! userPresets[ i ].options ) // make sure 'options' exists\n\t\t\tuserPresets[ i ] = { options: userPresets[ i ] };\n\t}\n\n\t// Load disabled modes preference\n\tparseDisabled( await loadFromStorage( KEY_DISABLED_MODES ), modeOptions );\n\n\t// Load disabled background image fit options\n\tparseDisabled( await loadFromStorage( KEY_DISABLED_BGFIT ), bgFitOptions );\n\n\t// Load custom gradients\n\tconst customGradients = await loadFromStorage( KEY_CUSTOM_GRADS );\n\tif ( customGradients ) {\n\t\tObject.keys( customGradients ).forEach( key => {\n\t\t\tgradients[ key ] = customGradients[ key ];\n\t\t});\n\t}\n\n\t// Load disabled gradients preference\n\tparseDisabled( await loadFromStorage( KEY_DISABLED_GRADS ), gradients );\n\n\t// Load disabled random properties preference\n\tparseDisabled( await loadFromStorage( KEY_DISABLED_PROPS ), randomProperties );\n\n\t// Sensitivity presets\n\tconst elMinSens = $$('.min-db');\n\telMinSens.forEach( el => setRangeAtts( el, -120, -60 ) );\n\n\tconst elMaxSens = $$('.max-db');\n\telMaxSens.forEach( el => setRangeAtts( el, -50, 0 ) );\n\n\tconst elLinearBoost = $$('.linear-boost');\n\telLinearBoost.forEach( el => setRangeAtts( el, 1, 5, .2 ) );\n\n\tconst sensitivityPresets = await loadFromStorage( KEY_SENSITIVITY ) || sensitivityDefaults;\n\n\tsensitivityPresets.forEach( ( preset, index ) => {\n\t\telMinSens[ index ].value = preset.min;\n\t\telMaxSens[ index ].value = preset.max;\n\t\telLinearBoost[ index ].value = preset.boost || sensitivityDefaults[ index ].boost;\n\t});\n\n\t// On-screen display options - merge saved options (if any) with the defaults and set UI fields\n\tsetInfoOptions( { ...infoDisplayDefaults, ...( await loadFromStorage( KEY_DISPLAY_OPTS ) || {} ) } );\n\n\t// General settings\n\tfor ( let i = 10; i < 16; i++ )\n\t\telFFTsize[ elFFTsize.options.length ] = new Option( 2**i );\n\n\tsetRangeAtts( elSmoothing, 0, .9, .1 );\n\n\tpopulateSelect( elPIPRatio, pipRatioOptions );\n\n\tsetRangeAtts( elFsHeight, 25, 100, 5 );\n\n\tpopulateSelect( elMaxFPS, maxFpsOptions );\n\n\tpopulateSelect( elBgLocation, [\n\t\t[ BGFOLDER_NONE,   'Disable' ],\n\t\t[ BGFOLDER_SERVER, 'Server' ],\n\t\t[ ...( supportsFileSystemAPI ? [ BGFOLDER_LOCAL, 'Local device' ] : [] ) ]\n\t]);\n\n\tsetRangeAtts( elBgMaxItems, 0, 100 );\n\n\tsetGeneralOptions( { ...generalOptionsDefaults, ...( await loadFromStorage( KEY_GENERAL_OPTS ) || {} ) } );\n\n\treturn isLastSession;\n}\n\n/**\n * Load a configuration preset\n *\n * @param {string|number} desired built-in preset key or user preset index\n * @param [{boolean}] true to display console message and on-screen alert after loading (default)\n * @param [{boolean}] true to use default values for missing properties\n * @param [{boolean}] true to keep Randomize setting unchanged\n */\nfunction loadPreset( key, alert = true, init, keepRandomize ) {\n\n\tconst isUserPreset = ( +key == key ),\n\t\t  thisPreset   = isUserPreset ? userPresets[ key ].options : getPreset( key ),\n\t\t  defaults     = getPreset('default');\n\n\tif ( isEmpty( thisPreset ) ) // invalid or empty preset\n\t\treturn;\n\n\tif ( alert )\n\t\tconsoleLog( `Loading ${ isUserPreset ? 'User Preset #' + ( key + 1 ) : \"'\" + getPresetName( key ) + \"' preset\" }` );\n\n\tif ( thisPreset.stereo !== undefined ) // convert legacy 'stereo' option to 'channelLayout'\n\t\tthisPreset.channelLayout = channelLayoutOptions[ +thisPreset.stereo ][0];\n\n\t$$('[data-prop]').forEach( el => {\n\t\tconst prop = el.dataset.prop,\n\t\t\t  val  = thisPreset[ prop ] !== undefined ? thisPreset[ prop ] : init ? defaults[ prop ] : undefined;\n\n\t\tif ( val !== undefined && ( el != elRandomMode || ! keepRandomize ) ) {\n\t\t\tif ( isCustomRadio( el ) ) {\n\t\t\t\t// note: el.elements[ prop ].value = val won't work for empty string value\n\t\t\t\tconst option = el.querySelector(`[value=\"${val}\"]`);\n\t\t\t\tif ( option )\n\t\t\t\t\toption.checked = true;\n\t\t\t}\n\t\t\telse if ( el.classList.contains('switch') )\n\t\t\t\tel.dataset.active = +val;\n\t\t\telse if ( el == elVolume )\n\t\t\t\tsetVolume( val );\n\t\t\telse if ( el == elBalance )\n\t\t\t\tsetBalance( val );\n\t\t\telse {\n\t\t\t\tel.value = val;\n\t\t\t\tif ( el.selectedIndex == -1 ) // fix invalid values in select elements\n\t\t\t\t\tel.selectedIndex = 0;\n\t\t\t\tupdateRangeValue( el );\n\t\t\t}\n\t\t}\n\t});\n\n\taudioMotion.setOptions( {\n\t\talphaBars      : isSwitchOn( elAlphaBars ),\n\t\tansiBands      : isSwitchOn( elAnsiBands ),\n\t\tcolorMode      : getControlValue( elColorMode ),\n\t\tfftSize        : getControlValue( elFFTsize ),\n\t\tfrequencyScale : getControlValue( elFreqScale ),\n\t\tledBars        : isSwitchOn( elLedDisplay ),\n\t\tlinearAmplitude: isSwitchOn( elLinearAmpl ),\n\t\tloRes          : isSwitchOn( elLoRes ),\n\t\tlumiBars       : isSwitchOn( elLumiBars ),\n\t\tmaxFPS         : getControlValue( elMaxFPS ),\n\t\tmaxFreq        : getControlValue( elRangeMax ),\n\t\tminFreq        : getControlValue( elRangeMin ),\n\t\tmirror         : getControlValue( elMirror ),\n\t\tnoteLabels     : isSwitchOn( elNoteLabels ),\n\t\toutlineBars    : isSwitchOn( elOutline ),\n\t\tradial         : isSwitchOn( elRadial ),\n\t\troundBars      : isSwitchOn( elRoundBars ),\n\t\tshowFPS        : isSwitchOn( elFPS ),\n\t\tshowPeaks      : isSwitchOn( elShowPeaks ),\n\t\tshowScaleX     : isSwitchOn( elScaleX ),\n\t\tshowScaleY     : isSwitchOn( elScaleY ),\n\t\tsmoothing      : getControlValue( elSmoothing ),\n\t\tspinSpeed      : getControlValue( elSpin ),\n\t\tsplitGradient  : isSwitchOn( elSplitGrad ),\n\t\tweightingFilter: getControlValue( elWeighting )\n\t} );\n\n\t// settings that affect other properties are set by the setProperty() function\n\tsetProperty(\n\t\t[ elBackground,\n\t\telBgImageFit,\n\t\telBgImageDim,\n\t\telChnLayout,\n\t\telFsHeight,\n\t\telLinkGrads, // needs to be set before the gradients\n\t\telSensitivity,\n\t\telReflex,\n\t\telGradient,\n\t\telGradientRight,\n\t\t...( keepRandomize ? [] : [ elRandomMode ] ),\n\t\telBarSpace,\n\t\telMode ]\n\t);\n\n\tif ( key == 'demo' )\n\t\trandomizeSettings( true );\n\n\tif ( alert )\n\t\tnotie.alert({ text: 'Settings loaded!' });\n}\n\n/**\n * Load playlists from indexedDB and legacy playlists.cfg file\n * @param [string] key name of the currently selected playlist\n */\nasync function loadSavedPlaylists( keyName ) {\n\n\t// reset UI playlist selection box\n\n\tdeleteChildren( elPlaylists );\n\n\tconst item = new Option( 'Select a playlist', '' );\n\titem.disabled = true;\n\titem.selected = true;\n\telPlaylists.options[ elPlaylists.options.length ] = item;\n\n\t// load list of playlists from indexedDB\n\tlet playlists = await get( KEY_PLAYLISTS );\n\n\t// migrate playlists from localStorage (for compatibility with versions up to 24.2-beta.1)\n\tconst oldPlaylists = await loadFromStorage( KEY_PLAYLISTS );\n\n\tif ( oldPlaylists ) {\n\t\tfor ( const key of Object.keys( oldPlaylists ) ) {\n\t\t\tconst plKey    = PLAYLIST_PREFIX + key,\n\t\t\t\t  contents = await loadFromStorage( plKey );\n\n\t\t\tlet songs = [];\n\t\t\tfor ( const file of contents )\n\t\t\t\tsongs.push( { file } );\n\n\t\t\tawait set( plKey, songs );  // save playlist to indexedDB\n\t\t\tremoveFromStorage( plKey );\n\n\t\t\tplaylists[ key ] = oldPlaylists[ key ];\n\t\t}\n\n\t\tawait set( KEY_PLAYLISTS, playlists ); // save updated list to indexedDB\n\t\tremoveFromStorage( KEY_PLAYLISTS );\n\t}\n\n\t// add playlists to the selection box\n\tif ( playlists ) {\n\t\tfor ( const key of Object.keys( playlists ) ) {\n\t\t\tconst item = new Option( playlists[ key ], key );\n\t\t\titem.dataset.isLocal = '1';\n\t\t\tif ( key == keyName )\n\t\t\t\titem.selected = true;\n\t\t\telPlaylists.options[ elPlaylists.options.length ] = item;\n\t\t}\n\t}\n\n\t// try to load legacy playlists.cfg file\n\n\tfetch( 'playlists.cfg' )\n\t\t.then( response => {\n\t\t\tif ( response.status == 200 ) {\n\t\t\t\tconsoleLog( 'Found legacy playlists.cfg file' );\n\t\t\t\treturn response.text();\n\t\t\t}\n\t\t\telse\n\t\t\t\treturn false;\n\t\t})\n\t\t.then( content => {\n\t\t\tif ( content !== false ) {\n\t\t\t\tlet n = 0;\n\t\t\t\tcontent.split(/[\\r\\n]+/).forEach( line => {\n\t\t\t\t\tif ( line.charAt(0) != '#' && line.trim() != '' ) { // not a comment or blank line?\n\t\t\t\t\t\tlet info = line.split(/\\|/);\n\t\t\t\t\t\tif ( info.length == 2 ) {\n\t\t\t\t\t\t\telPlaylists.options[ elPlaylists.options.length ] = new Option( info[0].trim(), info[1].trim() );\n\t\t\t\t\t\t\tn++;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tif ( n )\n\t\t\t\t\tconsoleLog( `${n} playlists loaded from playlists.cfg` );\n\t\t\t\telse\n\t\t\t\t\tconsoleLog( 'No playlists found in playlists.cfg', true );\n\t\t\t}\n\t\t})\n\t\t.catch( e => {} );\n}\n\n/**\n * Load a song into the currently active audio element\n */\nfunction loadSong( n, playIt ) {\n\treturn new Promise( async resolve => {\n\t\tconst audioEl = audioElement[ currAudio ];\n\t\tconst finish = () => {\n\t\t\tupdatePlaylistUI();\n\t\t\tloadNextSong();\n\t\t\tresolve( true );\n\t\t}\n\n\t\tif ( playlist.children[ n ] ) {\n\t\t\tplaylistPos = n;\n\t\t\tconst song = playlist.children[ playlistPos ];\n\t\t\taddMetadata( song, audioEl );\n\n\t\t\tif ( song.handle ) {\n\t\t\t\tawait song.handle.requestPermission();\n\t\t\t\tsong.handle.getFile()\n\t\t\t\t\t.then( fileBlob => loadFileBlob( fileBlob, audioEl, playIt ) )\n\t\t\t\t\t.then( () => finish() );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tloadAudioSource( audioEl, song.dataset.file );\n\t\t\t\taudioEl.onloadeddata = () => {\n\t\t\t\t\tif ( playIt )\n\t\t\t\t\t\taudioEl.play();\n\t\t\t\t\tfinish();\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\t\telse\n\t\t\tresolve( false );\n\t});\n}\n\n/**\n * Copy the gradient of given key into currentGradient, and render the gradient editor.\n */\nfunction openGradientEdit(key) {\n\tloadGradientIntoCurrentGradient(key);\n\trenderGradientEditor();\n\t$('#btn-save-gradient').innerText = 'Save';\n\t$('#btn-delete-gradient').style.display = 'block';\n\tlocation.href = '/#gradient-editor';\n}\n\n/**\n * Build a new gradient, set it as the current gradient, then render the gradient editor.\n */\nfunction openGradientEditorNew() {\n\tcurrentGradient = {\n\t\tname: 'New Gradient',\n\t\tbgColor: '#111111',\n\t\tcolorStops: [\n\t\t\t{ pos: .1, color: '#222222' },\n\t\t\t{ pos: 1, color: '#eeeeee' }\n\t\t],\n\t\tdisabled: false,\n\t\tkey: 'custom-gradient-1'  // using this to keep track of the key of the gradient object in the gradient list\n\t};\n\n\t// To prevent accidental overwriting of gradients and to allow duplicate names, a unique internal key is chosen\n\t// instead of simply using the name the user chooses for the new gradient.\n\n\t// find unique key for new gradient\n\tlet modifier = 2;\n\twhile (Object.keys(gradients).some(key => key === currentGradient.key) && modifier < 10) {\n\t\tcurrentGradient.key = `custom-gradient-${modifier}`;\n\t\tmodifier++;\n\t}\n\n\trenderGradientEditor();\n\t$('#btn-save-gradient').innerText = 'Add';\n\t$('#btn-delete-gradient').style.display = 'none'; // don't show delete button while editing a new gradient\n\n\tlocation.href = '/#gradient-editor';\n}\n\n/**\n * Play next song on queue\n */\nfunction playNextSong( play ) {\n\n\tif ( skipping || isMicSource || playlistPos > queueLength() - 1 )\n\t\treturn true;\n\n\tskipping = true;\n\n\tif ( playlistPos < queueLength() - 1 )\n\t\tplaylistPos++;\n\telse if ( isSwitchOn( elRepeat ) )\n\t\tplaylistPos = 0;\n\telse {\n\t\tskipping = false;\n\t\treturn false;\n\t}\n\n\tplay |= isPlaying();\n\n\tcurrAudio = nextAudio;\n\tnextAudio = ! currAudio | 0;\n\tsetCurrentCover();\n\n\tif ( play ) {\n\t\taudioElement[ currAudio ].play()\n\t\t.then( () => loadNextSong() )\n\t\t.catch( err => {\n\t\t\t// ignore AbortError when play promise is interrupted by a new load request or call to pause()\n\t\t\tif ( err.code != ERR_ABORT ) {\n\t\t\t\tconsoleLog( err, true );\n\t\t\t\tloadNextSong();\n\t\t\t\tplayNextSong( true );\n\t\t\t}\n\t\t});\n\t}\n\telse\n\t\tloadNextSong();\n\n\tupdatePlaylistUI();\n\treturn true;\n}\n\n/**\n * Player play/pause control\n */\nfunction playPause( play ) {\n\tif ( isMicSource )\n\t\treturn;\n\tif ( isPlaying() && ! play ) {\n\t\taudioElement[ currAudio ].pause();\n\t\tif ( isPIP() )\n\t\t\tpipVideo.pause();\n\t}\n\telse\n\t\taudioElement[ currAudio ].play().catch( err => {\n\t\t\t// ignore AbortError when play promise is interrupted by a new load request or call to pause()\n\t\t\tif ( err.code != ERR_ABORT ) {\n\t\t\t\tconsoleLog( err, true )\n\t\t\t\tplayNextSong( true );\n\t\t\t}\n\t\t});\n}\n\n/**\n * Play previous song on queue\n */\nfunction playPreviousSong() {\n\tlet ret = true;\n\n\tif ( isPlaying() ) {\n\t\tif ( audioElement[ currAudio ].currentTime > 2 )\n\t\t\taudioElement[ currAudio ].currentTime = 0;\n\t\telse if ( playlistPos > 0 )\n\t\t\tplaySong( playlistPos - 1 );\n\t\telse\n\t\t\tret = false;\n\t}\n\telse\n\t\tret = loadSong( playlistPos - 1 );\n\n\treturn ret;\n}\n\n/**\n * Play a song from the play queue\n */\nfunction playSong( n ) {\n\tloadSong( n, true );\n}\n\n/**\n * Populate background selection\n * uses `bgImages` and `bgVideos` globals\n */\nfunction populateBackgrounds() {\n\t// basic background options\n\tlet bgOptions = [\n\t\t{ value: BG_COVER,   text: 'Album cover'      },\n\t\t{ value: BG_BLACK,   text: 'Black'            },\n\t\t{ value: BG_DEFAULT, text: 'Gradient default' }\n\t];\n\n\tconst basicCount = bgOptions.length,\n\t\t  imageCount = bgImages.length,\n\t\t  videoCount = bgVideos.length;\n\n\t// add image and video files from the backgrounds folder\n\tbgOptions = [\n\t\t...bgOptions,\n\t\t...bgImages.map( ( item, idx ) => ({ value: BG_IMAGE + item.name, text: '🖼️ ' + item.name, idx }) ),\n\t\t...bgVideos.map( ( item, idx ) => ({ value: BG_VIDEO + item.name, text: '🎬 ' + item.name, idx }) )\n\t].slice( 0, basicCount + +elBgMaxItems.value ); // coerce field value to number\n\n\tif ( videoCount )\n\t\tbgOptions.splice( basicCount, 0, { value: BG_VIDEO, text: 'Random video' } );\n\n\tif ( imageCount )\n\t\tbgOptions.splice( basicCount, 0, { value: BG_IMAGE, text: 'Random image' } );\n\n\tpopulateSelect( elBackground, bgOptions ); // add more background options\n}\n\n/**\n * Populate a custom radio buttons element\n *\n * @param element {object}\n * @param options {array} arrays [ value, text ] or objects { value, text, disabled }\n */\nfunction populateCustomRadio( element, options ) {\n\tconst isObject = ! Array.isArray( options[0] );\n\tfor ( const item of ( isObject ? options.filter( i => ! i.disabled ) : options ) ) {\n\t\tconst name = element.dataset.prop,\n\t\t\t  text = item.text || item[1],\n\t\t\t  val  = item.value || item[0],\n\t\t\t  id   = name + '-' + val,\n\t\t \t  button = document.createElement('input'),\n\t\t \t  label = document.createElement('label');\n\n\t\tbutton.name  = name;\n\t\tbutton.id    = id;\n\t\tbutton.type  = 'radio';\n\t\tbutton.value = val;\n\n\t\tlabel.htmlFor = id;\n\t\tlabel.innerText = text;\n\n\t\telement.append( button, label );\n\t}\n}\n\n/**\n * Build checkboxes in #config that enables gradients in the combo box of the settings panel\n */\nfunction populateEnabledGradients() {\n\t// Enabled gradients\n\tconst elEnabledGradients = $('#enabled_gradients');\n\n\t// reset\n\tdeleteChildren(elEnabledGradients);\n\n\tObject.keys( gradients ).forEach( key => {\n\t\t// only set up link for editing if this is a custom gradient\n\t\tif (key.startsWith('custom')) {\n\t\t\telEnabledGradients.innerHTML +=\n\t\t\t\t`<label>\n\t\t\t       <input type=\"checkbox\" class=\"enabledGradient\" data-grad=\"${key}\" ${gradients[ key ].disabled ? '' : 'checked'}>\n                   <a href=\"#\" data-grad=\"${key}\" class=\"grad-edit-link\">${gradients[ key ].name}</a>\n                </label>`;\n\t\t} else {\n\t\t\telEnabledGradients.innerHTML +=\n\t\t\t\t`<label>\n\t\t\t       <input type=\"checkbox\" class=\"enabledGradient\" data-grad=\"${key}\" ${gradients[key].disabled ? '' : 'checked'}>\n                   ${gradients[key].name}\n                </label>`;\n\t\t}\n\t});\n\n\t$$('.enabledGradient').forEach( el => {\n\t\tel.addEventListener( 'click', event => {\n\t\t\tif ( ! el.checked ) {\n\t\t\t\tconst count = Object.keys( gradients ).reduce( ( acc, val ) => acc + ! gradients[ val ].disabled, 0 );\n\t\t\t\tif ( count < 2 ) {\n\t\t\t\t\tnotie.alert({ text: 'At least one Gradient must be enabled!' });\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\tgradients[ el.dataset.grad ].disabled = ! el.checked;\n\t\t\tpopulateGradients();\n\t\t\tsavePreferences(KEY_DISABLED_GRADS);\n\t\t});\n\t});\n\n\t$$('.grad-edit-link').forEach( el => {\n\t\tel.addEventListener('click', event => {\n\t\t\tevent.preventDefault();\n\t\t\tconst key = event.target.getAttribute(\"data-grad\");\n\t\t\topenGradientEdit(key);\n\t\t})\n\t})\n}\n\n/**\n * Populate UI gradient selection combo box\n */\nfunction populateGradients() {\n\tfor ( const el of [ elGradient, elGradientRight ] ) {\n\t\tlet grad = el.value;\n\t\tdeleteChildren( el );\n\n\t\t// add the option to the html select element for the user interface\n\t\tfor ( const key of Object.keys( gradients ) ) {\n\t\t\tif ( ! gradients[ key ].disabled )\n\t\t\t\tel.options[ el.options.length ] = new Option( gradients[ key ].name, key );\n\t\t}\n\n\t\tif ( grad !== '' ) {\n\t\t\tel.value = grad;\n\t\t\tsetProperty( el );\n\t\t}\n\t}\n}\n\n/**\n * Populate a select element\n *\n * @param element {object}\n * @param options {array} array of `[ value, text ]` arrays or `{ value, text, disabled?, idx? }` objects\n */\nfunction populateSelect( element, options ) {\n\tconst oldValue = element.value;\n\n\tif ( ! Array.isArray( options ) )\n\t\toptions = [ options ]; // ensure options is an array\n\n\tdeleteChildren( element );\n\n\tfor ( const item of options.filter( i => i && ! i.disabled ) ) {\n\t\tconst option = new Option( item.text || item[1], item.value || item[0] );\n\t\tif ( item[0] === null )\n\t\t\toption.disabled = true;\n\t\tif ( item.idx !== undefined )\n\t\t\toption.idx = item.idx; // index to bgImages or bgVideos arrays (for backgrounds select element only)\n\t\telement[ element.options.length ] = option;\n\t}\n\n\tif ( oldValue !== '' ) {\n\t\telement.value = oldValue;\n\t\tif ( element.selectedIndex == -1 ) // old value disabled\n\t\t\telement.selectedIndex = 0;\n\t\tsetProperty( element );\n\t}\n}\n\n/**\n * Choose random settings\n *\n * @param [force] {boolean} force change even when not playing\n *                (default true for microphone input, false otherwise )\n */\nfunction randomizeSettings( force = isMicSource ) {\n\tif ( ! isPlaying() && ! force )\n\t\treturn;\n\n\t// helper functions\n\tconst isEnabled = prop => ! randomProperties.find( item => item.value == prop ).disabled;\n\n\tconst randomizeControl = ( el, push = true, validate = () => true ) => {\n\t\tlet attempts = 9; // avoid an infinite loop just in case validation is never satisfied\n\t\tdo {\n\t\t\tif ( isCustomRadio( el ) ) {\n\t\t\t\t// custom radio buttons\n\t\t\t\tconst items = el.elements[ el.dataset.prop ];\n\t\t\t\titems[ randomInt( items.length ) ].checked = true;\n\t\t\t}\n\t\t\telse if ( el.dataset.active !== undefined ) // on/off switches\n\t\t\t\tel.dataset.active = randomInt();\n\t\t\telse if ( el.step ) {\n\t\t\t\t// range inputs\n\t\t\t\tconst { min, max, step } = el, // note: these come as strings\n\t\t\t\t\t  range = ( max - min ) / step,\n\t\t\t\t\t  newVal = randomInt( range + 1 ) * step + +min; // coerce min to number\n\n\t\t\t\tel.value = ( newVal * 10 | 0 ) / 10; // fix rounding errors (1 decimal place)\n\t\t\t\tupdateRangeValue( el );\n\t\t\t}\n\t\t\telse // selects\n\t\t\t\tel.selectedIndex = randomInt( el.options.length );\n\t\t} while ( ! validate( getControlValue( el ) ) && attempts-- );\n\n\t\tif ( push )\n\t\t\tprops.push( el );\n\t}\n\n\tlet props = []; // properties that need to be updated\n\n\tif ( isEnabled( RND_PRESETS ) ) {\n\t\tconst validIndexes = userPresets.map( ( item, index ) => isEmpty( item ) ? null : index ).filter( item => item !== null ),\n\t\t\t  count = validIndexes.length;\n\t\tif ( count )\n\t\t\tloadPreset( validIndexes[ randomInt( count ) ], false, false, true );\n\t}\n\n\tif ( isEnabled( RND_MODE ) )\n\t\trandomizeControl( elMode );\n\n\tif ( isEnabled( RND_ALPHA ) )\n\t\trandomizeControl( elAlphaBars );\n\n\tif ( isEnabled( RND_BACKGROUND ) )\n\t\trandomizeControl( elBackground, false );\n\n\tif ( isEnabled( RND_BGIMAGEFIT ) )\n\t\trandomizeControl( elBgImageFit );\n\n\tif ( isEnabled( RND_CHNLAYOUT ) )\n\t\trandomizeControl( elChnLayout, true, newVal => newVal != CHANNEL_COMBINED ); // remove dual-combined from randomize\n\n\tif ( isEnabled( RND_COLORMODE ) )\n\t\trandomizeControl( elColorMode );\n\n\tif ( isEnabled( RND_PEAKS ) )\n\t\trandomizeControl( elShowPeaks );\n\n\tif ( isEnabled( RND_LEDS ) )\n\t\trandomizeControl( elLedDisplay );\n\n\tif ( isEnabled( RND_LUMI ) )\n\t\trandomizeControl( elLumiBars, true, newVal => ! newVal || elBackground.value[0] <= 1 || ! isSwitchOn( elLedDisplay ) ); // no LUMI when LEDs are on and background is image or video\n\n\tif ( isEnabled( RND_LINEWIDTH ) )\n\t\trandomizeControl( elLineWidth, false );\n\n\tif ( isEnabled( RND_FILLOPACITY ) )\n\t\trandomizeControl( elFillAlpha, false );\n\n\tif ( isEnabled( RND_BARSPACING ) )\n\t\trandomizeControl( elBarSpace, false );\n\n\tif ( isEnabled( RND_OUTLINE ) )\n\t\trandomizeControl( elOutline );\n\n\tif ( isEnabled( RND_REFLEX ) )\n\t\trandomizeControl( elReflex, false, newVal => newVal != REFLEX_FULL || ! isSwitchOn( elLedDisplay ) ); // no full reflex with LEDs\n\n\tif ( isEnabled( RND_RADIAL ) )\n\t\trandomizeControl( elRadial );\n\n\tif ( isEnabled( RND_ROUND ) )\n\t\trandomizeControl( elRoundBars );\n\n\tif ( isEnabled( RND_SPIN ) )\n\t\trandomizeControl( elSpin );\n\n\tif ( isEnabled( RND_SPLIT ) )\n\t\trandomizeControl( elSplitGrad );\n\n\tif ( isEnabled( RND_MIRROR ) )\n\t\trandomizeControl( elMirror );\n\n\tif ( isEnabled( RND_GRADIENT ) ) {\n\t\tfor ( const el of [ elGradient, ...( isSwitchOn( elLinkGrads ) ? [] : [ elGradientRight ] ) ] )\n\t\t\trandomizeControl( el );\n\t}\n\n\t// add properties that depend on other settings (mode also sets barspace)\n\tprops.push( elBackground, elReflex, elMode );\n\n\t// effectively set the affected properties\n\tsetProperty( props );\n}\n\n/**\n * Remove a key from localStorage\n *\n * @param key {string}\n */\nfunction removeFromStorage( key ) {\n\tif ( isElectron )\n\t\telectron.api( 'storage-remove', key );\n\telse\n\t\tlocalStorage.removeItem( key );\n}\n\n/**\n * Renders #grad-color-table based upon values of currentGradient.\n */\nfunction renderGradientEditor() {\n\tif (currentGradient == null) throw new Error(\"Current gradient must be set before editing gradient\")\n\n\t// empty table\n\tconst table = $('#grad-color-table');\n\tdeleteChildren(table);\n\n\t// set name\n\t$('#new-gradient-name').value = currentGradient.name;\n\n\t// set horizontal\n\t$('#new-gradient-horizontal').checked = currentGradient.dir === 'h';\n\n\tconst tableLabels = $('#grad-row-label-template').cloneNode(true);\n\ttableLabels.removeAttribute(\"id\");\n\ttable.appendChild(tableLabels);\n\n\t// build row for each stop in the gradient\n\tcurrentGradient.colorStops.forEach((stop, i) => {\n\t\trenderColorRow(i, currentGradient.colorStops[i]);\n\t});\n\n\t$('#new-gradient-bkgd').value = currentGradient.bgColor;\n}\n\n/**\n * Render color stop row inside of the #grad-color-table, adding proper event listeners.\n */\nfunction renderColorRow(index, stop) {\n\tconst table = $('#grad-color-table');\n\n\tconst template = $('#grad-row-template').cloneNode(true);\n\tconst colorPicker = template.querySelector('.grad-color-picker');\n\tconst colorValue = template.querySelector('.grad-color-value');\n\tconst colorStop = template.querySelector('.grad-color-stop');\n\tconst addColorButton = template.querySelector('.grad-add-stop');\n\tconst removeColorButton = template.querySelector('.grad-remove-stop');\n\n\tcolorPicker.value = stop.color;\n\tcolorValue.value = stop.color;\n\tcolorStop.value = stop.pos;\n\n\tcolorPicker.addEventListener('input', (e) => {\n\t\tcolorValue.value = e.target.value;\n\t\tcurrentGradient.colorStops[index].color = colorPicker.value;\n\t});\n\n\tcolorValue.addEventListener('input', (e) => {\n\t\tcolorPicker.value = e.target.value;\n\t\tcurrentGradient.colorStops[index].color = colorPicker.value;\n\t});\n\n\tcolorStop.addEventListener('input', (e) => {\n\t\tcurrentGradient.colorStops[index].pos = parseFloat(e.target.value);\n\t});\n\n\taddColorButton.addEventListener('click', () => {\n\t\tconst idealColorPos = () => {\n\t\t\t// if this is the last color stop, set the second to last stop's position as the midpoint between the last\n\t\t\t// and the second to last, then return this stop's position\n\t\t\t// if not, return the midpoint between this and the next stop\n\t\t\tif (index === currentGradient.colorStops.length - 1) {\n\t\t\t\tconst lastPos = currentGradient.colorStops[currentGradient.colorStops.length - 1].pos\n\t\t\t\tcurrentGradient.colorStops[currentGradient.colorStops.length - 1].pos =\n\t\t\t\t\t(currentGradient.colorStops[currentGradient.colorStops.length - 2].pos + lastPos) / 2;\n\t\t\t\treturn lastPos;\n\t\t\t} else {\n\t\t\t\treturn (currentGradient.colorStops[index].pos + currentGradient.colorStops[index + 1].pos) / 2;\n\t\t\t}\n\t\t}\n\n\t\tcurrentGradient.colorStops.splice(index + 1, 0, {\n\t\t\tpos: idealColorPos(),\n\t\t\tcolor: '#111111',\n\t\t});\n\t\trenderGradientEditor();\n\t});\n\n\t// prevent from being able to delete stops if there are two stops\n\tif (currentGradient.colorStops.length === 2) {\n\t\tremoveColorButton.setAttribute('disabled', 'true');\n\t} else {\n\t\tremoveColorButton.addEventListener('click', () => {\n\t\t\tcurrentGradient.colorStops.splice(index, 1);\n\t\t\trenderGradientEditor();\n\t\t});\n\t}\n\n\ttemplate.removeAttribute(\"id\");\n\ttable.appendChild(template);\n}\n\n/**\n * Retrieve image and video files from the selected backgrounds folder\n * Data is stored in the `bgImages` and `bgVideos` global arrays\n */\nasync function retrieveBackgrounds() {\n\tconst bgLocation = elBgLocation.value,\n\t\t  imageExtensions = new RegExp( '\\\\.(' + FILE_EXT_IMAGE.join('|') + ')$', 'i' ),\n\t\t  videoExtensions = new RegExp( '\\\\.(' + FILE_EXT_VIDEO.join('|') + ')$', 'i' );\n\n\tbgImages = [];\n\tbgVideos = [];\n\n\tif ( bgLocation == BGFOLDER_SERVER ) {\n\t\ttry {\n\t\t\tconst response = await fetch( BG_DIRECTORY ),\n\t\t\t\t  content  = await response.text();\n\n\t\t\tfor ( const { file } of fileExplorer.parseWebIndex( content ) ) {\n\t\t\t\tconst name = parsePath( file ).baseName,\n\t\t\t\t\t  url  = BG_DIRECTORY + '/' + encodeURIComponent( file );\n\n\t\t\t\tif ( imageExtensions.test( file ) )\n\t\t\t\t\tbgImages.push( { name, url } );\n\t\t\t\telse if ( videoExtensions.test( file ) )\n\t\t\t\t\tbgVideos.push( { name, url } );\n\t\t\t}\n\t\t}\n\t\tcatch( e ) {} // fail silently (possibly directory not found on server)\n\t}\n\telse if ( bgLocation == BGFOLDER_LOCAL ) {\n\t\tconst bgDirHandle = await get( KEY_BG_DIR_HANDLE );\n\n\t\ttry {\n\t\t\tif ( bgDirHandle ) {\n\t\t\t\tfor await ( const [ name, handle ] of bgDirHandle.entries() ) {\n\t\t\t\t\tif ( handle instanceof FileSystemFileHandle ) {\n\t\t\t\t\t\tconst isImage = imageExtensions.test( name ),\n\t\t\t\t\t\t\t  isVideo = videoExtensions.test( name );\n\n\t\t\t\t\t\tif ( isImage || isVideo ) {\n\t\t\t\t\t\t\tconst file = await handle.getFile(),\n\t\t\t\t\t\t\t\t  url  = URL.createObjectURL( file );\n\n\t\t\t\t\t\t\tif ( isImage )\n\t\t\t\t\t\t\t\tbgImages.push( { name, url } );\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\tbgVideos.push( { name, url } );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tcatch( e ) {} // needs permission to access local device\n\t}\n\n\tif ( bgLocation != BGFOLDER_NONE ) {\n\t\tconst imageCount = bgImages.length,\n\t\t\t  videoCount = bgVideos.length;\n\n\t\tconsoleLog( 'Found ' + ( imageCount + videoCount == 0 ? 'no media' : imageCount + ' image files and ' + videoCount + ' video' ) + ' files in the backgrounds folder' );\n\t}\n\n\tpopulateBackgrounds();\n}\n\n/**\n * Retrieve metadata for files in the play queue\n */\nasync function retrieveMetadata() {\n\t// leave when we already have enough concurrent requests pending\n\tif ( waitingMetadata >= MAX_METADATA_REQUESTS )\n\t\treturn;\n\n\t// find the first play queue item for which we haven't retrieved the metadata yet\n\tconst queueItem = Array.from( playlist.children ).find( el => el.dataset.retrieve );\n\n\tif ( queueItem ) {\n\n\t\tlet uri    = queueItem.dataset.file,\n\t\t\trevoke = false;\n\n\t\twaitingMetadata++;\n\t\tdelete queueItem.dataset.retrieve;\n\n\t\tqueryMetadata: {\n\t\t\tif ( queueItem.handle ) {\n\t\t\t\tif ( await queueItem.handle.requestPermission() != 'granted' )\n\t\t\t\t\tbreak queryMetadata;\n\n\t\t\t\turi = URL.createObjectURL( await queueItem.handle.getFile() );\n\t\t\t\trevoke = true;\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tconst metadata = await mm.fetchFromUrl( uri, { skipPostHeaders: true } );\n\t\t\t\tif ( metadata ) {\n\t\t\t\t\taddMetadata( metadata, queueItem ); // add metadata to play queue item\n\t\t\t\t\tsyncMetadataToAudioElements( queueItem );\n\t\t\t\t\tif ( ! queueItem.handle && ! ( metadata.common.picture && metadata.common.picture.length ) ) {\n\t\t\t\t\t\tgetFolderCover( uri ).then( cover => {\n\t\t\t\t\t\t\tqueueItem.dataset.cover = cover;\n\t\t\t\t\t\t\tsyncMetadataToAudioElements( queueItem );\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch( e ) {}\n\n\t\t\tif ( revoke )\n\t\t\t\tURL.revokeObjectURL( uri );\n\t\t}\n\n\t\twaitingMetadata--;\n\t\tretrieveMetadata(); // call again to continue processing the queue\n\t}\n}\n\n/**\n * Release URL objects created for image blobs\n */\nfunction revokeBlobURL( item ) {\n\tconst cover = item.dataset.cover;\n\tif ( isBlob( cover ) )\n\t\tURL.revokeObjectURL( cover );\n}\n\n/**\n * Assign the gradient in the global gradients object, register in the analyzer, populate gradients in the config,\n * then close the panel.\n */\nfunction saveGradient() {\n\tif (currentGradient === null) return;\n\n\tgradients[currentGradient.key] = currentGradient;\n\taudioMotion.registerGradient(currentGradient.key, currentGradient);\n\tpopulateGradients();\n\tpopulateEnabledGradients();\n\tsavePreferences(KEY_CUSTOM_GRADS);\n\n\tcurrentGradient = null;\n\tlocation.href = '/#config';\n}\n\n/**\n * Save/update an existing playlist\n */\nfunction savePlaylist( index ) {\n\n\tif ( elPlaylists[ index ].value == '' )\n\t\tstorePlayQueue();\n\telse if ( ! elPlaylists[ index ].dataset.isLocal )\n\t\tnotie.alert({ text: 'This is a server playlist which cannot be overwritten.<br>Click \"Save as...\" to create a new local playlist.', time: 5 });\n\telse\n\t\tnotie.confirm({ text: `Overwrite \"${elPlaylists[ index ].innerText}\" with the current play queue?`,\n\t\t\tsubmitText: 'Overwrite',\n\t\t\tsubmitCallback: () => {\n\t\t\t\tstorePlayQueue( elPlaylists[ index ].value );\n\t\t\t},\n\t\t\tcancelCallback: () => {\n\t\t\t\tnotie.alert({ text: 'Canceled' });\n\t\t\t}\n\t\t});\n}\n\n/**\n * Save the playqueue to the filesystem\n * (Electron only)\n */\nfunction savePlayqueueToServer( path, update ) {\n\tif ( queueLength() == 0 ) {\n\t\tnotie.alert({ text: 'Queue is empty!' });\n\t\treturn;\n\t}\n\n\tif ( ! path ) {\n\t\tnotie.input({\n\t\t\ttext: 'Playlist will be saved to the current folder.<br>Enter filename:',\n\t\t\tsubmitText: 'Save',\n\t\t\tsubmitCallback: value => {\n\t\t\t\tif ( value ) {\n\t\t\t\t\tconst newPath = fileExplorer.makePath( value, true );\n\t\t\t\t\tsavePlayqueueToServer( newPath );\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t\tnotie.alert({ text: 'Canceled' });\n\t\t\t},\n\t\t\tcancelCallback: () => {\n\t\t\t\tnotie.alert({ text: 'Canceled' });\n\t\t\t}\n\t\t});\n\t\treturn;\n\t}\n\n\tconst contents = [];\n\n\tplaylist.childNodes.forEach( item => {\n\t\tconst { file, artist, title, duration } = item.dataset;\n\t\tcontents.push( { file: removeServerEncoding( file ), artist, title, duration } );\n\t});\n\n\tfetch( ROUTE_SAVE + path, {\n\t\tmethod: update ? 'PUT' : 'POST',\n\t\theaders: {\n\t\t\t'Content-Type': 'application/json'\n\t\t},\n\t\tbody: JSON.stringify( { contents } )\n\t})\n\t.then( response => response.status == 200 ? response.json() : { error: `Cannot save file (ERROR ${ response.status })` } )\n\t.then( ( { file, error } ) => {\n\t\tconst text = file ? `${ update ? 'Updated' : 'Saved as' } ${ parsePath( file ).fileName }` : error;\n\t\tnotie.alert({ text });\n\t\tsetLoadedPlaylist( file );\n\t\tfileExplorer.refresh();\n\t});\n}\n\n/**\n * Save Config Panel preferences to localStorage\n *\n * @param [key] {string} preference to save; if undefined save all preferences (default)\n */\nfunction savePreferences( key ) {\n\t// helper function\n\tconst getDisabledItems = items => items.map( ( { value, disabled } ) => ( { value, disabled } ) );\n\n\tif ( ! key || key == KEY_DISABLED_MODES )\n\t\tsaveToStorage( KEY_DISABLED_MODES, getDisabledItems( modeOptions ) );\n\n\tif ( ! key || key == KEY_DISABLED_BGFIT )\n\t\tsaveToStorage( KEY_DISABLED_BGFIT, getDisabledItems( bgFitOptions ) );\n\n\tif ( ! key || key == KEY_DISABLED_GRADS )\n\t\tsaveToStorage( KEY_DISABLED_GRADS, Object.keys( gradients ).map( key => ( { value: key, disabled: gradients[ key ].disabled } ) ) );\n\n\tif (! key || key == KEY_CUSTOM_GRADS) {\n\t\tconst customGradients = {};\n\t\tObject.keys(gradients)\n\t\t\t.filter(key => key.startsWith('custom'))\n\t\t\t.forEach(key => customGradients[key] = gradients[key]);\n\t\tsaveToStorage( KEY_CUSTOM_GRADS, customGradients);\n\t}\n\n\tif ( ! key || key == KEY_DISABLED_PROPS )\n\t\tsaveToStorage( KEY_DISABLED_PROPS, getDisabledItems( randomProperties ) );\n\n\tif ( ! key || key == KEY_SENSITIVITY ) {\n\t\tlet sensitivityPresets = [];\n\t\tfor ( const i of [0,1,2] ) {\n\t\t\tsensitivityPresets.push( {\n\t\t\t\tmin: $(`.min-db[data-preset=\"${i}\"]`).value,\n\t\t\t\tmax: $(`.max-db[data-preset=\"${i}\"]`).value,\n\t\t\t\tboost: $(`.linear-boost[data-preset=\"${i}\"]`).value\n\t\t\t});\n\t\t}\n\t\tsaveToStorage( KEY_SENSITIVITY, sensitivityPresets );\n\t}\n\n\tif ( ! key || key == KEY_DISPLAY_OPTS ) {\n\t\tconst displayOptions = {\n\t\t\tinfo  : elInfoTimeout.value,\n\t\t\ttrack : elTrackTimeout.value,\n\t\t\tend   : elEndTimeout.value,\n\t\t\tcovers: elShowCover.checked,\n\t\t\tcount : elShowCount.checked\n\t\t}\n\t\tsaveToStorage( KEY_DISPLAY_OPTS, displayOptions );\n\t}\n\n\tif ( ! key || key == KEY_GENERAL_OPTS ) {\n\t\tconst generalOptions = {\n\t\t\tbgLocation : elBgLocation.value,\n\t\t\tbgMaxItems : elBgMaxItems.value,\n\t\t\tenableVideo: elEnableVideo.checked,\n\t\t\tfftSize    : elFFTsize.value,\n\t\t\tfsHeight   : elFsHeight.value,\n\t\t\tmaxFPS     : elMaxFPS.value,\n\t\t\tpipRatio   : elPIPRatio.value,\n\t\t\tsaveDir    : elSaveDir.checked,\n\t\t\tsaveQueue  : elSaveQueue.checked,\n\t\t\tsmoothing  : elSmoothing.value\n\t\t}\n\t\tsaveToStorage( KEY_GENERAL_OPTS, generalOptions );\n\t}\n}\n\n/**\n * Save an object to localStorage in JSON format\n *\n * @param {string} item key\n * @param {object} data object\n */\nfunction saveToStorage( key, data ) {\n\tconst value = JSON.stringify( data );\n\tif ( isElectron )\n\t\telectron.api( 'storage-set', key, value );\n\telse\n\t\tlocalStorage.setItem( key, value );\n}\n\n/**\n * Save or update a user preset\n *\n * @param {number} slot index (0-8)\n * @param {object} settings object\n * @param [{boolean}] force overwriting existing content\n */\nfunction saveUserPreset( index, options, name, force ) {\n\tconst userPresetText = `User Preset #${ index + 1 }`,\n\t\t  currentName    = userPresets[ index ].name || '', // avoid undefined\n\t\t  isFullscreen   = audioMotion.isFullscreen,\n\t\t  confirmTimeout = 5;\n\n\t// Show warning messages on attempt to overwrite existing preset\n\tif ( ! isEmpty( userPresets[ index ] ) && ! force && overwritePreset !== index ) {\n\t\tif ( isFullscreen ) {\n\t\t\tsetCanvasMsg( `Overwrite ${ userPresetText } - Press again to confirm!`, confirmTimeout );\n\t\t\toverwritePreset = index;\n\t\t\tsetTimeout( () => {\n\t\t\t\tif ( overwritePreset === index )\n\t\t\t\t\toverwritePreset = false;\n\t\t\t}, confirmTimeout * 1000 );\n\t\t}\n\t\telse {\n\t\t\tnotie.confirm({\n\t\t\t\ttext: `Do you really want to overwrite ${ userPresetText }?<br>${ currentName }`,\n\t\t\t\tsubmitText: 'Overwrite',\n\t\t\t\tsubmitCallback: () => {\tsaveUserPreset( index, options, name, true ); }, // force save\n\t\t\t\tcancelCallback: () => {\tnotie.alert({ text: 'Canceled!' }) }\n\t\t\t});\n\t\t}\n\t\treturn;\n\t}\n\n\toverwritePreset = false;\n\n\tif ( ! name || ! `${ name }`.trim() ) { // coerce to string, but check for falsy values first (avoid strings like 'undefined')\n\t\tif ( isFullscreen )\n\t\t\tname = '';\n\t\telse {\n\t\t\tnotie.input({\n\t\t\t\ttext: 'Give this preset a name or short description',\n\t\t\t\tsubmitText: 'Save',\n\t\t\t\tvalue: currentName,\n\t\t\t\tmaxlength: 40,\n\t\t\t\tsubmitCallback: newName => { saveUserPreset( index, options, newName.trim() || PRESET_NONAME, true ); },\n\t\t\t\tcancelCallback: () => {\tnotie.alert({ text: 'Save canceled!' }) }\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\t}\n\n\t// avoid saving the placeholder text\n\tif ( name == PRESET_NONAME )\n\t\tname = '';\n\n\t// Update presets array in memory and save updated contents to storage\n\tuserPresets[ index ] = { name, options };\n\tsaveToStorage( KEY_CUSTOM_PRESET, userPresets );\n\n\tconst text = `Saved to ${ userPresetText }`;\n\tif ( isFullscreen )\n\t\tsetCanvasMsg( text, 5 );\n\telse\n\t\tnotie.alert({ text });\n}\n\n/**\n * Schedule start of track fast search\n *\n * @param mode {string} 'm' for mouse, 'k' for keyboard\n * @param [dir] {number} 1 for FF, -1 for REW\n */\nfunction scheduleFastSearch( mode, dir = 1 ) {\n\t// set a 200ms timeout to start fast search (wait for 'click' or 'keyup' event)\n\tfastSearchTimeout = setTimeout( () => {\n\t\tisFastSearch = mode;\n\t\tfastSearch( dir );\n\t}, 200 );\n}\n\n/**\n * Set the background image CSS variable\n */\nfunction setBackgroundImage( url ) {\n\tdocument.documentElement.style.setProperty( '--background-image', url ? `url( ${ url.replace( /['()]/g, '\\\\$&' ) } )` : 'none' );\n}\n\n/**\n * Set balance\n */\nfunction setBalance( value ) {\n\telBalance.dataset.value = value;\n\tif ( panNode )\n\t\tpanNode.pan.value = Math.log10( 9 * Math.abs( value ) + 1 ) * Math.sign( value );\n\telBalance.querySelector('.marker').style.transform = `rotate( ${ 145 * value - 90 }deg )`;\n}\n\n/**\n * Set message for on-screen display\n *\n * @param msg {number|string} number indicates information level (0=none; 1=song info; 2=full info)\n *                            string provides a custom message to be displayed at the top\n * @param [timer] {number} time in seconds to display message (1/3rd of it will be used for fade in/out)\n * @param [dir] {number} 1 for fade-in; -1 for fade-out (default)\n */\nfunction setCanvasMsg( msg, timer = 2, dir = -1 ) {\n\tif ( ! msg )\n\t\tcanvasMsg = { endTime: 0, msgTimer: 0 }; // clear all canvas messages\n\telse {\n\t\tconst now = performance.now(),\n\t\t \t  targetTime = now + timer * 1000;\n\t\tif ( msg == +msg ) { // msg is a number\n\t\t\tcanvasMsg.info = msg; // set info level 1 or 2\n\t\t\tcanvasMsg.startTime = now;\n\t\t\tcanvasMsg.endTime = Math.max( targetTime, canvasMsg.endTime || 0 ); // note: Infinity | 0 == 0\n\t\t\tcanvasMsg.fade = ( timer == Infinity ) ? 0 : timer / 3 * dir;\n\t\t}\n\t\telse {\n\t\t\tcanvasMsg.msg = msg;  // set custom message\n\t\t\tif ( canvasMsg.info == 2 )\n\t\t\t\tcanvasMsg.info = 1;\n\t\t\tcanvasMsg.msgTimer = targetTime;\n\t\t}\n\t}\n}\n\n/**\n * Set the cover image for the current audio element\n */\nfunction setCurrentCover() {\n\tcoverImage.src = audioElement[ currAudio ].dataset.cover;\n\tif ( elBackground.value == BG_COVER )\n\t\tsetBackgroundImage( coverImage.src );\n}\n\n/**\n * Set general configuration options\n */\nfunction setGeneralOptions( options ) {\n\telBgLocation.value    = options.bgLocation;\n\telBgMaxItems.value    = options.bgMaxItems;\n\telEnableVideo.checked = options.enableVideo;\n\telFFTsize.value       = options.fftSize;\n\telFsHeight.value      = options.fsHeight;\n\telMaxFPS.value        = options.maxFPS;\n\telPIPRatio.value      = options.pipRatio;\n\telSaveDir.checked     = options.saveDir;\n\telSaveQueue.checked   = options.saveQueue;\n\telSmoothing.value     = options.smoothing;\n}\n\n/**\n * Set on-screen display options UI fields\n */\nfunction setInfoOptions( options ) {\n\telInfoTimeout.value  = options.info;\n\telTrackTimeout.value = options.track;\n\telEndTimeout.value   = options.end;\n\telShowCover.checked  = options.covers;\n\telShowCount.checked  = options.count;\n}\n\n/**\n * Set / clear the currently loaded playlist (for Electron version)\n */\nfunction setLoadedPlaylist( path = '' ) {\n\tif ( isElectron ) {\n\t\tpath = removeServerEncoding( path );\n\t\telLoadedPlist.dataset.path = encodeSlashes( path );\n\t\telLoadedPlist.innerText = parsePath( path ).fileName;\n\t\telLoadedPlist.title = decodeSlashes( path, true ); // display native OS slashes (Windows)\n\t}\n}\n\n/**\n * Set audioMotion properties\n *\n * @param elems {object|array} a DOM element object or array of objects\n * @param [save] {boolean} true to save current settings to last used preset\n */\nfunction setProperty( elems, save = true ) {\n\tif ( ! Array.isArray( elems ) )\n\t\telems = [ elems ];\n\n\tconst toggleGradients = () => elGradientRight.style.display = ( getControlValue( elChnLayout ) == CHANNEL_SINGLE || isSwitchOn( elLinkGrads ) ) ? 'none' : '';\n\n\tfor ( const el of elems ) {\n\t\tswitch ( el ) {\n\t\t\tcase elAlphaBars:\n\t\t\t\taudioMotion.alphaBars = isSwitchOn( elAlphaBars );\n\t\t\t\tbreak;\n\n\t\t\tcase elAnsiBands:\n\t\t\t\taudioMotion.ansiBands = isSwitchOn( elAnsiBands );\n\t\t\t\tbreak;\n\n\t\t\tcase elBackground:\n\t\t\t\tconst bgOption  = elBackground.value[0],\n\t\t\t\t\t  index     = elBackground[ elBackground.selectedIndex ].idx,\n\t\t\t\t\t  isOverlay = bgOption != BG_DEFAULT && bgOption != BG_BLACK;\n\n\t\t\t\taudioMotion.overlay = isOverlay;\n\t\t\t\taudioMotion.showBgColor = bgOption == BG_DEFAULT;\n\n\t\t\t\tif ( bgOption == BG_VIDEO ) {\n\t\t\t\t\tsetBackgroundImage(); // clear background image\n\t\t\t\t\telVideo.style.display = ''; // enable display of video layer\n\n\t\t\t\t\t// if there's no index, pick a random video from the array\n\t\t\t\t\tconst url = bgVideos[ index === undefined ? randomInt( bgVideos.length ) : index ].url;\n\n\t\t\t\t\tif ( ! elVideo.src.endsWith( url ) ) // avoid restarting the video if it's the same file already in use\n\t\t\t\t\t\telVideo.src = url;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\telVideo.style.display = 'none'; // hide video layer\n\t\t\t\t\tif ( isOverlay ) {\n\t\t\t\t\t\tif ( bgOption == BG_COVER )\n\t\t\t\t\t\t\tsetBackgroundImage( coverImage.src );\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tsetBackgroundImage( bgImages[ index === undefined ? randomInt( bgImages.length ) : index ].url );\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t\tsetBackgroundImage();\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\tcase elBgImageFit:\n\t\t\t\tconst bgFit  = elBgImageFit.value,\n\t\t\t\t\t  isWarp = bgFit == BGFIT_WARP || bgFit == BGFIT_WARP_ANI || bgFit == BGFIT_WARP_ROT;\n\t\t\t\telContainer.classList.toggle( 'repeat', bgFit == BGFIT_REPEAT );\n\t\t\t\telContainer.classList.toggle( 'cover', bgFit == BGFIT_ADJUST || isWarp );\n\t\t\t\telContainer.style.backgroundSize = '';\n\t\t\t\telWarp.style.display = isWarp ? '' : 'none';\n\t\t\t\telWarp.classList.toggle( 'rotating', bgFit == BGFIT_WARP_ROT );\n\t\t\t\telWarp.classList.toggle( 'paused', bgFit == BGFIT_WARP );\n\t\t\t\tbreak;\n\n\t\t\tcase elBgImageDim:\n\t\t\t\telDim.style.background = `rgba(0,0,0,${ 1 - elBgImageDim.value })`;\n\t\t\t\tbreak;\n\n\t\t\tcase elBgLocation:\n\t\t\t\tif ( elBgLocation.value == BGFOLDER_LOCAL ) {\n\t\t\t\t\twindow.showDirectoryPicker({ startIn: 'pictures' })\n\t\t\t\t\t\t.then( handle => {\n\t\t\t\t\t\t\tset( KEY_BG_DIR_HANDLE, handle );\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.catch( e => {\n\t\t\t\t\t\t\t// disable if user denies access\n\t\t\t\t\t\t\telBgLocation.value = BGFOLDER_NONE;\n\t\t\t\t\t\t\tdel( KEY_BG_DIR_HANDLE );\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.finally( () => retrieveBackgrounds() );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tdel( KEY_BG_DIR_HANDLE );\n\t\t\t\t\tretrieveBackgrounds();\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\tcase elBgMaxItems:\n\t\t\t\tpopulateBackgrounds();\n\t\t\t\tbreak;\n\n\t\t\tcase elBarSpace:\n\t\t\t\taudioMotion.barSpace = audioMotion.isLumiBars ? 1.5 : getControlValue( elBarSpace );\n\t\t\t\tbreak;\n\n\t\t\tcase elChnLayout:\n\t\t\t\taudioMotion.channelLayout = getControlValue( elChnLayout );\n\t\t\t\ttoggleGradients();\n\t\t\t\tbreak;\n\n\t\t\tcase elColorMode:\n\t\t\t\taudioMotion.colorMode = getControlValue( elColorMode );\n\t\t\t\tbreak;\n\n\t\t\tcase elEnableVideo:\n\t\t\t\tfileExplorer.setFileExtensions( [ ...FILE_EXT_MUSIC, ...FILE_EXT_PLIST, ...( elEnableVideo.checked ? FILE_EXT_VIDEO : [] ) ] );\n\t\t\t\tfileExplorer.refresh();\n\t\t\t\tbreak;\n\n\t\t\tcase elFillAlpha:\n\t\t\t\taudioMotion.fillAlpha = ( elMode.value == MODE_AREA ) ? 1 : elFillAlpha.value;\n\t\t\t\tbreak;\n\n\t\t\tcase elFFTsize :\n\t\t\t\taudioMotion.fftSize = elFFTsize.value;\n\t\t\t\tconsoleLog( 'FFT size is ' + audioMotion.fftSize + ' samples' );\n\t\t\t\tbreak;\n\n\t\t\tcase elFreqScale:\n\t\t\t\taudioMotion.frequencyScale = getControlValue( elFreqScale );\n\t\t\t\tbreak;\n\n\t\t\tcase elFsHeight:\n\t\t\t\telAnalyzer.style.height = `${elFsHeight.value}%`;\n\t\t\t\tbreak;\n\n\t\t\tcase elRangeMin:\n\t\t\tcase elRangeMax:\n\t\t\t\twhile ( +elRangeMax.value <= +elRangeMin.value )\n\t\t\t\t\telRangeMax.selectedIndex++;\n\t\t\t\taudioMotion.setFreqRange( elRangeMin.value, elRangeMax.value );\n\t\t\t\tbreak;\n\n\t\t\tcase elGradient:\n\t\t\tcase elGradientRight:\n\t\t\t\tif ( el.value === '' ) // handle invalid setting\n\t\t\t\t\tel.selectedIndex = 0;\n\t\t\t\tif ( isSwitchOn( elLinkGrads ) )\n\t\t\t\t\taudioMotion.gradient = elGradient.value = elGradientRight.value = el.value;\n\t\t\t\telse\n\t\t\t\t\taudioMotion[ el == elGradient ? 'gradientLeft' : 'gradientRight' ] = el.value;\n\t\t\t\tbreak;\n\n\t\t\tcase elLedDisplay:\n\t\t\t\taudioMotion.ledBars = isSwitchOn( elLedDisplay );\n\t\t\t\tbreak;\n\n\t\t\tcase elLinearAmpl:\n\t\t\t\taudioMotion.linearAmplitude = isSwitchOn( elLinearAmpl );\n\t\t\t\tbreak;\n\n\t\t\tcase elLineWidth:\n\t\t\t\taudioMotion.lineWidth = ( elMode.value == MODE_AREA ) ? 0 : elLineWidth.value;\n\t\t\t\tbreak;\n\n\t\t\tcase elLinkGrads:\n\t\t\t\ttoggleGradients();\n\t\t\t\tif ( isSwitchOn( elLinkGrads ) )\n\t\t\t\t\tsetProperty( elGradient, false );\n\t\t\t\tbreak;\n\n\t\t\tcase elLoRes:\n\t\t\t\taudioMotion.loRes = isSwitchOn( elLoRes );\n\t\t\t\tbreak;\n\n\t\t\tcase elLumiBars:\n\t\t\t\taudioMotion.lumiBars = isSwitchOn( elLumiBars );\n\t\t\t\tsetProperty( elBarSpace, false );\n\t\t\t\tbreak;\n\n\t\t\tcase elMaxFPS:\n\t\t\t\taudioMotion.maxFPS = elMaxFPS.value;\n\t\t\t\tbreak;\n\n\t\t\tcase elMode:\n\t\t\t\tconst mode = elMode.value;\n\t\t\t\tif ( ! [ MODE_AREA, MODE_LINE ].includes( mode ) )\n\t\t\t\t\taudioMotion.mode = mode;\n\t\t\t\telse\n\t\t\t\t\taudioMotion.mode = 10; // graph mode - for both \"Area\" and \"Line\"\n\n\t\t\t\tif ( mode == MODE_AREA ) {\n\t\t\t\t\taudioMotion.lineWidth = 0;\n\t\t\t\t\taudioMotion.fillAlpha = 1;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\taudioMotion.lineWidth = elLineWidth.value;\n\t\t\t\t\taudioMotion.fillAlpha = elFillAlpha.value;\n\t\t\t\t}\n\n\t\t\t\tsetProperty( elBarSpace, false );\n\t\t\t\tbreak;\n\n\t\t\tcase elMirror:\n\t\t\t\taudioMotion.mirror = getControlValue( elMirror );\n\t\t\t\tbreak;\n\n\t\t\tcase elNoteLabels:\n\t\t\t\taudioMotion.noteLabels = isSwitchOn( elNoteLabels );\n\t\t\t\tbreak;\n\n\t\t\tcase elOutline:\n\t\t\t\taudioMotion.outlineBars = isSwitchOn( elOutline );\n\t\t\t\tbreak;\n\n\t\t\tcase elPIPRatio:\n\t\t\t\tif ( isPIP() )\n\t\t\t\t\taudioMotion.width = audioMotion.height * elPIPRatio.value;\n\t\t\t\tbreak;\n\n\t\t\tcase elRadial:\n\t\t\t\taudioMotion.radial = isSwitchOn( elRadial );\n\t\t\t\tsetProperty( elBarSpace, false );\n\t\t\t\tbreak;\n\n\t\t\tcase elRandomMode:\n\t\t\t\tconst option = elRandomMode.value;\n\n\t\t\t\tif ( randomModeTimer )\n\t\t\t\t\trandomModeTimer = clearInterval( randomModeTimer );\n\n\t\t\t\tif ( option > 1 )\n\t\t\t\t\trandomModeTimer = setInterval( randomizeSettings, 2500 * option );\n\n\t\t\t\tbreak;\n\n\t\t\tcase elReflex:\n\t\t\t\tswitch ( getControlValue( elReflex ) ) {\n\t\t\t\t\tcase REFLEX_ON:\n\t\t\t\t\t\taudioMotion.reflexRatio = .4;\n\t\t\t\t\t\taudioMotion.reflexAlpha = .2;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase REFLEX_FULL:\n\t\t\t\t\t\taudioMotion.reflexRatio = .5;\n\t\t\t\t\t\taudioMotion.reflexAlpha = 1;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\taudioMotion.reflexRatio = 0;\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\tcase elRoundBars:\n\t\t\t\taudioMotion.roundBars = isSwitchOn( elRoundBars );\n\t\t\t\tbreak;\n\n\t\t\tcase elSaveDir:\n\t\t\t\tif ( elSaveDir.checked )\n\t\t\t\t\tsaveLastDir( fileExplorer.getPath() );\n\t\t\t\telse {\n\t\t\t\t\tdel( KEY_LAST_DIR ); // IndexedDB\n\t\t\t\t\tremoveFromStorage( KEY_LAST_DIR );\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\tcase elSaveQueue:\n\t\t\t\tif ( elSaveQueue.checked )\n\t\t\t\t\tstorePlayQueue( true );\n\t\t\t\telse\n\t\t\t\t\tdel( KEY_PLAYQUEUE );\n\t\t\t\tbreak;\n\n\t\t\tcase elScaleX:\n\t\t\t\taudioMotion.showScaleX = isSwitchOn( elScaleX );\n\t\t\t\tbreak;\n\n\t\t\tcase elScaleY:\n\t\t\t\taudioMotion.showScaleY = isSwitchOn( elScaleY );\n\t\t\t\tbreak;\n\n\t\t\tcase elSensitivity:\n\t\t\t\tconst sensitivity = getControlValue( elSensitivity );\n\t\t\t\taudioMotion.setSensitivity(\n\t\t\t\t\t$(`.min-db[data-preset=\"${sensitivity}\"]`).value,\n\t\t\t\t\t$(`.max-db[data-preset=\"${sensitivity}\"]`).value\n\t\t\t\t);\n\t\t\t\taudioMotion.linearBoost = $(`.linear-boost[data-preset=\"${sensitivity}\"]`).value;\n\t\t\t\tbreak;\n\n\t\t\tcase elFPS:\n\t\t\t\taudioMotion.showFPS = isSwitchOn( elFPS );\n\t\t\t\tbreak;\n\n\t\t\tcase elShowPeaks:\n\t\t\t\taudioMotion.showPeaks = isSwitchOn( elShowPeaks );\n\t\t\t\tbreak;\n\n\t\t\tcase elSmoothing:\n\t\t\t\taudioMotion.smoothing = elSmoothing.value;\n\t\t\t\tconsoleLog( 'smoothingTimeConstant is ' + audioMotion.smoothing );\n\t\t\t\tbreak;\n\n\t\t\tcase elSpin:\n\t\t\t\taudioMotion.spinSpeed = elSpin.value;\n\t\t\t\tbreak;\n\n\t\t\tcase elSplitGrad:\n\t\t\t\taudioMotion.splitGradient = isSwitchOn( elSplitGrad );\n\t\t\t\tbreak;\n\n\t\t\tcase elWeighting:\n\t\t\t\taudioMotion.weightingFilter = getControlValue( elWeighting );\n\t\t\t\tbreak;\n\n\t\t} // switch\n\n\t\tif ( save ) {\n\t\t\tif ( generalOptionsElements.includes( el ) )\n\t\t\t\tsavePreferences( KEY_GENERAL_OPTS );\n\t\t\telse\n\t\t\t\tupdateLastConfig();\n\t\t}\n\n\t} // for\n\n}\n\n/**\n * Change audio input source\n */\nasync function setSource() {\n\t// set global variable\n\tisMicSource = elSource.checked;\n\n\tif ( isMicSource ) {\n\t\t// try to get access to user's microphone\n\t\tconst hasPermission = isElectron ? await electron.api('ask-for-media-access') : true;\n\n\t\tif ( hasPermission && navigator.mediaDevices ) {\n\t\t\tnavigator.mediaDevices.getUserMedia( { audio: true } )\n\t\t\t.then( stream => {\n\t\t\t\tmicStream = audioMotion.audioCtx.createMediaStreamSource( stream );\n\t\t\t\tif ( isPlaying() )\n\t\t\t\t\taudioElement[ currAudio ].pause();\n\t\t\t\t// mute the output to avoid feedback loop from the microphone\n\t\t\t\twasMuted = elMute.checked;\n\t\t\t\ttoggleMute( true );\n\t\t\t\taudioMotion.connectInput( micStream );\n\t\t\t\tconsoleLog( 'Audio source set to microphone' );\n\t\t\t})\n\t\t\t.catch( err => {\n\t\t\t\tconsoleLog( `Could not change audio source - ${err}`, true );\n\t\t\t\telSource.checked = isMicSource = false;\n\t\t\t});\n\t\t}\n\t\telse {\n\t\t\tconsoleLog( 'Cannot access user microphone', true );\n\t\t\telSource.checked = isMicSource = false;\n\t\t}\n\t}\n\telse {\n\t\tif ( micStream ) {\n\t\t\taudioMotion.disconnectInput( micStream );\n\t\t\tmicStream.mediaStream.getTracks()[0].stop(); // stop (release) stream\n\t\t\tmicStream = null;\n\t\t\ttoggleMute( wasMuted );\n\t\t}\n\t\tconsoleLog( 'Audio source set to built-in player' );\n\t}\n\n}\n\n/**\n * Set volume\n */\nfunction setVolume( value ) {\n\telVolume.dataset.value = value;\n\taudioMotion.volume = value ** 2.5; // creates a more natural volume curve\n\telVolume.querySelector('.marker').style.transform = `rotate( ${ 125 + 290 * value }deg )`;\n}\n\n/**\n * Set event listeners for UI elements\n * NOTE: this is called only once during initialization\n */\nfunction setUIEventListeners() {\n\n\t// open/close settings panel\n\tconst elToggleSettings = $('#toggle_settings');\n\telToggleSettings.addEventListener( 'click', () => {\n\t\t$('#settings').classList.toggle('active', elToggleSettings.classList.toggle('active') );\n\t});\n\t$('.settings-close').addEventListener( 'click', () => elToggleSettings.click() );\n\n\t// open/close console\n\tconst elToggleConsole = $('#toggle_console');\n\telToggleConsole.addEventListener( 'click', () => {\n\t\t$('#console').classList.toggle( 'active', elToggleConsole.classList.toggle('active') );\n\t\telToggleConsole.classList.remove('warning');\n\t\tconsoleLog(); // update scroll only\n\t});\n\t$('#console-close').addEventListener( 'click', () => elToggleConsole.click() );\n\t$('#console-clear').addEventListener( 'click', () => consoleLog( 'Console cleared.', false, true ) );\n\n\t// settings switches\n\t$$('.switch').forEach( el => {\n\t\tel.addEventListener( 'click', () => {\n\t\t\tel.dataset.active = +!+el.dataset.active;\n\t\t\tsetProperty( el );\n\t\t});\n\t});\n\n\t// settings combo boxes and sliders ('change' event is only triggered for select and input elements)\n\t$$('[data-prop]').forEach( el => {\n\t\tif ( isCustomRadio( el ) ) {\n\t\t\tel.elements[ el.dataset.prop ].forEach( btn => {\n\t\t\t\tbtn.addEventListener( 'click', () => setProperty( el ) );\n\t\t\t});\n\t\t}\n\t\telse {\n\t\t\tel.addEventListener( 'change', () => {\n\t\t\t\tsetProperty( el );\n\t\t\t\tupdateRangeValue( el );\n\t\t\t});\n\t\t}\n\t});\n\n\t// audio source selection and speakers mute\n\telSource.addEventListener( 'change', setSource );\n\telMute.addEventListener( 'change', () => toggleMute() );\n\n\t// helper debounce function - thanks https://www.freecodecamp.org/news/javascript-debounce-example/\n\tconst debounce = ( func, timeout = 300 ) => {\n\t\tlet timer;\n\t\treturn ( ...args ) => {\n\t\t\tclearTimeout( timer );\n\t\t\ttimer = setTimeout( () => func.apply( this, args ), timeout );\n\t\t}\n\t}\n\n\t// volume and balance knobs\n\tlet wheelTimer;\n\t[ elVolume,\n\t  elBalance ].forEach( el => {\n\t  \tel.addEventListener( 'wheel', e => {\n\t\t\te.preventDefault(); // prevent scrolling the window\n\t\t\tif ( wheelTimer )\n\t\t\t\treturn;\n\t\t\twheelTimer = setTimeout( () => wheelTimer = false, 50 ); // 50ms delay for reduced mouse/touchpad sensitivity on Mac\n\t\t\tconst incr = Math.sign( e.deltaY || 0 );\n\t\t\tif ( el == elVolume )\n\t\t\t\tchangeVolume( incr );\n\t\t\telse\n\t\t\t\tchangeBalance( incr );\n\t\t});\n\t});\n\n\telBalance.addEventListener( 'dblclick', () => {\n\t\tchangeBalance(0);\n\t});\n\n\t// player controls\n\t$('#btn_play').addEventListener( 'click', () => playPause() );\n\t$('#btn_stop').addEventListener( 'click', stop );\n\t$('#btn_shuf').addEventListener( 'click', shufflePlayQueue );\n\n\t$('#btn_prev').addEventListener( 'mousedown', () =>\tscheduleFastSearch('m', -1) );\n\t$('#btn_prev').addEventListener( 'click', e => {\n\t\tif ( ! finishFastSearch() )\n\t\t\tskipTrack(true);\n\t});\n\n\t$('#btn_next').addEventListener( 'mousedown', () => scheduleFastSearch('m') );\n\t$('#btn_next').addEventListener( 'click', () => {\n\t\tif ( ! finishFastSearch() )\n\t\t\tskipTrack();\n\t});\n\n\t// action buttons\n\t$('#load_preset').addEventListener( 'click', () => {\n\t\tconst choices = [];\n\n\t\tpresets.forEach( item => {\n\t\t\tif ( ! isEmpty( item.options ) )\n\t\t\t\tchoices.push( { text: item.name + ( item.key == 'default' ? ' (warning: resets Volume!)' : '' ), handler: () => loadPreset( item.key ) } );\n\t\t});\n\n\t\tchoices.push({\n\t\t\ttext: '<strong>USER PRESETS →</strong>', handler: () => {\n\t\t\t\tconst userChoices = [];\n\t\t\t\tgetUserPresets().forEach( ( text, index ) => {\n\t\t\t\t\tuserChoices.push( { text, handler: () => loadPreset( index ) } );\n\t\t\t\t});\n\t\t\t\tnotie.select({\n\t\t\t\t\ttext: 'LOAD PRESET:',\n\t\t\t\t\tchoices: userChoices\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\tnotie.select({\n\t\t\ttext: 'LOAD PRESET:',\n\t\t\tchoices\n\t\t});\n\t});\n\n\t$('#btn_save').addEventListener( 'click', () => {\n\t\tconst choices = [];\n\t\tgetUserPresets().forEach( ( text, index ) => {\n\t\t\tconst options = userPresets[ index ].options;\n\t\t\tchoices.push(\n\t\t\t\t{ type: 1, text, handler: () => saveUserPreset( index, getCurrentSettings() ) },\n\t\t\t\t{ type: 2, text: isEmpty( options ) ? '' : '<button title=\"Edit name\">&#xf11f;</button>', handler: () => saveUserPreset( index, options, '', true ) },\n\t\t\t\t{ type: 2, text: isEmpty( options ) ? '' : '<button title=\"Delete preset\">&#xf120;</button>', handler: () => eraseUserPreset( index ) }\n\t\t\t);\n\t\t});\n\n\t\tnotie.select({\n\t\t\ttext: '<strong>Click slot to SAVE - Use buttons to Edit or Delete</strong>',\n\t\t\tchoices\n\t\t});\n\t});\n\n\t$('#btn_fullscreen').addEventListener( 'click', fullscreen );\n\n\t// playlist controls\n\n\t$('#save_playlist').addEventListener( 'click', () => {\n\t\tif ( isElectron ) {\n\t\t\tconst path = elLoadedPlist.dataset.path;\n\t\t\tif ( path ) {\n\t\t\t\tnotie.confirm({\n\t\t\t\t\ttext: `<strong>${ elLoadedPlist.innerText }</strong><br>will be overwritten with the current play queue<br>ARE YOU SURE?`,\n\t\t\t\t\tsubmitText: 'Overwrite',\n\t\t\t\t\tsubmitCallback: () => savePlayqueueToServer( path, true ),\n\t\t\t\t\tcancelCallback: () => notie.alert({ text: 'Canceled' }),\n\t\t\t\t});\n\t\t\t}\n\t\t\telse\n\t\t\t\tsavePlayqueueToServer();\n\t\t}\n\t\telse\n\t\t\tsavePlaylist( elPlaylists.selectedIndex );\n\t});\n\t$('#create_playlist').addEventListener( 'click', () => isElectron ? savePlayqueueToServer() : storePlayQueue() );\n\t$('#btn_clear').addEventListener( 'click', () => {\n\t\tclearPlayQueue();\n\t\tsetLoadedPlaylist();\n\t\tstorePlayQueue( true );\n\t});\n\n\t// hide unused playlist components depending on which server we're running\n\t( isElectron ? $('.playlist-bar') : elLoadedPlist ).style.display = 'none';\n\n\tif ( ! isElectron ) {\n\t\t$('#load_playlist').addEventListener( 'click', () => {\n\t\t\tloadPlaylist( { file: elPlaylists.value } ).then( n => {\n\t\t\t\tconst text = ( n == -1 ) ? 'No playlist selected' : `${n} song${ n > 1 ? 's' : '' } added to the queue`;\n\t\t\t\tnotie.alert({ text, time: 5 });\n\t\t\t});\n\t\t});\n\t\t$('#delete_playlist').addEventListener( 'click', () => deletePlaylist( elPlaylists.selectedIndex ) );\n\t}\n\n\t// clicks on canvas toggle info display on/off\n\telOSD.addEventListener( 'click', () => toggleInfo() );\n\n\t// use server/local music button\n\tconst btnToggleFS = $('#btn_toggle_filesystem'),\n\t\t  setToggleButtonText = () => btnToggleFS.innerText = `Switch to ${ useFileSystemAPI ? 'Server' : 'Device' }`;\n\n\tif ( ! hasServerMedia && ! useFileSystemAPI || ! supportsFileSystemAPI )\n\t\tbtnToggleFS.style.display = 'none';\n\telse {\n\t\tsetToggleButtonText();\n\t\tbtnToggleFS.addEventListener( 'click', async () => {\n\t\t\tuseFileSystemAPI = ! useFileSystemAPI;\n\t\t\tconst lastDir = await ( useFileSystemAPI ? get( KEY_LAST_DIR ) : loadFromStorage( KEY_LAST_DIR ) );\n\t\t\tif ( ! useFileSystemAPI || ! lastDir || await lastDir[0].handle.requestPermission() == 'granted' ) {\n\t\t\t\tfileExplorer.switchMode( lastDir );\n\t\t\t\tsetToggleButtonText();\n\t\t\t\tsaveToStorage( KEY_FORCE_FS_API, useFileSystemAPI );\n\t\t\t}\n\t\t\telse // revert on permission deny\n\t\t\t\tuseFileSystemAPI = false;\n\t\t});\n\t}\n\n\t// add selected / all files buttons\n\tconst btnAddSelected = $('#btn_add_selected'),\n\t\t  btnAddFolder   = $('#btn_add_folder');\n\n\tif ( isElectron || hasServerMedia || useFileSystemAPI ) {\n\t\tbtnAddSelected.addEventListener( 'mousedown', () => addBatchToPlayQueue( fileExplorer.getFolderContents('.selected') ) );\n\t\tbtnAddFolder.addEventListener( 'click', () => addBatchToPlayQueue( fileExplorer.getFolderContents() ) );\n\t}\n\telse {\n\t\tbtnAddSelected.style.display = 'none';\n\t\tbtnAddFolder.style.display = 'none';\n\t}\n\n\t// local file upload - disabled on Electron app or when the File System API is supported\n\tconst uploadBtn = $('#local_file');\n\tif ( isElectron || supportsFileSystemAPI )\n\t\tuploadBtn.parentElement.style.display = 'none';\n\telse\n\t\tuploadBtn.addEventListener( 'change', e => loadLocalFile( e.target ) );\n\n\t// load remote files from URL\n\t$('#btn_load_url').addEventListener( 'click', () => {\n\t\tnotie.input({\n\t\t\ttext: 'Load audio file or stream from URL',\n\t\t\tsubmitText: 'Load',\n\t\t\tsubmitCallback: url => {\n\t\t\t\tif ( url.trim() ) {\n\t\t\t\t\taddToPlayQueue( { file: url }, true );\n\t\t\t\t\tstorePlayQueue( true );\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t});\n\n\t// Picture-In-Picture functionality\n\tlet canvasTrack, pipWindow;\n\n\tconst pipButton = $('#btn_pip');\n\tif ( document.pictureInPictureEnabled ) {\n\t\tpipButton.addEventListener( 'click', async () => {\n\t\t\tif ( pipVideo !== document.pictureInPictureElement ) {\n\t\t\t\tconst canvasStream = audioMotion.canvas.captureStream();\n\t\t\t\tcanvasTrack = canvasStream.getTracks()[0];\n\t\t\t\tpipVideo.muted = true;\n\t\t\t\tpipVideo.srcObject = canvasStream;\n\t\t\t\tawait pipVideo.play();\n\t\t\t\tpipVideo.requestPictureInPicture();\n\t\t\t}\n\t\t\telse\n\t\t\t\tdocument.exitPictureInPicture();\n\t\t});\n\t}\n\telse\n\t\tpipButton.classList.add('disabled');\n\n\tconst onPipWindowResize = debounce( () => audioMotion.setCanvasSize( pipWindow.width, pipWindow.height ) );\n\n\tpipVideo.addEventListener( 'enterpictureinpicture', event => {\n\t\tpipWindow = event.pictureInPictureWindow;\n\t\telContainer.classList.add('pip');\n\t\tpipButton.classList.add('active');\n\t\t// resize analyzer canvas for best quality\n\t\taudioMotion.setCanvasSize( pipWindow.height * elPIPRatio.value, pipWindow.height );\n\t\tpipWindow.addEventListener( 'resize', onPipWindowResize );\n\t});\n\n\tpipVideo.addEventListener( 'leavepictureinpicture', () => {\n\t\tpipWindow.removeEventListener( 'resize', onPipWindowResize );\n\t\tpipVideo.pause();\n\t\tcanvasTrack.stop();\n\t\tpipVideo.srcObject = canvasTrack = null;\n\t\tpipButton.classList.remove('active');\n\t\telContainer.classList.remove('pip');\n\t\taudioMotion.setCanvasSize(); // restore fluid canvas\n\t});\n\n\t// Show player controls in the PIP window\n\tconst mediaSession  = navigator.mediaSession;\n\tif ( mediaSession ) {\n\t\tmediaSession.setActionHandler( 'play', () => playPause() );\n\t\tmediaSession.setActionHandler( 'pause', () => playPause() );\n\t\tmediaSession.setActionHandler( 'previoustrack', () => playPreviousSong() );\n\t\tmediaSession.setActionHandler( 'nexttrack', () => playNextSong() );\n\t}\n\n\t// setup gradient editor controls\n\t$('#add-gradient').addEventListener('click', openGradientEditorNew);\n\t$('#btn-save-gradient').addEventListener( 'click', saveGradient );\n\t$('#btn-delete-gradient').addEventListener('click', deleteGradient );\n\n\n\t$('#new-gradient-bkgd').addEventListener('input', (e) => {\n\t\tcurrentGradient.bgColor = e.target.value;\n\t});\n\n\t$('#new-gradient-name').addEventListener('input', (e) => {\n\t\tcurrentGradient.name = e.target.value;\n\t});\n\n\t$('#new-gradient-horizontal').addEventListener('input', (e) => {\n\t\tcurrentGradient.dir = e.target.checked ? 'h' : undefined;\n\t})\n}\n\n/**\n * Shuffle the playlist\n */\nfunction shufflePlayQueue() {\n\n\tfor ( let i = queueLength() - 1; i > 0; i-- ) {\n\t\tconst randIndex = Math.random() * ( i + 1 ) | 0,\n\t\t\t  oldChild  = playlist.replaceChild( playlist.children[ randIndex ], playlist.children[ i ] );\n\t\tplaylist.insertBefore( oldChild, playlist.children[ randIndex ] );\n\t}\n\n\tplaySong(0);\n}\n\n/**\n * Player previous/next buttons\n */\nfunction skipTrack( back = false ) {\n\tconst status = back ? playPreviousSong() : playNextSong();\n\tif ( ! status )\n\t\tsetCanvasMsg( `Already at ${ back ? 'first' : 'last' } track` );\n}\n\n/**\n * Player stop button\n */\nfunction stop() {\n\taudioElement[ currAudio ].pause();\n\tsetCanvasMsg();\n\tloadSong( 0 );\n}\n\n/**\n * Store the contents of the play queue into a playlist in indexedDB\n *\n * @param {String|Boolean} playlist name or _true_ to save to the last used play queue\n * @param {Boolean} true to force overwritting an existing playlist\n */\nasync function storePlayQueue( name, update = true ) {\n\n\tconst isSaveQueue = name == true;\n\n\tif ( isSaveQueue && ! elSaveQueue.checked )\n\t\treturn;\n\n\tif ( queueLength() == 0 && ! isSaveQueue ) {\n\t\tnotie.alert({ text: 'Queue is empty!' });\n\t\treturn;\n\t}\n\n\tif ( name ) {\n\t\tlet safename = name;\n\n\t\tif ( ! isSaveQueue && ! update ) {\n\t\t\tsafename = safename.normalize('NFD').replace( /[\\u0300-\\u036f]/g, '' ); // remove accents\n\t\t\tsafename = safename.toLowerCase().replace( /[^a-z0-9]/g, '_' );\n\n\t\t\tlet playlists = await get( KEY_PLAYLISTS ) || {},\n\t\t\t\tattempt   = 0,\n\t\t\t\tbasename  = safename;\n\n\t\t\twhile ( playlists.hasOwnProperty( safename ) && attempt < 100 ) {\n\t\t\t\tsafename = basename + '_' + attempt;\n\t\t\t\tattempt++;\n\t\t\t}\n\n\t\t\tplaylists[ safename ] = name;\n\t\t\tawait set( KEY_PLAYLISTS, playlists ); // save list to indexedDB\n\t\t\tloadSavedPlaylists( safename );\n\t\t}\n\n\t\tlet songs = [];\n\n\t\tfor ( const item of playlist.childNodes )\n\t\t\tsongs.push( { file: item.dataset.file, handle: item.handle } );\n\n\t\tif ( isSaveQueue )\n\t\t\tset( KEY_PLAYQUEUE, songs );\n\t\telse\n\t\t\tset( PLAYLIST_PREFIX + safename, songs ).then( () => notie.alert({ text: `Playlist saved!` }) );\n\t}\n\telse {\n\t\tnotie.input({\n\t\t\ttext: 'Give this playlist a name:',\n\t\t\tsubmitText: 'Save',\n\t\t\tsubmitCallback: value => {\n\t\t\t\tif ( value )\n\t\t\t\t\tstorePlayQueue( value, false );\n\t\t\t},\n\t\t\tcancelCallback: () => {\n\t\t\t\tnotie.alert({ text: 'Canceled' });\n\t\t\t}\n\t\t});\n\t\treturn;\n\t}\n}\n\n/**\n * Sync a queue item metadata with any audio elements loaded with the same file\n */\nfunction syncMetadataToAudioElements( source ) {\n\tfor ( const el of audioElement ) {\n\t\tif ( el.dataset.file == source.dataset.file )\n\t\t\taddMetadata( source, el ); // transfer metadata to audio element\n\t}\n}\n\n/**\n * Toggle display of song and settings information on canvas\n */\nfunction toggleInfo() {\n\tif ( canvasMsg.endTime < performance.now() )\n\t\tcanvasMsg.info = 0; // reset info flag if display time has ended\n\tif ( canvasMsg.info == 2 )\n\t\tsetCanvasMsg(); // if already showing all info, turn it off\n\telse // increase the information level (0 -> 1 -> 2) and reset the display timeout\n\t\tsetCanvasMsg( ( canvasMsg.info | 0 ) + 1, +elInfoTimeout.value || Infinity ); // NOTE: canvasMsg.info may be undefined\n}\n\n/**\n * Update the playlist shown to the user\n */\nfunction updatePlaylistUI() {\n\n\tconst current = playlist.querySelector('.current'),\n\t\t  newCurr = playlist.children[ playlistPos ];\n\n\tif ( current )\n\t\tcurrent.classList.remove('current');\n\n\tif ( newCurr ) {\n\t\tnewCurr.classList.add('current');\n\t\tnewCurr.scrollIntoViewIfNeeded();\n\t}\n}\n\n/**\n * Connect or disconnect audio output to the speakers\n */\nfunction toggleMute( mute ) {\n\tif ( mute !== undefined )\n\t\telMute.checked = mute;\n\telse\n\t\tmute = elMute.checked;\n\n\tif ( mute )\n\t\taudioMotion.disconnectOutput();\n\telse\n\t\taudioMotion.connectOutput();\n}\n\n/**\n * Update last used configuration\n */\nfunction updateLastConfig() {\n\tsaveToStorage( KEY_LAST_CONFIG, { ...getCurrentSettings(), volume: elVolume.dataset.value, balance: elBalance.dataset.value } );\n}\n\n/**\n * Update range elements value div\n */\nfunction updateRangeValue( el ) {\n\tconst elVal = el.previousElementSibling;\n\tif ( elVal && elVal.className == 'value' )\n\t\telVal.innerText = el.value;\n}\n\n\n/**\n *  MAIN FUNCTION\n * ------------------------------------------------------------------------------------------------\n */\n( async function() {\n\t// variables for on-screen info display\n\tlet baseSize, coverSize, centerPos, rightPos, topLine1, topLine2, bottomLine1, bottomLine2, bottomLine3, maxWidthTop, maxWidthBot, normalFont, largeFont;\n\n\t// Callback function to handle canvas size changes (onCanvasResize)\n\tconst showCanvasInfo = ( reason, instance ) => {\n\t\tlet msg;\n\n\t\t// resize OSD canvas\n\t\tconst dPR    = instance.pixelRatio,\n\t\t\t  width  = elOSD.width  = elContainer.clientWidth * dPR,\n\t\t\t  height = elOSD.height = elContainer.clientHeight * dPR;\n\n\t\tswitch ( reason ) {\n\t\t\tcase 'create':\n\t\t\t\tconsoleLog( `Display resolution: ${instance.fsWidth} x ${instance.fsHeight} px (pixelRatio: ${window.devicePixelRatio})` );\n\t\t\t\tmsg = 'Canvas created';\n\t\t\t\tbreak;\n\t\t\tcase 'lores':\n\t\t\t\tmsg = `Lo-res ${ instance.loRes ? 'ON' : 'OFF' } (pixelRatio = ${dPR})`;\n\t\t\t\tbreak;\n\t\t\tcase 'fschange':\n\t\t\t\tmsg = `${ instance.isFullscreen ? 'Enter' : 'Exit' }ed fullscreen`;\n\t\t\t\tbreak;\n\t\t\tcase 'resize':\n\t\t\t\tmsg = 'Window resized';\n\t\t\t\tbreak;\n\t\t\tcase 'user' :\n\t\t\t\tmsg = `${ isPIP() ? 'Resized for' : 'Closed' } PIP`;\n\t\t}\n\n\t\tconsoleLog( `${ msg || reason }. Canvas size is ${ instance.canvas.width } x ${ instance.canvas.height } px` );\n\n\t\t// recalculate variables used for info display\n\t\tbaseSize    = Math.min( width, height ) / 17; // ~64px for 1080px canvas\n\t\tcoverSize   = baseSize * 3;\t\t\t\t// cover image size\n\t\tcenterPos   = width / 2;\n\t\trightPos    = width - baseSize;\n\t\ttopLine1    = baseSize * 1.4;\t\t\t// gradient, mode & sensitivity status + informative messages\n\t\ttopLine2    = topLine1 * 1.8;\t\t\t// auto gradient, Randomize & repeat status\n\t\tmaxWidthTop = width / 3 - baseSize;\t\t// maximum width for messages shown at the top\n\t\tbottomLine1 = height - baseSize * 4;\t// artist name, codec/quality\n\t\tbottomLine2 = height - baseSize * 2.8;\t// song title\n\t\tbottomLine3 = height - baseSize * 1.6;\t// album title, time\n\t\tmaxWidthBot = width - baseSize * 7;\t\t// maximum width for artist and song name\n\n\t\tnormalFont  = `bold ${ baseSize * .7 }px sans-serif`;\n\t\tlargeFont   = `bold ${baseSize}px sans-serif`;\n\t}\n\n\t/**\n\t * Callback function to display on-screen messages (onCanvasDraw)\n\t *\n\t * Uses global object canvasMsg\n\t * canvasMsg = {\n\t * \t\tinfo     : <number>, // 1 = song info; 2 = song & settings info\n\t * \t\tendTime  : <number>, // timestamp (in milliseconds) up to when info should be displayed\n\t *      startTime: <number>, // initial timestamp (for fade-in control only)\n\t * \t\tfade     : <number>, // fade in/out time in seconds (negative number for fade-out)\n\t *\t\tmsg      : <string>, // custom message to be displayed at the top\n\t * \t\tmsgTimer : <number>  // timestamp (in milliseconds) up to when msg should be displayed\n\t * }\t                     // (custom messages always use a one second fade-out only)\n\t */\n\tconst displayCanvasMsg = ( instance, data ) => {\n\n\t\tconst audioEl    = audioElement[ currAudio ],\n\t\t\t  trackData  = audioEl.dataset,\n\t\t\t  remaining  = audioEl.duration - audioEl.currentTime,\n\t\t\t  endTimeout = +elEndTimeout.value,\n\t\t\t  bgOption   = elBackground.value[0],\n\t\t\t  bgImageFit = elBgImageFit.value,\n\t\t\t  noShadow   = isSwitchOn( elNoShadow ),\n\t\t\t  pixelRatio = audioMotion.pixelRatio,\n\t\t\t  { timestamp } = data;\n\n\t\t// if song is less than 100ms from the end, skip to the next track for improved gapless playback\n\t\tif ( remaining < .1 )\n\t\t\tplayNextSong( true );\n\n\t\t// set song info display at the end of the song\n\t\tif ( endTimeout > 0 && remaining <= endTimeout && isSwitchOn( elShowSong ) && timestamp > canvasMsg.endTime && isPlaying() )\n\t\t\tsetCanvasMsg( 1, remaining, 1 );\n\n\t\t// compute background image size for pulse and zoom in/out effects\n\t\tif (\n\t\t\t( bgImageFit == BGFIT_PULSE || bgImageFit == BGFIT_ZOOM_IN || bgImageFit == BGFIT_ZOOM_OUT ) &&\n\t\t\t( bgOption == BG_COVER || bgOption == BG_IMAGE )\n\t\t) {\n\t\t\tlet size;\n\n\t\t\tif ( bgImageFit == BGFIT_PULSE )\n\t\t\t\tsize = ( audioMotion.getEnergy() * 70 | 0 ) - 25;\n\t\t\telse {\n\t\t\t\tconst songProgress = audioEl.currentTime / audioEl.duration;\n\t\t\t\tsize = ( bgImageFit == BGFIT_ZOOM_IN ? songProgress : 1 - songProgress ) * 100;\n\t\t\t}\n\n\t\t\telContainer.style.backgroundSize = `auto ${ 100 + size }%`;\n\t\t}\n\n\t\telOSD.width |= 0; // clear OSD canvas\n\n\t\tconst { endTime, startTime, msgTimer, info, msg, fade } = canvasMsg;\n\n\t\tif ( timestamp > endTime && timestamp > msgTimer )\n\t\t\treturn; // nothing to display\n\n\t\t// helper function\n\t\tconst drawText = ( text, x, y, maxWidth ) => {\n\t\t\tif ( noShadow ) {\n\t\t\t\tcanvasCtx.strokeText( text, x, y, maxWidth );\n\t\t\t\tcanvasCtx.fillText( text, x, y, maxWidth );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tcanvasCtx.shadowOffsetX = canvasCtx.shadowOffsetY = 3 * pixelRatio;\n\t\t\t\tcanvasCtx.fillText( text, x, y, maxWidth );\n\t\t\t\tcanvasCtx.shadowOffsetX = canvasCtx.shadowOffsetY = 0;\n\t\t\t}\n\t\t}\n\n\t\tcanvasCtx.lineWidth = 4 * pixelRatio;\n\t\tcanvasCtx.lineJoin = 'round';\n\t\tcanvasCtx.font = normalFont;\n\t\tcanvasCtx.textAlign = 'center';\n\n\t\tcanvasCtx.fillStyle = '#fff';\n\t\tcanvasCtx.strokeStyle = canvasCtx.shadowColor = '#000';\n\n\t\t// Display custom message if we don't need to display info level 2\n\t\tif ( msgTimer > timestamp && ( timestamp > endTime || info != 2 ) ) {\n\t\t\tconst timeLeft = ( msgTimer - timestamp ) / 1000;\n\t\t\tcanvasCtx.globalAlpha = timeLeft > 1 ? 1 : timeLeft; // one second fade-out\n\t\t\tdrawText( canvasMsg.msg, centerPos, topLine1 );\n\t\t}\n\n\t\t// Display song and config info\n\t\tif ( endTime > timestamp ) {\n\t\t\tif ( fade < 0 ) {\n\t\t\t\t// fade-out\n\t\t\t\tconst timeLeft = ( endTime - timestamp ) / 1000;\n\t\t\t\tcanvasCtx.globalAlpha = timeLeft > -fade ? 1 : timeLeft / -fade;\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// fade-in - avoid negative timeElapsed when canvasMsg has been set in this same iteration (info at song end)\n\t\t\t\tconst timeElapsed = Math.max( 0, ( timestamp - startTime ) / 1000 );\n\t\t\t\tcanvasCtx.globalAlpha = timeElapsed > fade ? 1 : timeElapsed / fade;\n\t\t\t}\n\n\t\t\t// display additional information (level 2) at the top\n\t\t\tif ( canvasMsg.info == 2 ) {\n\t\t\t\tdrawText( getSelectedGradients(), centerPos, topLine1, maxWidthTop );\n\n\t\t\t\tcanvasCtx.textAlign = 'left';\n\t\t\t\tdrawText( getText( elMode ), baseSize, topLine1, maxWidthTop );\n\t\t\t\tdrawText( `Randomize: ${ getText( elRandomMode ) }`, baseSize, topLine2, maxWidthTop );\n\n\t\t\t\tcanvasCtx.textAlign = 'right';\n\t\t\t\tdrawText( getText( elSensitivity ).toUpperCase() + ' sensitivity', rightPos, topLine1, maxWidthTop );\n\t\t\t\tdrawText( `Repeat is ${ onOff( elRepeat ) }`, rightPos, topLine2, maxWidthTop );\n\t\t\t}\n\n\t\t\tif ( isMicSource ) {\n\t\t\t\tcanvasCtx.textAlign = 'left';\n\t\t\t\tcanvasCtx.font = largeFont;\n\t\t\t\tdrawText( 'MIC source', baseSize, bottomLine2, maxWidthBot );\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// codec and quality\n\t\t\t\tcanvasCtx.textAlign = 'right';\n\t\t\t\tdrawText( trackData.codec, rightPos, bottomLine1 );\n\t\t\t\tdrawText( trackData.quality, rightPos, bottomLine1 + baseSize );\n\n\t\t\t\t// song/queue count\n\t\t\t\tconst totalSongs = queueLength();\n\t\t\t\tif ( totalSongs && elShowCount.checked ) {\n\t\t\t\t\tconst padDigits = ( '' + totalSongs ).length,\n\t\t\t\t\t\t  counter   = `Track ${ ( '' + ( playlistPos + 1 ) ).padStart( padDigits, '0' ) } of ${ totalSongs }`;\n\t\t\t\t\tdrawText( counter, rightPos, bottomLine1 - baseSize );\n\t\t\t\t}\n\n\t\t\t\t// artist name\n\t\t\t\tcanvasCtx.textAlign = 'left';\n\t\t\t\tdrawText( trackData.artist.toUpperCase(), baseSize, bottomLine1, maxWidthBot );\n\n\t\t\t\t// album title\n\t\t\t\tcanvasCtx.font = `italic ${normalFont}`;\n\t\t\t\tdrawText( trackData.album, baseSize, bottomLine3, maxWidthBot );\n\n\t\t\t\t// song title\n\t\t\t\tcanvasCtx.font = largeFont;\n\t\t\t\tdrawText( audioEl.src ? trackData.title : 'No song loaded', baseSize, bottomLine2, maxWidthBot );\n\n\t\t\t\t// time\n\t\t\t\tif ( audioEl.duration || trackData.duration ) {\n\t\t\t\t\tif ( ! trackData.duration ) {\n\t\t\t\t\t\ttrackData.duration = secondsToTime( audioEl.duration );\n\n\t\t\t\t\t\tif ( playlist.children[ playlistPos ] )\n\t\t\t\t\t\t\tplaylist.children[ playlistPos ].dataset.duration = trackData.duration;\n\t\t\t\t\t}\n\t\t\t\t\tcanvasCtx.textAlign = 'right';\n\n\t\t\t\t\tdrawText( secondsToTime( audioEl.currentTime ) + ' / ' + trackData.duration, rightPos, bottomLine3 );\n\t\t\t\t}\n\n\t\t\t\t// cover image\n\t\t\t\tif ( coverImage.width && elShowCover.checked )\n\t\t\t\t\tcanvasCtx.drawImage( coverImage, baseSize, bottomLine1 - coverSize * 1.3, coverSize, coverSize );\n\t\t\t}\n\t\t}\n\t}\n\n\t// event handlers for audio elements\n\n\tconst audioOnEnded = _ => {\n\t\tif ( ! playNextSong( true ) ) {\n\t\t\tloadSong( 0 );\n\t\t\tsetCanvasMsg( 'Queue ended', 10 );\n\t\t\tif ( isPIP() )\n\t\t\t\tpipVideo.pause();\n\t\t}\n\t}\n\n\tconst audioOnError = e => {\n\t\tif ( e.target.attributes.src )\n\t\t\tconsoleLog( 'Error loading ' + e.target.src, true );\n\t}\n\n\tconst audioOnPlay = _ => {\n\t\tif ( ! audioElement[ currAudio ].attributes.src ) {\n\t\t\tplaySong( playlistPos );\n\t\t\treturn;\n\t\t}\n\n\t\tif ( isPIP() )\n\t\t\tpipVideo.play();\n\n\t\tif ( audioElement[ currAudio ].currentTime < .1 && elRandomMode.value == '1' )\n\t\t\trandomizeSettings( true );\n\n\t\tif ( isSwitchOn( elShowSong ) ) {\n\t\t\tconst timeout = +elTrackTimeout.value || Infinity;\n\t\t\tsetCanvasMsg( 1, timeout );\n\t\t}\n\t}\n\n\t// BEGIN INITIALIZATION -----------------------------------------------------------------------\n\n\t// Log all JS errors to our UI console\n\twindow.addEventListener( 'error', event => consoleLog( `Unexpected ${event.error}`, true ) );\n\n\tlet initDone = false;\n\n\tconsoleLog( `audioMotion v${VERSION} initializing...` );\n\tconsoleLog( `User agent: ${navigator.userAgent}` );\n\n\t$('#version').innerText = VERSION;\n\n\t// Load server configuration options from config.json\n\tconst response = await fetch( SERVERCFG_FILE );\n\n\tlet serverConfig = response.status == 200 ? await response.text() : null;\n\ttry {\n\t\tserverConfig = JSON.parse( serverConfig );\n\t}\n\tcatch( err ) {\n\t\tconsoleLog( `Error parsing ${ SERVERCFG_FILE } - ${ err }`, true );\n\t\tserverConfig = {};\n\t}\n\n\tserverConfig = { ...SERVERCFG_DEFAULTS, ...serverConfig };\n\n\tsupportsFileSystemAPI = serverConfig.enableLocalAccess && !! window.showDirectoryPicker;\n\n\t// Check if `mode` URL parameter is used to request local or server filesystem\n\tconst urlParams = new URL( document.location ).searchParams,\n\t\t  userMode  = urlParams.get('mode');\n\n\tlet forceFileSystemAPI = serverConfig.enableLocalAccess && ( userMode == FILEMODE_LOCAL ? true : ( userMode == FILEMODE_SERVER ? false : await loadFromStorage( KEY_FORCE_FS_API ) ) );\n\n\tif ( forceFileSystemAPI === null )\n\t\tforceFileSystemAPI = serverConfig.defaultAccessMode == FILEMODE_LOCAL;\n\n\t// Load preferences from localStorage\n\tif ( isElectron )\n\t\tconsoleLog( `Reading user preferences from ${ await electron.api('storage-info') }` );\n\tconst isLastSession = await loadPreferences();\n\n\t// Initialize play queue and set event listeners\n\tplaylist = $('#playlist');\n\tplaylist.addEventListener( 'dblclick', e => {\n\t\tif ( e.target && e.target.dataset.file ) {\n\t\t\tplaySong( getIndex( e.target ) );\n\t\t\te.target.classList.remove( 'selected', 'sortable-chosen' );\n\t\t}\n\t});\n\tplaylistPos = 0;\n\n\t// Add drag-n-drop functionality to the play queue\n\tSortable.create( playlist, {\n\t\tanimation: 150,\n\t\tgroup: {\n\t\t\tname: 'filelist',\n\t\t\tpull: false,\n\t\t\tput: true\n\t\t},\n\t\tmultiDrag: true,\n\t\tmultiDragKey: 'ctrl',\n\t\tselectedClass: 'selected',\n\t\tonEnd: evt => {\n\t\t\tplaylistPos = getIndex( playlist.querySelector('.current') );\n\t\t\tif ( evt.newIndex == 0 && ! isPlaying() )\n\t\t\t\tloadSong(0);\n\t\t\tloadNextSong();\n\t\t\tstorePlayQueue( true );\n\t\t}\n\t});\n\n\t// Create audioMotion analyzer\n\n\tconsoleLog( `Instantiating audioMotion-analyzer v${ AudioMotionAnalyzer.version }` );\n\n\taudioMotion = new AudioMotionAnalyzer( elAnalyzer, {\n\t\tfsElement: elContainer,\n\t\tonCanvasDraw: displayCanvasMsg,\n\t\tonCanvasResize: showCanvasInfo\n\t});\n\n\tconst audioCtx = audioMotion.audioCtx;\n\n\t// create panNode for balance control - NOTE: no support on Safari < 14.1\n\tif ( audioCtx.createStereoPanner ) {\n\t\tpanNode = audioCtx.createStereoPanner();\n\t\taudioMotion.connectInput( panNode );\n\t}\n\n\t// Initialize and connect audio elements\n\n\tcurrAudio = 0;\n\tnextAudio = 1;\n\n\tfor ( const i of [0,1] ) {\n\t\taudioElement[ i ] = $( `#player${i}` );\n\t\tclearAudioElement( i );\n\t\taudioElement[ i ].addEventListener( 'play', audioOnPlay );\n\t\taudioElement[ i ].addEventListener( 'ended', audioOnEnded );\n\t\taudioElement[ i ].addEventListener( 'error', audioOnError );\n\n\t\tif ( panNode )\n\t\t\taudioCtx.createMediaElementSource( audioElement[ i ] ).connect( panNode );\n\t\telse\n\t\t\taudioMotion.connectInput( audioElement[ i ] );\n\t}\n\n\t// Setup configuration panel\n\tdoConfigPanel();\n\n\t// Populate combo boxes\n\n\tpopulateSelect( elMode, modeOptions );\n\n\tfor ( const i of [16,20,25,30,40,50,60,100,250,500,1000,2000] )\n\t\telRangeMin[ elRangeMin.options.length ] = new Option( ( i >= 1000 ? ( i / 1000 ) + 'k' : i ) + 'Hz', i );\n\n\tfor ( const i of [1000,2000,4000,8000,12000,16000,20000,22000] )\n\t\telRangeMax[ elRangeMax.options.length ] = new Option( ( i / 1000 ) + 'kHz', i );\n\n\tpopulateCustomRadio( elChnLayout, channelLayoutOptions );\n\n\tpopulateCustomRadio( elSensitivity, [\n\t\t[ '0', 'Low'    ],\n\t\t[ '1', 'Normal' ],\n\t\t[ '2', 'High'   ]\n\t]);\n\n\tpopulateCustomRadio( elBarSpace, [\n\t\t[ '1.5',  'Min' ],\n\t\t[ '0.1',  '10' ],\n\t\t[ '0.25', '25' ],\n\t\t[ '0.5',  '50' ],\n\t\t[ '0.75', '75' ]\n\t]);\n\n\tpopulateSelect( elRandomMode, [\n\t\t[ '0',   'OFF'             ],\n\t\t[ '1',   'On track change' ],\n\t\t[ '2',   '5 seconds'       ],\n\t\t[ '6',   '15 seconds'      ],\n\t\t[ '12',  '30 seconds'      ],\n\t\t[ '24',  '1 minute'        ],\n\t\t[ '48',  '2 minutes'       ],\n\t\t[ '120', '5 minutes'       ]\n\t]);\n\n\tpopulateCustomRadio( elReflex, [\n\t\t[ '0', 'Off'  ],\n\t\t[ '1', 'On'   ],\n\t\t[ '2', 'Full' ]\n\t]);\n\n\tpopulateSelect( elBgImageFit, bgFitOptions );\n\n\tpopulateCustomRadio( elMirror, [\n\t\t[ '-1', 'Left'  ],\n\t\t[ '0',  'Off'   ],\n\t\t[ '1',  'Right' ]\n\t]);\n\n\tpopulateCustomRadio( elFreqScale, [\n\t\t[ SCALE_BARK,   'Bark' ],\n\t\t[ SCALE_LINEAR, 'Lin'  ],\n\t\t[ SCALE_LOG,    'Log'  ],\n\t\t[ SCALE_MEL,    'Mel'  ]\n\t]);\n\n\tpopulateCustomRadio( elWeighting, [\n\t\t[ WEIGHT_NONE, 'OFF' ],\n\t\t[ WEIGHT_A,    'A'   ],\n\t\t[ WEIGHT_B,    'B'   ],\n\t\t[ WEIGHT_C,    'C'   ],\n\t\t[ WEIGHT_D,    'D'   ],\n\t\t[ WEIGHT_468,  '468' ],\n\t]);\n\n\tpopulateCustomRadio( elColorMode, [\n\t\t[ COLOR_GRADIENT, 'Gradient'  ],\n\t\t[ COLOR_INDEX,    'Index' ],\n\t\t[ COLOR_LEVEL,    'Level' ]\n\t]);\n\n\tsetRangeAtts( elBgImageDim, 0.1, 1, .1 );\n\tsetRangeAtts( elLineWidth, 1, 3, .5 );\n\tsetRangeAtts( elFillAlpha, 0, .5, .1 );\n\tsetRangeAtts( elSpin, 0, 3, 1 );\n\n\t// Clear canvas messages\n\tsetCanvasMsg();\n\n\t// Register custom gradients\n\tObject.keys( gradients ).forEach( key => {\n\t\tconst { bgColor, dir, colorStops } = gradients[ key ];\n\t\tif ( colorStops )\n\t\t\taudioMotion.registerGradient( key, { bgColor, dir, colorStops } );\n\t});\n\tpopulateGradients();\n\n\t// Set audio source to built-in player\n\tsetSource();\n\n\t// Initialize file explorer\n\tconst fileExplorerPromise = fileExplorer.create(\n\t\t$('#file_explorer'),\n\t\t{\n\t\t\tonDblClick: ( fileObject, event ) => {\n\t\t\t\taddBatchToPlayQueue( [ fileObject ], true );\n\t\t\t\tevent.target.classList.remove( 'selected', 'sortable-chosen' );\n\t\t\t},\n\t\t\tonEnterDir: path => {\n\t\t\t\tif ( elSaveDir.checked && initDone ) // avoid saving the path during initialization\n\t\t\t\t\tsaveLastDir( path );\n\t\t\t},\n\t\t\tfileExtensions: [ ...FILE_EXT_MUSIC, ...FILE_EXT_PLIST, ...( elEnableVideo.checked ? FILE_EXT_VIDEO : [] ) ],\n\t\t\tforceFileSystemAPI\n\t\t}\n\t).then( status => {\n\t\t// set global variables\n\t\tserverMode       = status.serverMode;\n\t\thasServerMedia   = status.hasServerMedia;\n\t\tuseFileSystemAPI = status.useFileSystemAPI;\n\n\t\tconst { filelist, serverSignature } = status;\n\n\t\tif ( serverMode != SERVER_FILE )\n\t\t\tconsoleLog( `${ serverSignature } detected at ${ URL_ORIGIN }` );\n\t\tif ( ! hasServerMedia )\n\t\t\tconsoleLog( `${ serverMode == SERVER_FILE ? 'No server found' : 'Cannot access music directory on server' }`, true );\n\t\tif ( useFileSystemAPI )\n\t\t\tconsoleLog( 'Accessing files from local device via File System Access API.' );\n\t\tif ( ! supportsFileSystemAPI && serverConfig.enableLocalAccess )\n\t\t\tconsoleLog( 'No browser support for File System Access API. Cannot access files from local device.', forceFileSystemAPI );\n\n\t\tif ( ! isElectron ) {\n\t\t\tsaveToStorage( KEY_FORCE_FS_API, forceFileSystemAPI && supportsFileSystemAPI );\n\t\t\tloadSavedPlaylists();\n\t\t}\n\n\t\t// initialize drag-and-drop in the file explorer\n\t\tif ( isElectron || useFileSystemAPI || hasServerMedia ) {\n\t\t\tSortable.create( filelist, {\n\t\t\t\tanimation: 150,\n\t\t\t\tdraggable: '[data-type=\"file\"], [data-type=\"list\"]',\n\t\t\t\tgroup: {\n\t\t\t\t\tname: 'filelist',\n\t\t\t\t\tpull: 'clone',\n\t\t\t\t\tput: false\n\t\t\t\t},\n\t\t\t\tmultiDrag: true,\n\t\t\t\tmultiDragKey: 'ctrl',\n\t\t\t\tselectedClass: 'selected',\n\t\t\t\tsort: false,\n\t\t\t\tonEnd: evt => {\n\t\t\t\t\tif ( evt.to.id == 'playlist' ) {\n\t\t\t\t\t\tlet items    = evt.items.length ? evt.items : [ evt.item ],\n\t\t\t\t\t\t\tpromises = [];\n\t\t\t\t\t\titems.forEach( item => {\n\t\t\t\t\t\t\tpromises.push( addToPlayQueue( { file: fileExplorer.makePath( item.dataset.path ), handle: item.handle } ) );\n\t\t\t\t\t\t\titem.remove();\n\t\t\t\t\t\t});\n\t\t\t\t\t\tPromise.all( promises ).then( () => storePlayQueue( true ) );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\t// Set UI event listeners\n\t\tsetUIEventListeners();\n\t});\n\n\t// Add events listeners for keyboard controls\n\twindow.addEventListener( 'keydown', keyboardControls );\n\twindow.addEventListener( 'keyup', keyboardControls );\n\n\t// notie options\n\tnotie.setOptions({\n\t\tpositions: { alert: 'bottom' }\n\t});\n\n\t// Wait for all async operations to finish before loading the last used settings\n\tPromise.all( [ retrieveBackgrounds(), fileExplorerPromise ] ).then( async () => {\n\t\t// helper function - enter last used directory and load saved play queue\n\t\tconst enterLastDir = () => {\n\t\t\tif ( lastDir )\n\t\t\t\tfileExplorer.setPath( lastDir );\n\t\t\tif ( elSaveQueue.checked )\n\t\t\t\tloadPlaylist( { file: true } );\n\t\t}\n\n\t\t// helper function - request user permission to access local device (File System API)\n\t\tconst requestPermission = async () => {\n\t\t\tconst isClear = ( ! isBgDirLocked || await bgDirHandle.requestPermission() == 'granted' ) &&\n\t\t\t\t\t\t\t( ! isLastDirLocked || await lastDir[0].handle.requestPermission() == 'granted' );\n\n\t\t\tif ( isClear ) {\n\t\t\t\tfilesPanel.classList.remove('locked');\n\t\t\t\twindow.removeEventListener( 'click', requestPermission );\n\t\t\t\tif ( isBgDirLocked )\n\t\t\t\t\tretrieveBackgrounds();\n\t\t\t\tenterLastDir();\n\t\t\t}\n\t\t}\n\n\t\tconst filesPanel      = $('#files_panel'),\n\t\t\t  lastDir         = await ( useFileSystemAPI ? get( KEY_LAST_DIR ) : loadFromStorage( KEY_LAST_DIR ) ),\n\t\t\t  bgDirHandle     = await get( KEY_BG_DIR_HANDLE ),\n\t\t\t  isBgDirLocked   = supportsFileSystemAPI && bgDirHandle && await bgDirHandle.queryPermission() != 'granted',\n\t\t\t  isLastDirLocked = useFileSystemAPI && Array.isArray( lastDir ) && lastDir[0] && await lastDir[0].handle.queryPermission() != 'granted';\n\n\t\tconsoleLog( `Loading ${ isLastSession ? 'last session' : 'default' } settings` );\n\t\tloadPreset( 'last', false, true );\n\n\t\tif ( isBgDirLocked || isLastDirLocked ) {\n\t\t\tfilesPanel.classList.add('locked');\n\t\t\twindow.addEventListener( 'click', requestPermission );\n\t\t}\n\t\telse\n\t\t\tenterLastDir();\n\n\t\tconsoleLog( `AudioContext sample rate is ${audioCtx.sampleRate}Hz; Total latency is ${ ( ( audioCtx.outputLatency || 0 ) + audioCtx.baseLatency ) * 1e3 | 0 }ms` );\n\t\tconsoleLog( 'Initialization complete!' );\n\t\tinitDone = true;\n\t});\n\n})();\n","/**\r\n * scrollIntoViewIfNeeded() polyfill\r\n * by Hubert Sablonnière - https://gist.github.com/hsablonniere/2581101\r\n */\r\nif (!Element.prototype.scrollIntoViewIfNeeded) {\r\n\tElement.prototype.scrollIntoViewIfNeeded = function (centerIfNeeded) {\r\n\t\tcenterIfNeeded = arguments.length === 0 ? true : !!centerIfNeeded;\r\n\r\n\t\tvar parent = this.parentNode,\r\n\t\t\tparentComputedStyle = window.getComputedStyle(parent, null),\r\n\t\t\tparentBorderTopWidth = parseInt(parentComputedStyle.getPropertyValue('border-top-width')),\r\n\t\t\tparentBorderLeftWidth = parseInt(parentComputedStyle.getPropertyValue('border-left-width')),\r\n\t\t\toverTop = this.offsetTop - parent.offsetTop < parent.scrollTop,\r\n\t\t\toverBottom = (this.offsetTop - parent.offsetTop + this.clientHeight - parentBorderTopWidth) > (parent.scrollTop + parent.clientHeight),\r\n\t\t\toverLeft = this.offsetLeft - parent.offsetLeft < parent.scrollLeft,\r\n\t\t\toverRight = (this.offsetLeft - parent.offsetLeft + this.clientWidth - parentBorderLeftWidth) > (parent.scrollLeft + parent.clientWidth),\r\n\t\t\talignWithTop = overTop && !overBottom;\r\n\r\n\t\tif ((overTop || overBottom) && centerIfNeeded) {\r\n\t\t\tparent.scrollTop = this.offsetTop - parent.offsetTop - parent.clientHeight / 2 - parentBorderTopWidth + this.clientHeight / 2;\r\n\t\t}\r\n\r\n\t\tif ((overLeft || overRight) && centerIfNeeded) {\r\n\t\t\tparent.scrollLeft = this.offsetLeft - parent.offsetLeft - parent.clientWidth / 2 - parentBorderLeftWidth + this.clientWidth / 2;\r\n\t\t}\r\n\r\n\t\tif ((overTop || overBottom || overLeft || overRight) && !centerIfNeeded) {\r\n\t\t\tthis.scrollIntoView(alignWithTop);\r\n\t\t}\r\n\t};\r\n}\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t792: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkaudioMotion\"] = self[\"webpackChunkaudioMotion\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [96], () => (__webpack_require__(6965)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["deferred","URL_ORIGIN","location","origin","pathname","defaultRoot","isElectron","window","isWindows","test","navigator","userAgent","supportsFileSystemAPI","showDirectoryPicker","openFolderMsg","noFileServerMsg","MODE_WEB","currentDirHandle","dblClickCallback","enterDirCallback","ui_path","ui_files","serverMode","currentPath","fileExtensions","mounts","nodeServer","hasServerMedia","useFileSystemAPI","updateUI","content","scrollTop","innerHTML","style","backgroundImage","addListItem","item","type","li","document","createElement","fileName","name","dataset","match","path","innerText","handle","append","setFileExplorerBgImage","src","length","forEach","dir","index","mount","cover","dirs","files","file","getFile","then","fileBlob","imgsrc","URL","createObjectURL","makePath","enterDir","target","prev","url","pop","parent","push","Promise","async","parseContent","parseDirectory","resolve","p","entries","fetch","response","status","json","text","catch","noPrefix","fullPath","replace","getFolderContents","selector","contents","querySelectorAll","entry","includes","getHandle","workPath","targetPath","split","dirName","shift","getDirectoryHandle","getFileHandle","parseWebIndex","listing","uri","coverExtensions","imgs","findImg","arr","pattern","regexp","RegExp","source","find","el","FileSystemDirectoryHandle","FileSystemFileHandle","substring","customSort","a","b","isObject","Intl","Collator","compare","sort","refresh","setFileExtensions","validExtensions","join","setPath","savedPath","finalDir","success","ROUTE_FILE","ROUTE_COVER","ROUTE_SAVE","VERSION","BG_DIRECTORY","MAX_METADATA_REQUESTS","MAX_QUEUED_SONGS","BG_DEFAULT","BG_BLACK","BG_COVER","BG_IMAGE","BG_VIDEO","BGFOLDER_NONE","BGFOLDER_SERVER","BGFOLDER_LOCAL","BGFIT_ADJUST","BGFIT_CENTER","BGFIT_REPEAT","BGFIT_PULSE","BGFIT_WARP","BGFIT_WARP_ANI","BGFIT_WARP_ROT","DATASET_TEMPLATE","album","artist","codec","duration","quality","title","CHANNEL_COMBINED","CHANNEL_SINGLE","COLOR_GRADIENT","COLOR_INDEX","COLOR_LEVEL","ERR_ABORT","FILE_EXT_IMAGE","FILE_EXT_MUSIC","FILE_EXT_PLIST","FILE_EXT_VIDEO","FILEMODE_LOCAL","KEY_BG_DIR_HANDLE","KEY_CUSTOM_GRADS","KEY_CUSTOM_PRESET","KEY_DISABLED_BGFIT","KEY_DISABLED_GRADS","KEY_DISABLED_MODES","KEY_DISABLED_PROPS","KEY_DISPLAY_OPTS","KEY_FORCE_FS_API","KEY_GENERAL_OPTS","KEY_LAST_CONFIG","KEY_LAST_DIR","KEY_PLAYLISTS","KEY_PLAYQUEUE","KEY_SENSITIVITY","PLAYLIST_PREFIX","MODE_AREA","MODE_LINE","REFLEX_ON","REFLEX_FULL","RND_ALPHA","RND_BACKGROUND","RND_BARSPACING","RND_BGIMAGEFIT","RND_CHNLAYOUT","RND_COLORMODE","RND_FILLOPACITY","RND_GRADIENT","RND_LEDS","RND_LINEWIDTH","RND_LUMI","RND_MIRROR","RND_MODE","RND_OUTLINE","RND_PEAKS","RND_PRESETS","RND_RADIAL","RND_SPIN","RND_REFLEX","RND_ROUND","RND_SPLIT","SCALE_BARK","SCALE_LOG","SERVER_CUSTOM","SERVER_FILE","SERVERCFG_FILE","SERVERCFG_DEFAULTS","defaultAccessMode","enableLocalAccess","WEIGHT_D","PRESET_NONAME","$","querySelector","bind","$$","elAlphaBars","elAnalyzer","elAnsiBands","elBackground","elBalance","elBarSpace","elBgImageDim","elBgImageFit","elBgLocation","elBgMaxItems","elChnLayout","elColorMode","elContainer","elDim","elEnableVideo","elEndTimeout","elFFTsize","elFillAlpha","elFPS","elFreqScale","elFsHeight","elGradient","elGradientRight","elInfoTimeout","elLedDisplay","elLinearAmpl","elLineWidth","elLinkGrads","elLoadedPlist","elLoRes","elLumiBars","elMaxFPS","elMirror","elMode","elMute","elNoShadow","elNoteLabels","elOutline","elOSD","elPIPRatio","elPlaylists","elRadial","elRandomMode","elRangeMax","elRangeMin","elReflex","elRepeat","elRoundBars","elSaveDir","elSaveQueue","elScaleX","elScaleY","elSensitivity","elShowCount","elShowCover","elShowPeaks","elShowSong","elSmoothing","elSource","elSpin","elSplitGrad","elTrackTimeout","elVideo","elVolume","elWarp","elWeighting","presets","key","options","randomMode","alphaBars","ansiBands","background","barSpace","bgImageDim","bgImageFit","channelLayout","colorMode","freqMax","freqMin","freqScale","gradient","ledDisplay","linearAmpl","lumiBars","mirror","mode","noteLabels","outlineBars","radial","reflex","roundBars","showPeaks","showScaleX","showScaleY","showSong","splitGrad","weighting","fillAlpha","gradientRight","lineWidth","linkGrads","spin","balance","loRes","noShadow","repeat","sensitivity","showFPS","volume","gradients","apple","colorStops","pos","color","disabled","aurora","bgColor","borealis","candy","classic","cool","dusk","miami","orient","outrun","pacific","prism","prism_old","rainbow","rainbow_old","shahabi","summer","sunset","tiedye","modeOptions","value","channelLayoutOptions","randomProperties","sensitivityDefaults","min","max","boost","infoDisplayDefaults","info","track","end","covers","count","bgFitOptions","generalOptionsElements","generalOptionsDefaults","bgLocation","bgMaxItems","enableVideo","fftSize","fsHeight","maxFPS","pipRatio","saveDir","saveQueue","smoothing","maxFpsOptions","pipRatioOptions","audioMotion","canvasMsg","currAudio","fastSearchTimeout","isMicSource","micStream","nextAudio","panNode","playlist","playlistPos","randomModeTimer","userPresets","wasMuted","audioElement","bgImages","bgVideos","currentGradient","folderImages","isFastSearch","overwritePreset","skipping","waitingMetadata","canvasCtx","getContext","coverImage","Image","pipVideo","decodeSlashes","osNative","encodeSlashes","fixFloating","Math","round","getIndex","node","i","previousElementSibling","getText","isCustomRadio","option","textContent","selectedIndex","getControlValue","elements","prop","undefined","active","getCurrentSettings","_","getPresetIndex","findIndex","getPreset","getPresetName","getSelectedGradients","isDual","isSwitchOn","getUserPresets","map","isEmpty","isBlob","startsWith","tagName","isExternalURL","obj","Object","keys","isPIP","classList","contains","isPlaying","audioEl","currentTime","paused","ended","normalizeSlashes","onOff","parsePath","removeServerEncoding","lastSlash","lastIndexOf","slice","lastDot","baseName","extension","toLowerCase","parseTrackName","separator","secondsToTime","queryFile","queueLength","children","randomInt","n","random","saveLastDir","saveToStorage","secs","Infinity","str","lead","setRangeAtts","element","step","addBatchToPlayQueue","autoplay","promises","addToPlayQueue","all","added","total","reduce","sum","val","time","storePlayQueue","addMetadata","metadata","trackData","sourceData","common","format","assign","year","container","bitsPerSample","sampleRate","bitrate","codecProfile","picture","blob","Blob","data","setCurrentCover","addSongToPlayQueue","fileObject","ext","newEl","toUpperCase","appendChild","retrieve","retrieveMetadata","loadSong","loadNextSong","ret","loadPlaylist","playSong","changeBalance","incr","newVal","setBalance","setCanvasMsg","abs","updateLastConfig","changeFsHeight","setProperty","changeVolume","setVolume","clearAudioElement","loadAudioSource","load","consoleLog","msg","error","clear","dt","Date","toLocaleTimeString","hour12","String","getMilliseconds","padStart","add","scrollHeight","cycleElement","idx","Array","from","checked","deleteChildren","firstChild","removeChild","deleteGradient","filter","populateGradients","populateEnabledGradients","savePreferences","href","eraseUserPreset","force","userPresetText","currentName","submitText","submitCallback","cancelCallback","fastSearch","newPos","scheduleFastSearch","finishFastSearch","clearTimeout","fullscreen","exitPictureInPicture","toggleFullscreen","activeElement","blur","keyboardControls","event","code","altKey","ctrlKey","preventDefault","isShiftKey","shiftKey","randomizeSettings","settings","saveUserPreset","loadPreset","e","revokeBlobURL","remove","current","playPause","skipTrack","bgOption","click","toggleInfo","shufflePlayQueue","scale","cycleScale","newSource","oldSource","revokeObjectURL","removeAttribute","loadFileBlob","playIt","onloadeddata","play","loadFromStorage","JSON","parse","electron","api","localStorage","getItem","next","song","requestPermission","resolveAddedSongs","parsePlaylistContent","songInfo","setLoadedPlaylist","line","charAt","trim","list","isArray","alert","init","keepRandomize","isUserPreset","thisPreset","defaults","stereo","updateRangeValue","setOptions","frequencyScale","ledBars","linearAmplitude","maxFreq","minFreq","spinSpeed","splitGradient","weightingFilter","loadSavedPlaylists","keyName","Option","selected","playlists","oldPlaylists","plKey","songs","removeFromStorage","isLocal","finish","updatePlaylistUI","openGradientEditorNew","modifier","some","renderGradientEditor","display","playNextSong","err","pause","playPreviousSong","populateBackgrounds","bgOptions","basicCount","imageCount","videoCount","splice","populateSelect","populateCustomRadio","id","button","label","htmlFor","elEnabledGradients","addEventListener","acc","grad","gradientKey","Error","dest","stop","loadGradientIntoCurrentGradient","getAttribute","oldValue","isEnabled","randomizeControl","validate","attempts","items","props","validIndexes","removeItem","table","tableLabels","cloneNode","template","colorPicker","colorValue","colorStop","addColorButton","removeColorButton","parseFloat","lastPos","idealColorPos","setAttribute","renderColorRow","retrieveBackgrounds","imageExtensions","videoExtensions","encodeURIComponent","bgDirHandle","isImage","isVideo","queueItem","revoke","queryMetadata","skipPostHeaders","syncMetadataToAudioElements","urlToFetch","imageUrl","dirContents","getFolderCover","saveGradient","registerGradient","savePlayqueueToServer","update","childNodes","method","headers","body","stringify","getDisabledItems","customGradients","sensitivityPresets","displayOptions","generalOptions","setItem","isFullscreen","setTimeout","confirmTimeout","maxlength","newName","setBackgroundImage","documentElement","pan","log10","sign","transform","timer","now","performance","targetTime","startTime","endTime","fade","msgTimer","setGeneralOptions","setInfoOptions","elems","save","toggleGradients","isOverlay","overlay","showBgColor","endsWith","bgFit","isWarp","toggle","backgroundSize","startIn","finally","isLumiBars","height","setFreqRange","width","clearInterval","setInterval","reflexRatio","reflexAlpha","setSensitivity","linearBoost","setSource","mediaDevices","getUserMedia","audio","stream","audioCtx","createMediaStreamSource","toggleMute","connectInput","disconnectInput","mediaStream","getTracks","setUIEventListeners","elToggleSettings","elToggleConsole","wheelTimer","btn","deltaY","choices","handler","userChoices","hasChildNodes","clearPlayQueue","deletePlaylist","btnToggleFS","setToggleButtonText","lastDir","newPath","btnAddSelected","btnAddFolder","uploadBtn","canvasTrack","pipWindow","parentElement","loadLocalFile","pipButton","pictureInPictureEnabled","pictureInPictureElement","canvasStream","canvas","captureStream","muted","srcObject","requestPictureInPicture","onPipWindowResize","func","timeout","args","apply","this","debounce","setCanvasSize","pictureInPictureWindow","removeEventListener","mediaSession","setActionHandler","randIndex","oldChild","replaceChild","insertBefore","back","isSaveQueue","safename","normalize","attempt","basename","hasOwnProperty","newCurr","scrollIntoViewIfNeeded","mute","disconnectOutput","connectOutput","elVal","className","baseSize","coverSize","centerPos","rightPos","topLine1","topLine2","bottomLine1","bottomLine2","bottomLine3","maxWidthTop","maxWidthBot","normalFont","largeFont","audioOnEnded","audioOnError","attributes","audioOnPlay","initDone","serverConfig","userMode","searchParams","get","forceFileSystemAPI","isLastSession","parseDisabled","optionList","opt","lastConfig","setPreset","elMinSens","elMaxSens","elLinearBoost","preset","loadPreferences","create","animation","group","pull","put","multiDrag","multiDragKey","selectedClass","onEnd","evt","newIndex","A","version","fsElement","onCanvasDraw","instance","remaining","endTimeout","pixelRatio","timestamp","size","getEnergy","songProgress","drawText","x","y","maxWidth","strokeText","fillText","shadowOffsetX","shadowOffsetY","lineJoin","font","textAlign","fillStyle","strokeStyle","shadowColor","timeLeft","globalAlpha","timeElapsed","totalSongs","drawImage","onCanvasResize","reason","dPR","clientWidth","clientHeight","fsWidth","devicePixelRatio","createStereoPanner","createMediaElementSource","connect","buildOptions","cssClass","cfgKey","elProperties","field","isValid","doConfigPanel","fileExplorerPromise","startUpTimer","nodeName","depth","resetPath","onDblClick","onEnterDir","homeDir","homePath","getHomePath","rootPath","filelist","serverSignature","draggable","to","positions","enterLastDir","isBgDirLocked","isLastDirLocked","filesPanel","queryPermission","outputLatency","baseLatency","Element","prototype","centerIfNeeded","arguments","parentNode","parentComputedStyle","getComputedStyle","parentBorderTopWidth","parseInt","getPropertyValue","parentBorderLeftWidth","overTop","offsetTop","overBottom","overLeft","offsetLeft","scrollLeft","overRight","alignWithTop","scrollIntoView","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","call","m","O","result","chunkIds","fn","priority","notFulfilled","fulfilled","j","every","r","getter","__esModule","d","definition","o","defineProperty","enumerable","g","globalThis","Function","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","self","__webpack_exports__"],"sourceRoot":""}