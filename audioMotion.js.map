{"version":3,"file":"audioMotion.js","mappings":"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","sources":["webpack://audioMotion/webpack/runtime/chunk loaded","webpack://audioMotion/./src/file-explorer.js","webpack://audioMotion/./src/index.js","webpack://audioMotion/./src/scrollIntoViewIfNeeded-polyfill.js","webpack://audioMotion/webpack/bootstrap","webpack://audioMotion/webpack/runtime/compat get default export","webpack://audioMotion/webpack/runtime/define property getters","webpack://audioMotion/webpack/runtime/global","webpack://audioMotion/webpack/runtime/hasOwnProperty shorthand","webpack://audioMotion/webpack/runtime/jsonp chunk loading","webpack://audioMotion/webpack/startup"],"sourcesContent":["var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","/**\n * audioMotion\n * File explorer module\n *\n * https://github.com/hvianna/audioMotion.js\n * Copyright (C) 2019-2024 Henrique Vianna <hvianna@gmail.com>\n */\n\nconst URL_ORIGIN            = location.origin + location.pathname,\n      defaultRoot           = '/music',\n\t  isElectron            = 'electron' in window,\n\t  isWindows             = isElectron && /Windows/.test( navigator.userAgent ),\n\t  supportsFileSystemAPI = !! window.showDirectoryPicker, // does browser support File System API?\n\t  openFolderMsg         = 'Click to open a new root folder',\n\t  openLastFolderMsg     = 'Click to open directory',\n\t  noFileServerMsg       = 'No music found on server and no browser support for File System API';\n\nconst MODE_NODE = 1,  // Electron app or custom node.js file server\n\t  MODE_WEB  = 0,  // standard web server\n\t  MODE_FILE = -1; // local access via file://\n\nlet currentPath       = [],    // array of { dir: <string>, scrollTop: <number>, handle: <FileSystemHandle> }\n\tcurrentDirHandle,          // for File System API accesses\n\tdblClickCallback,\n\tenterDirCallback,\n\tlastDir,\t\t\t\t   // path to last used folder (File System API mode)\n\tmounts            = [],\n\tneedsPermission   = false, // needs to request permission on File System API to open last directory?\n\tnodeServer        = false, // using our custom server? (node server or Electron app)\n\tui_path,\n\tui_files,\n\tserverMode,\n\thasServerMedia    = false, // music directory found on server\n\tuseFileSystemAPI  = false; // use FileSystem API (default on file:// mode or no media found on server)\n\n/**\n * Updates the file explorer user interface\n *\n * @param {object} directory content returned by the node server or parseDirectory()\n * @param {number} scrollTop scroll position for the filelist container\n */\nfunction updateUI( content, scrollTop ) {\n\n\tui_path.innerHTML = '';\n\tui_files.innerHTML = '';\n\tui_files.style.backgroundImage = '';\n\n\tconst addListItem = ( item, type ) => {\n\t\tconst li = document.createElement('li'),\n\t\t\t  fileName = item.name || item;\n\n\t\tli.dataset.type = fileName.match(/\\.(m3u|m3u8)$/) !== null && type == 'file' ? 'list' : type;\n\t\tli.dataset.path = fileName;\n\t\tli.innerText = fileName;\n\t\tli.handle = item.handle; // for File System API accesses\n\n\t\tui_files.append( li );\n\t}\n\tconst setFileExplorerBgImage = src => ui_files.style.backgroundImage = 'linear-gradient( #fff9 0%, #fff9 100% )' + ( src ? `, url('${ src }')` : '' );\n\n\tif ( mounts.length == 0 )\n\t\tui_path.innerHTML = noFileServerMsg;\n\n\t// breadcrumbs\n\tcurrentPath.forEach( ( { dir }, index ) => {\n\t\tui_path.innerHTML += `<li data-depth=\"${ currentPath.length - index - 1 }\">${dir}</li> ${ isWindows ? '\\\\' : dir == '/' ? '' : '/' } `;\n\t});\n\n\tif ( needsPermission ) {\n\t\tui_files.innerHTML += `<li data-type=\"request\" class=\"full-panel\">${ openLastFolderMsg }</li>`;\n\t}\n\telse {\n\t\t// mounting points\n\t\tmounts.forEach( mount => {\n\t\t\tui_files.innerHTML += `<li data-type=\"mount\" ${ useFileSystemAPI && ! currentDirHandle ? 'class=\"full-panel\"' : '' } data-path=\"${mount}\">[ ${mount} ]</li>`;\n\t\t});\n\n\t\t// link to parent directory\n\t\tif ( currentPath.length > 1 )\n\t\t\tui_files.innerHTML += '<li data-type=\"dir\" data-path=\"..\">[ parent folder ]</li>';\n\n\t\t// current directory contents\n\t\tif ( content ) {\n\t\t\tconst { cover, dirs, files } = content;\n\n\t\t\tif ( dirs )\n\t\t\t\tdirs.forEach( dir => addListItem( dir, 'dir' ) );\n\n\t\t\tif ( files )\n\t\t\t\tfiles.forEach( file => addListItem( file, 'file' ) );\n\n\t\t\tif ( useFileSystemAPI && cover ) {\n\t\t\t\tcover.handle.getFile().then( fileBlob => {\n\t\t\t\t\tconst imgsrc = URL.createObjectURL( fileBlob );\n\t\t\t\t\tsetFileExplorerBgImage( imgsrc );\n\t//\t\t\t\tURL.revokeObjectURL( imgsrc );\n\t\t\t\t});\n\t\t\t}\n\t\t\telse\n\t\t\t\tsetFileExplorerBgImage( cover ? makePath( cover ) : '' );\n\t\t}\n\t}\n\n\t// restore scroll position when provided (returning from subdirectory)\n\tui_files.scrollTop = scrollTop || 0;\n}\n\n/**\n * Enters a subdirectory\n *\n * @param {string} [target]    directory name (if empty will open the current path)\n * @param {number} [scrollTop] scrollTop attribute for the filelist container\n * @returns {Promise<boolean>} A promise that resolves to true if the directory change was successful, or false otherwise\n */\nfunction enterDir( target, scrollTop ) {\n\n\tlet prev,\n\t\turl,\n\t\thandle = ! target || typeof target == 'string' ? null : target;\n\n\tif ( handle )\n\t\ttarget = handle.name;\n\n\tif ( target ) {\n\t\tif ( target == '..' ) {\n\t\t\tprev = currentPath.pop(); // remove last directory from currentPath; `prev` is used to restore scrollTop\n\t\t\tconst parent = currentPath[ currentPath.length - 1 ];\n\t\t\tif ( parent && parent.handle )\n\t\t\t\thandle = parent.handle;\n\t\t}\n\t\telse\n\t\t\tcurrentPath.push( { dir: target, scrollTop: ui_files.scrollTop, handle } );\n\t}\n\n\tui_files.innerHTML = '<li>Loading...</li>';\n\n\turl = makePath();\n\n\treturn new Promise( async resolve => {\n\n\t\tconst parseContent = content => {\n\t\t\tif ( content !== false ) {\n\t\t\t\tif ( ! nodeServer || useFileSystemAPI )\n\t\t\t\t\tcontent = parseDirectory( content );\n\t\t\t\tupdateUI( content, scrollTop || ( prev && prev.scrollTop ) );\n\t\t\t\tif ( enterDirCallback )\n\t\t\t\t\tenterDirCallback( currentPath );\n\t\t\t\tresolve( true );\n\t\t\t}\n\t\t\tresolve( false );\n\t\t}\n\n\t\tif ( currentDirHandle ) { // File System API\n\t\t\tif ( handle )\n\t\t\t\tcurrentDirHandle = handle;\n\n\t\t\tlet content = [];\n\t\t\tfor await ( const p of currentDirHandle.entries() )\n\t\t\t\tcontent.push( p );\n\t\t\tparseContent( content );\n\t\t}\n\t\telse {\n\t\t\tfetch( url )\n\t\t\t\t.then( response => {\n\t\t\t\t\tif ( response.status == 200 ) {\n\t\t\t\t\t\tif ( nodeServer )\n\t\t\t\t\t\t\treturn response.json();\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\treturn response.text();\n\t\t\t\t\t}\n\t\t\t\t\treturn false;\n\t\t\t\t})\n\t\t\t\t.then( content => parseContent( content ) )\n\t\t\t\t.catch( () => resolve( false ) );\n\t\t}\n\t});\n}\n\n/**\n * Climbs up the current path (breadcrumbs navigation)\n *\n * @param {number} depth  how many levels to climb up\n */\nfunction resetPath( depth ) {\n\n\tlet prev;\n\n\twhile ( depth > 0 ) {\n\t\tprev = currentPath.pop();\n\t\tdepth--;\n\t}\n\n\tconst parent = currentPath[ currentPath.length - 1 ];\n\tif ( parent && parent.handle ) {\n\t\tcurrentDirHandle = parent.handle;\n\t\tprev = null;\n\t}\n\n\tenterDir( prev, prev && prev.scrollTop );\n}\n\n/* ******************* Public functions: ******************* */\n\n/**\n * Generates full path for a file or directory\n *\n * @param {string} fileName\n * @param {boolean} if `true` does not prefix path with server route\n * @returns {string} full path to filename\n */\nexport function makePath( fileName, noPrefix ) {\n\n\tlet fullPath = '';\n\n\tcurrentPath.forEach( ( { dir } ) => {\n\t\tfullPath += dir + ( dir == '/' ? '' : '/' ); // avoid extra slash after the root directory\n\t});\n\n\tif ( fileName )\n\t\tfullPath += fileName;\n\n\tfullPath = fullPath.replace( /#/g, '%23' ); // replace any '#' character in the filename for its URL-safe code\n\n\tif ( isElectron ) {\n\t\tfullPath = fullPath.replace( /\\//g, '%2f' );\n\t\tif ( ! noPrefix )\n\t\t\tfullPath = ( fileName ? '/getFile/' : '/getDir/' ) + fullPath;\n\t}\n\telse if ( serverMode == MODE_WEB )\n\t\tfullPath = URL_ORIGIN + fullPath;\n\n\treturn fullPath;\n}\n\n/**\n * Returns current folder's file list\n *\n * @param {string} [selector='li']  optional CSS selector\n * @returns {array} list of music files and playlists only\n */\nexport function getFolderContents( selector = 'li' ) {\n\n\tlet contents = [];\n\n\tui_files.querySelectorAll( selector ).forEach( entry => {\n\t\tif ( ['file', 'list'].includes( entry.dataset.type ) )\n\t\t\tcontents.push( { file: makePath( entry.dataset.path ), handle: entry.handle, type: entry.dataset.type } );\n\t});\n\treturn contents;\n}\n\n/**\n * Resolve a given filename and return the corresponding FileSystemFileHandle\n *\n * @param {string} path to filename (must be relative to currentPath)\n * @returns {FileSystemFileHandle}\n */\nexport async function getHandle( pathname ) {\n\tconst workPath   = [ ...currentPath ],\n\t\t  targetPath = pathname.split('/');\n\n\tlet handle = workPath[ workPath.length - 1 ].handle;\n\n\twhile ( targetPath.length > 1 ) {\n\t\tconst dirName = targetPath.shift();\n\t\tif ( dirName == '..' ) {\n\t\t\tworkPath.pop();\n\t\t\thandle = workPath[ workPath.length - 1 ].handle;\n\t\t}\n\t\telse {\n\t\t\thandle = await handle.getDirectoryHandle( dirName );\n\t\t\tworkPath.push( { handle } );\n\t\t}\n\t}\n\n\treturn await handle.getFileHandle( targetPath.shift() );\n}\n\n/**\n * Returns user's home path (for Electron only)\n *\n * @returns {array} array of { dir: <string>, scrollTop: <number> }\n */\nexport async function getHomePath() {\n\n\tconst response = await fetch( '/getHomeDir' ),\n\t\t  homeDir  = await response.text();\n\n\tlet homePath = [];\n\tfor ( const dir of homeDir.split( isWindows ? '\\\\' : '/' ) )\n\t\thomePath.push( { dir, scrollTop: 0 } );\n\n\treturn homePath;\n}\n\n/**\n * Returns current path object\n *\n * @returns {array} array of { dir: <string>, scrollTop: <number> }\n **/\nexport function getPath() {\n\treturn currentPath;\n}\n\n/**\n * Parses the list of files off a web server directory index\n *\n * @param {string}  content HTML body of a web server directory listing\n * @returns {array} an array of objects representing each link found in the listing, with its full uri and filename only\n */\nexport function parseWebIndex( content ) {\n\n\tconst entries = content.match( /href=\"[^\"]*\"[^>]*>[^<]*<\\/a>/gi ); // locate links\n\n\tlet listing = [];\n\n\tfor ( const entry of entries ) {\n\t\tconst [ , uri, file ] = entry.match( /href=\"([^\"]*)\"[^>]*>\\s*([^<]*)<\\/a>/i );\n\t\tlisting.push( { uri, file } );\n\t}\n\n\treturn listing;\n}\n\n/**\n * Parses filenames from standard web server or File System API directory listing\n *\n * @param {string}   content HTML body of a web server directory listing\n * @returns {object} folder/cover image, list of directories, list of files\n */\nexport function parseDirectory( content ) {\n\n\tconst imageExtensions = /\\.(jpg|jpeg|webp|avif|png|gif|bmp)$/i;\n\tconst audioExtensions = /\\.(mp3|flac|m4a|aac|ogg|wav|m3u|m3u8|mkv|mpg|webm|mp4|avi|mov)$/i;\n\n\tlet files = [],\n\t\tdirs  = [],\n\t\timgs  = [];\n\n\t// helper function\n\tconst findImg = ( arr, pattern ) => {\n\t\tconst regexp = new RegExp( `${pattern}.*${imageExtensions.source}`, 'i' );\n\t\treturn arr.find( el => ( el.name || el ).match( regexp ) );\n\t}\n\n\tif ( useFileSystemAPI ) {\n\t\tfor ( const [ name, handle ] of content ) {\n\t\t\tif ( handle instanceof FileSystemDirectoryHandle )\n\t\t\t\tdirs.push( { name, handle } );\n\t\t\telse if ( handle instanceof FileSystemFileHandle ) {\n\t\t\t\tif ( name.match( imageExtensions ) )\n\t\t\t\t\timgs.push( { name, handle } );\n\t\t\t\telse if ( name.match( audioExtensions ) )\n\t\t\t\t\tfiles.push( { name, handle } );\n\t\t\t}\n\t\t}\n\t}\n\telse {\n\t\tfor ( const { uri, file } of parseWebIndex( content ) ) {\n\t\t\tif ( uri.substring( uri.length - 1 ) == '/' ) {\n\t\t\t\tif ( ! file.match( /(parent directory|\\.\\.)/i ) ) {\n\t\t\t\t\tif ( file.substring( file.length - 1 ) == '/' )\n\t\t\t\t\t\tdirs.push( file.substring( 0, file.length - 1 ) );\n\t\t\t\t\telse\n\t\t\t\t\t\tdirs.push( file );\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif ( file.match( imageExtensions ) )\n\t\t\t\t\timgs.push( file );\n\t\t\t\telse if ( file.match( audioExtensions ) )\n\t\t\t\t\tfiles.push( file );\n\t\t\t}\n\t\t}\n\t}\n\n\tconst cover = findImg( imgs, 'cover' ) || findImg( imgs, 'folder' ) || findImg( imgs, 'front' ) || imgs[0];\n\n\tconst customSort = ( a, b ) => {\n\t\tconst collator = new Intl.Collator(), // for case-insensitive sorting - https://stackoverflow.com/a/40390844/2370385\n\t\t\t  isObject = typeof a == 'object';\n\n\t\treturn collator.compare( ...( isObject ? [ a.name, b.name ] : [ a, b ] ) );\n\t}\n\n\treturn { cover, dirs: dirs.sort( customSort ), files: files.sort( customSort ) }\n}\n\n/**\n * Update the contents of the current directory\n */\nexport function refresh() {\n\tenterDir( null, ui_files.scrollTop );\n}\n\n/**\n * Set current path\n *\n * @param {array} path\tarray of { dir: <string>, scrollTop: <number>, handle?: FileSystemDirectoryHandle }\n * @returns {boolean}\n */\nexport async function setPath( path ) {\n\tif ( ! path )\n\t\treturn false;\n\n\tconst savedPath = [ ...currentPath ],\n\t\t  finalDir  = path[ path.length - 1 ];\n\n\tcurrentPath = path;\n\n\tif ( finalDir && finalDir.handle )\n\t\tcurrentDirHandle = finalDir.handle;\n\n\tconst success = await enterDir();\n\n\tif ( ! success )\n\t\tcurrentPath = savedPath;\n\n\treturn success;\n}\n\n\n/**\n * Constructor function\n *\n * @param {Element} container  DOM element where the file explorer should be inserted\n * @param {object} [options]   { onDblClick, onEnterDir, rootPath }\n * @returns {Promise<array>}   A promise with the server status and the filelist's DOM element\n */\nexport function create( container, options = {} ) {\n\n\tlet startUpTimer;\n\n\tui_path = document.createElement('ul');\n\tui_path.className = 'breadcrumb';\n\tcontainer.append( ui_path );\n\n\tui_files = document.createElement('ul');\n\tui_files.className = 'filelist';\n\tcontainer.append( ui_files );\n\n\tstartUpTimer = setTimeout( () => {\n\t\tui_path.innerHTML = 'Waiting for server...';\n\t}, 5000 );\n\n\tui_path.innerHTML = 'Initializing... please wait...';\n\n\tui_path.addEventListener( 'click', async function( e ) {\n\t\tif ( e.target && e.target.nodeName == 'LI' ) {\n\t\t\tresetPath( e.target.dataset.depth );\n\t\t}\n\t});\n\n\tui_files.addEventListener( 'click', async function( e ) {\n\t\tconst item = e.target;\n\t\tif ( item && item.nodeName == 'LI' ) {\n\t\t\tif ( item.dataset.type == 'dir' )\n\t\t\t\tenterDir( item.handle || item.dataset.path );\n\t\t\telse if ( item.dataset.type == 'request' ) {\n\t\t\t\tif ( await lastDir[0].handle.requestPermission() == 'granted' ) {\n\t\t\t\t\tneedsPermission = false;\n\t\t\t\t\tsetPath( lastDir );\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if ( item.dataset.type == 'mount' ) {\n\t\t\t\tif ( useFileSystemAPI ) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tcurrentDirHandle = await window.showDirectoryPicker({ startIn: 'music' });\n\t\t\t\t\t\tcurrentPath = []; // not cleared if directory picker is cancelled by user\n\t\t\t\t\t\tenterDir( currentDirHandle );\n\t\t\t\t\t}\n\t\t\t\t\tcatch (e) {\n\t\t\t\t\t\t// avoid console error when user cancels the directory picker window\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tcurrentPath = [];\n\t\t\t\t\tenterDir( item.dataset.path );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n\n\tui_files.addEventListener( 'dblclick', function( e ) {\n\t\tconst item = e.target;\n\t\tif ( item && item.nodeName == 'LI' ) {\n\t\t\tif ( dblClickCallback && ['file','list'].includes( item.dataset.type ) )\n\t\t\t\tdblClickCallback( { file: makePath( item.dataset.path ), handle: item.handle }, e );\n\t\t}\n\t});\n\n\tif ( typeof options.onDblClick == 'function' )\n\t\tdblClickCallback = options.onDblClick;\n\n\tif ( typeof options.onEnterDir == 'function' )\n\t\tenterDirCallback = options.onEnterDir;\n\n\treturn new Promise( resolve => {\n\t\tfetch( '/serverInfo' )\n\t\t\t.then( response => {\n\t\t\t\treturn response.text();\n\t\t\t})\n\t\t\t.then( async content => {\n\t\t\t\tclearTimeout( startUpTimer );\n\t\t\t\tif ( content.startsWith('audioMotion') ) {\n\t\t\t\t\tnodeServer = true;\n\t\t\t\t\tserverMode = MODE_NODE;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t// no response for our custom query, so it's probably running on a standard web server\n\t\t\t\t\tserverMode = MODE_WEB;\n\t\t\t\t}\n\n\t\t\t\tif ( serverMode == MODE_NODE && isElectron ) {\n\t\t\t\t\tconst response = await fetch( '/getMounts' );\n\t\t\t\t\tmounts = await response.json();\n\t\t\t\t\tsetPath( await getHomePath() ); // on Electron start at user's home by default\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t// web or custom server\n\t\t\t\t\tmounts = [ options.rootPath || defaultRoot ];\n\t\t\t\t\thasServerMedia = await enterDir( mounts[0] );\n\n\t\t\t\t\tif ( options.forceFileSystemAPI && supportsFileSystemAPI || ! hasServerMedia ) {\n\t\t\t\t\t\t// local file system requested or no music directory on server - use File System API if supported\n\t\t\t\t\t\tcurrentPath = [];\n\t\t\t\t\t\tif ( supportsFileSystemAPI ) {\n\t\t\t\t\t\t\tmounts = [ openFolderMsg ];\n\t\t\t\t\t\t\tuseFileSystemAPI = true;\n\t\t\t\t\t\t\tlastDir = options.lastDir;\n\t\t\t\t\t\t\tif ( Array.isArray( lastDir ) && lastDir[0] )\n\t\t\t\t\t\t\t\tneedsPermission = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tmounts = [];\n\t\t\t\t\t\tupdateUI();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tresolve( { serverMode, useFileSystemAPI, hasServerMedia, filelist: ui_files, serverSignature: serverMode == MODE_WEB ? 'Standard web server' : content } );\n\t\t\t})\n\t\t\t.catch( err => {\n\t\t\t\t// if the fetch fails, it's probably running in file:// mode\n\t\t\t\tclearTimeout( startUpTimer );\n\t\t\t\tserverMode = MODE_FILE;\n\t\t\t\tif ( supportsFileSystemAPI ) {\n\t\t\t\t\tmounts = [ openFolderMsg ];\n\t\t\t\t\tuseFileSystemAPI = true;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t\tmounts = [];\n\t\t\t\tupdateUI();\n\t\t\t\tresolve( { serverMode, useFileSystemAPI, filelist: ui_files } );\n\t\t\t});\n\t});\n\n}\n","/**\n *                    ░    ░          ░     ░                ░\n *                    ░               ░░   ░░         ░\n *   ░░░   ░   ░   ░░░░   ░░    ░░░   ░ ░ ░ ░   ░░░  ░░░    ░░    ░░░   ░░░░\n *      ▒  ▒   ▒  ▒   ▒    ▒   ▒   ▒  ▒  ▒  ▒  ▒   ▒  ▒      ▒   ▒   ▒  ▒   ▒\n *   ▒▒▒▒  ▒   ▒  ▒   ▒    ▒   ▒   ▒  ▒     ▒  ▒   ▒  ▒      ▒   ▒   ▒  ▒   ▒\n *  ▓   ▓  ▓   ▓  ▓   ▓    ▓   ▓   ▓  ▓     ▓  ▓   ▓  ▓  ▓   ▓   ▓   ▓  ▓   ▓\n *   ▓▓▓▓   ▓▓▓▓   ▓▓▓▓  ▓▓▓▓▓  ▓▓▓   ▓     ▓   ▓▓▓    ▓▓  ▓▓▓▓▓  ▓▓▓   ▓   ▓\n *\n * audioMotion | High-resolution real-time audio spectrum analyzer and music player\n *\n * https://github.com/hvianna/audioMotion.js\n *\n * @author    Henrique Vianna <hvianna@gmail.com>\n * @copyright (c) 2018-2024 Henrique Avila Vianna\n * @license   AGPL-3.0-or-later\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport AudioMotionAnalyzer from 'audiomotion-analyzer';\nimport packageJson from '../package.json';\nimport * as fileExplorer from './file-explorer.js';\nimport * as mm from 'music-metadata-browser';\nimport './scrollIntoViewIfNeeded-polyfill.js';\nimport { get, set, del } from 'idb-keyval';\n\nimport Sortable, { MultiDrag } from 'sortablejs';\nSortable.mount( new MultiDrag() );\n\nimport notie from 'notie';\nimport './notie.css';\n\nimport './styles.css';\n\nconst isElectron  = 'electron' in window,\n\t  isWindows   = isElectron && /Windows/.test( navigator.userAgent ),\n\t  supportsFileSystemAPI = !! window.showDirectoryPicker,\n\t  ROUTE_FILE  = '/getFile/',   // server route to read files anywhere (Electron only)\n\t  ROUTE_COVER = '/getCover/',  // server route to get a folder's cover image (Electron and legacy node server)\n\t  ROUTE_SAVE  = '/savePlist/', // server route to save a file to the filesystem (Electron only)\n\t  URL_ORIGIN  = location.origin + location.pathname,\n\t  VERSION     = packageJson.version;\n\nconst BG_DIRECTORY          = isElectron ? '/getBackground' : 'backgrounds', // folder name (or server route on Electron) for backgrounds\n\t  MAX_BG_MEDIA_FILES    = 20,\t\t\t// max number of media files (images and videos) selectable as background\n\t  MAX_METADATA_REQUESTS = 4,\n\t  MAX_QUEUED_SONGS      = 1000;\n\n// Background option values\nconst BG_DEFAULT = '0',\n\t  BG_BLACK   = '1',\n\t  BG_COVER   = '2',\n\t  BG_IMAGE   = '3',\n\t  BG_VIDEO   = '4';\n\n// Background image fit option values\nconst BGFIT_ADJUST   = '0',\n\t  BGFIT_CENTER   = '1',\n\t  BGFIT_REPEAT   = '2',\n\t  BGFIT_PULSE    = '3',\n\t  BGFIT_ZOOM_IN  = '4',\n\t  BGFIT_ZOOM_OUT = '5',\n\t  BGFIT_WARP     = '6',\n\t  BGFIT_WARP_ANI = '7',\n\t  BGFIT_WARP_ROT = '8';\n\n// Dataset template for playqueue items and audio elements\nconst DATASET_TEMPLATE = {\n\talbum: '',\n\tartist: '',\n\tcodec: '',\n\tcover: '',\n\tduration: '',\n\tfile: '',\n\tquality: '',\n\ttitle: ''\n};\n\n// Channel Layouts\nconst CHANNEL_COMBINED   = 'dual-combined',\n \t  CHANNEL_HORIZONTAL = 'dual-horizontal',\n\t  CHANNEL_SINGLE     = 'single',\n\t  CHANNEL_VERTICAL   = 'dual-vertical';\n\n// Color modes\nconst COLOR_GRADIENT = 'gradient',\n\t  COLOR_INDEX    = 'bar-index',\n\t  COLOR_LEVEL    = 'bar-level';\n\n// Visualization modes\nconst MODE_DISCRETE    = '0',\n\t  MODE_AREA        = '10',\n\t  MODE_LINE        = '101',\n\t  MODE_OCTAVE_FULL = '8',\n\t  MODE_OCTAVE_HALF = '7',\n\t  MODE_OCTAVE_3RD  = '6',\n\t  MODE_OCTAVE_4TH  = '5',\n\t  MODE_OCTAVE_6TH  = '4',\n\t  MODE_OCTAVE_8TH  = '3',\n\t  MODE_OCTAVE_12TH = '2',\n\t  MODE_OCTAVE_24TH = '1';\n\n// Reflex options\nconst REFLEX_OFF  = '0',\n\t  REFLEX_ON   = '1',\n\t  REFLEX_FULL = '2';\n\n// Property keys for Randomize settings\nconst RND_ALPHA       = 'alpha',\n\t  RND_BACKGROUND  = 'nobg',\n\t  RND_BARSPACING  = 'barSp',\n\t  RND_BGIMAGEFIT  = 'imgfit',\n\t  RND_CHNLAYOUT   = 'stereo',\n\t  RND_COLORMODE   = 'colormode',\n\t  RND_FILLOPACITY = 'fill',\n\t  RND_GRADIENT    = 'gradient',\n\t  RND_LEDS        = 'leds',\n\t  RND_LINEWIDTH   = 'line',\n\t  RND_LUMI        = 'lumi',\n\t  RND_MIRROR      = 'mirror',\n\t  RND_MODE        = 'mode',\n\t  RND_OUTLINE     = 'outline',\n\t  RND_PEAKS       = 'peaks',\n\t  RND_PRESETS     = 'presets',\n\t  RND_RADIAL      = 'radial',\n\t  RND_SPIN        = 'spin',\n\t  RND_REFLEX      = 'reflex',\n\t  RND_ROUND       = 'round',\n\t  RND_SPLIT       = 'split';\n\n// Server modes\nconst SERVER_CUSTOM = 1,  // custom server (node or Electron)\n\t  SERVER_FILE   = -1, // local access via file://\n\t  SERVER_WEB    = 0;  // standard web server\n\n// Frequency scales\nconst SCALE_BARK   = 'bark',\n\t  SCALE_LINEAR = 'linear',\n\t  SCALE_LOG    = 'log',\n\t  SCALE_MEL    = 'mel';\n\n// Weighting filters\nconst WEIGHT_NONE = '',\n\t  WEIGHT_A    = 'A',\n\t  WEIGHT_B    = 'B',\n\t  WEIGHT_C    = 'C',\n\t  WEIGHT_D    = 'D',\n\t  WEIGHT_468  = '468';\n\n// localStorage keys\nconst KEY_CUSTOM_GRADS   = 'custom-grads',\n\t  KEY_CUSTOM_PRESET  = 'custom-preset',\n\t  KEY_DISABLED_BGFIT = 'disabled-bgfit',\n\t  KEY_DISABLED_GRADS = 'disabled-gradients',\n\t  KEY_DISABLED_MODES = 'disabled-modes',\n\t  KEY_DISABLED_PROPS = 'disabled-properties',\n\t  KEY_DISPLAY_OPTS   = 'display-options',\n\t  KEY_FORCE_FS_API   = 'force-filesystem',\n\t  KEY_GENERAL_OPTS   = 'general-settings',\n\t  KEY_LAST_CONFIG    = 'last-config',\n\t  KEY_LAST_DIR       = 'last-dir',\n\t  KEY_PLAYLISTS      = 'playlists',\n\t  KEY_SENSITIVITY    = 'sensitivity-presets',\n\t  PLAYLIST_PREFIX    = 'pl_';\n\n// User presets placeholders\nconst PRESET_EMPTY  = 'Empty slot',\n\t  PRESET_NONAME = 'No description';\n\n// other misc constants\nconst ERR_ABORT = 20; // error code for AbortError\n\n// selector shorthand functions\nconst $  = document.querySelector.bind( document ),\n\t  $$ = document.querySelectorAll.bind( document );\n\n// UI HTML elements\nconst elAlphaBars     = $('#alpha_bars'),\n\t  elAnalyzer      = $('#analyzer'),\t\t\t// analyzer canvas container\n\t  elAnsiBands     = $('#ansi_bands'),\n\t  elBackground    = $('#background'),\n\t  elBalance       = $('#balance'),\n\t  elBarSpace      = $('#bar_space'),\n\t  elBgImageDim    = $('#bg_img_dim'),\n\t  elBgImageFit    = $('#bg_img_fit'),\n\t  elChnLayout     = $('#channel_layout'),\n\t  elColorMode     = $('#color_mode'),\n\t  elContainer     = $('#bg_container'),\t\t// outer container with background image\n\t  elDim           = $('#bg_dim'),\t\t\t// background image/video darkening layer\n\t  elEndTimeout    = $('#end_timeout'),\n\t  elFFTsize       = $('#fft_size'),\n\t  elFillAlpha     = $('#fill_alpha'),\n\t  elFPS           = $('#fps'),\n\t  elFreqScale     = $('#freq_scale'),\n\t  elFsHeight      = $('#fs_height'),\n\t  elGradient      = $('#gradient'),\n\t  elGradientRight = $('#gradientRight'),\n\t  elInfoTimeout   = $('#info_timeout'),\n\t  elLedDisplay    = $('#led_display'),\n\t  elLinearAmpl    = $('#linear_amplitude'),\n\t  elLineWidth     = $('#line_width'),\n\t  elLinkGrads     = $('#link_grads'),\n\t  elLoadedPlist   = $('#loaded_playlist'),\n\t  elLoRes         = $('#lo_res'),\n\t  elLumiBars      = $('#lumi_bars'),\n\t  elMaxFPS        = $('#max_fps'),\n\t  elMirror        = $('#mirror'),\n\t  elMode          = $('#mode'),\n\t  elMute          = $('#mute'),\n\t  elNoShadow      = $('#no_shadow'),\n\t  elNoteLabels    = $('#note_labels'),\n\t  elOutline       = $('#outline'),\n\t  elOSD           = $('#osd'),\t\t\t\t// message canvas\n\t  elPIPRatio      = $('#pip_ratio'),\n\t  elPlaylists     = $('#playlists'),\n\t  elRadial        = $('#radial'),\n\t  elRandomMode    = $('#random_mode'),\n\t  elRangeMax      = $('#freq_max'),\n\t  elRangeMin      = $('#freq_min'),\n\t  elReflex        = $('#reflex'),\n\t  elRepeat        = $('#repeat'),\n\t  elRoundBars     = $('#round_bars'),\n\t  elSaveDir       = $('#save_dir'),\n\t  elScaleX        = $('#scaleX'),\n\t  elScaleY        = $('#scaleY'),\n\t  elSensitivity   = $('#sensitivity'),\n\t  elShowCount     = $('#show_count'),\n\t  elShowCover     = $('#show_cover'),\n\t  elShowPeaks     = $('#show_peaks'),\n\t  elShowSong      = $('#show_song'),\n\t  elSmoothing     = $('#smoothing'),\n\t  elSource        = $('#source'),\n\t  elSpin\t\t  = $('#spin'),\n\t  elSplitGrad     = $('#split_grad'),\n\t  elTrackTimeout  = $('#track_timeout'),\n\t  elVideo         = $('#video'),\t\t\t// background video\n\t  elVolume        = $('#volume'),\n \t  elWarp          = $('#warp'),\t\t\t\t// \"warp\" effect layer\n \t  elWeighting     = $('#weighting');\n\n// Configuration presets\nconst presets = [\n\t{\n\t\tkey: 'demo',\n\t\tname: 'Demo (random)',\n\t\toptions: {\n\t\t\trandomMode  : 6    // 15 seconds\n\t\t}\n\t},\n\n\t{\n\t\tkey: 'bands',\n\t\tname: 'Octave Bands',\n\t\toptions: {\n\t\t\talphaBars    : 0,\n\t\t\tansiBands    : 0,\n\t\t\tbackground   : BG_COVER,\n\t\t\tbarSpace     : .25,\n\t\t\tbgImageDim   : .3,\n\t\t\tbgImageFit   : BGFIT_ADJUST,\n\t\t\tchannelLayout: CHANNEL_SINGLE,\n\t\t\tcolorMode    : COLOR_GRADIENT,\n\t\t\tfreqMax      : 20000,\n\t\t\tfreqMin      : 25,\n\t\t\tfreqScale    : SCALE_LOG,\n\t\t\tgradient     : 'rainbow',\n\t\t\tledDisplay   : 0,\n\t\t\tlinearAmpl   : 1,\n\t\t\tlumiBars     : 0,\n\t\t\tmirror       : 0,\n\t\t\tmode         : MODE_OCTAVE_12TH,\n\t\t\tnoteLabels   : 1,\n\t\t\toutlineBars  : 0,\n\t\t\tradial       : 0,\n\t\t\trandomMode   : 0,\n\t\t\treflex       : REFLEX_ON,\n\t\t\troundBars    : 0,\n\t\t\tshowPeaks    : 1,\n\t\t\tshowScaleX   : 1,\n\t\t\tshowScaleY   : 0,\n\t\t\tshowSong     : 1,\n\t\t\tsplitGrad    : 0,\n\t\t\tweighting    : WEIGHT_D\n\t\t}\n\t},\n\n\t{\n\t\tkey: 'ledbars',\n\t\tname: 'Classic LED bars',\n\t\toptions: {\n\t\t\talphaBars    : 0,\n\t\t\tansiBands    : 1,\n\t\t\tbackground   : BG_COVER,\n\t\t\tbarSpace     : .25,\n\t\t\tbgImageDim   : .3,\n\t\t\tbgImageFit   : BGFIT_CENTER,\n\t\t\tchannelLayout: CHANNEL_SINGLE,\n\t\t\tcolorMode    : COLOR_GRADIENT,\n\t\t\tfreqMax      : 20000,\n\t\t\tfreqMin      : 25,\n\t\t\tfreqScale    : SCALE_LOG,\n\t\t\tgradient     : 'classic',\n\t\t\tledDisplay   : 1,\n\t\t\tlinearAmpl   : 1,\n\t\t\tlumiBars     : 0,\n\t\t\toutlineBars  : 0,\n\t\t\tmirror       : 0,\n\t\t\tmode         : MODE_OCTAVE_3RD,\n\t\t\tnoteLabels   : 0,\n\t\t\tradial       : 0,\n\t\t\trandomMode   : 0,\n\t\t\treflex       : REFLEX_OFF,\n\t\t\troundBars    : 0,\n\t\t\tshowPeaks    : 1,\n\t\t\tshowScaleX   : 1,\n\t\t\tshowScaleY   : 0,\n\t\t\tshowSong     : 1,\n\t\t\tsplitGrad    : 0,\n\t\t\tweighting    : WEIGHT_D\n\t\t}\n\t},\n\n\t{\n\t\tkey: 'dual',\n\t\tname: 'Dual-channel combined Graph, Bark frequency scale',\n\t\toptions: {\n\t\t\tansiBands    : 0,\n\t\t\tbackground   : BG_COVER,\n\t\t\tbgImageDim   : .3,\n\t\t\tbgImageFit   : BGFIT_CENTER,\n\t\t\tchannelLayout: CHANNEL_COMBINED,\n\t\t\tcolorMode    : COLOR_GRADIENT,\n\t\t\tfillAlpha    : .3,\n\t\t\tfreqMax      : 20000,\n\t\t\tfreqMin      : 20,\n\t\t\tfreqScale    : SCALE_BARK,\n\t\t\tgradient     : 'cool',\n\t\t\tgradientRight: 'dusk',\n\t\t\tlinearAmpl   : 1,\n\t\t\tlineWidth    : 1.5,\n\t\t\tlinkGrads    : 0,\n\t\t\tmirror       : 0,\n\t\t\tmode         : MODE_LINE,\n\t\t\tnoteLabels   : 0,\n\t\t\tradial       : 0,\n\t\t\trandomMode   : 0,\n\t\t\treflex       : REFLEX_OFF,\n\t\t\tshowPeaks    : 0,\n\t\t\tshowScaleX   : 0,\n\t\t\tshowScaleY   : 0,\n\t\t\tshowSong     : 1,\n\t\t\tsplitGrad    : 0,\n\t\t\tweighting    : WEIGHT_D\n\t\t}\n\t},\n\n\t{\n\t\tkey: 'radial',\n\t\tname: 'Radial Color by Level',\n\t\toptions: {\n\t\t\talphaBars    : 1,\n\t\t\tansiBands    : 0,\n\t\t\tbackground   : BG_COVER,\n\t\t\tbarSpace     : .1,\n\t\t\tbgImageDim   : .3,\n\t\t\tbgImageFit   : BGFIT_PULSE,\n\t\t\tchannelLayout: CHANNEL_SINGLE,\n\t\t\tcolorMode    : COLOR_LEVEL,\n\t\t\tfreqMax      : 20000,\n\t\t\tfreqMin      : 20,\n\t\t\tfreqScale    : SCALE_LOG,\n\t\t\tgradient     : 'prism',\n\t\t\tledDisplay   : 0,\n\t\t\tlinearAmpl   : 1,\n\t\t\tlumiBars     : 0,\n\t\t\tmirror       : 0,\n\t\t\tmode         : MODE_OCTAVE_4TH,\n\t\t\tnoteLabels   : 0,\n\t\t\toutlineBars  : 0,\n\t\t\tradial       : 1,\n\t\t\trandomMode   : 0,\n\t\t\tshowPeaks    : 1,\n\t\t\tshowScaleX   : 1,\n\t\t\tshowScaleY   : 0,\n\t\t\tshowSong     : 1,\n\t\t\tspin         : 1,\n\t\t\tsplitGrad    : 0,\n\t\t\tweighting    : WEIGHT_D\n\t\t}\n\t},\n\n\t{\n\t\tkey: 'round',\n\t\tname: 'Round Bars reflex',\n\t\toptions: {\n\t\t\talphaBars    : 0,\n\t\t\tbackground   : BG_COVER,\n\t\t\tbarSpace     : .25,\n\t\t\tbgImageDim   : .3,\n\t\t\tbgImageFit   : BGFIT_WARP_ANI,\n\t\t\tchannelLayout: CHANNEL_SINGLE,\n\t\t\tcolorMode    : COLOR_INDEX,\n\t\t\tfreqMax      : 20000,\n\t\t\tfreqMin      : 20,\n\t\t\tfreqScale    : SCALE_LOG,\n\t\t\tgradient     : 'apple',\n\t\t\tledDisplay   : 0,\n\t\t\tlinearAmpl   : 1,\n\t\t\tlumiBars     : 0,\n\t\t\tmirror       : 0,\n\t\t\tmode         : MODE_OCTAVE_8TH,\n\t\t\tnoteLabels   : 0,\n\t\t\toutlineBars  : 0,\n\t\t\tradial       : 0,\n\t\t\trandomMode   : 0,\n\t\t\treflex       : REFLEX_FULL,\n\t\t\troundBars    : 1,\n\t\t\tshowPeaks    : 0,\n\t\t\tshowScaleX   : 0,\n\t\t\tshowScaleY   : 0,\n\t\t\tshowSong     : 1,\n\t\t\tsplitGrad    : 0,\n\t\t\tweighting    : WEIGHT_D\n\t\t}\n\t},\n\n\t{\n\t\tkey: 'last',\n\t\tname: 'Last session',\n\t\toptions: {}\n\t},\n\n\t{\n\t\tkey: 'default',\n\t\tname: 'Restore defaults',\n\t\toptions: {\n\t\t\talphaBars    : 0,\n\t\t\tansiBands    : 0,\n\t\t\tbackground   : BG_DEFAULT,\n\t\t\tbalance      : 0,\n\t\t\tbarSpace     : 0.1,\n\t\t\tbgImageDim   : 0.5,\n\t\t\tbgImageFit   : BGFIT_CENTER,\n\t\t\tchannelLayout: CHANNEL_SINGLE,\n\t\t\tcolorMode    : COLOR_GRADIENT,\n\t\t\tfillAlpha    : 0.1,\n\t\t\tfreqMax      : 20000,\n\t\t\tfreqMin      : 20,\n\t\t\tfreqScale    : SCALE_LOG,\n\t\t\tgradient     : 'prism',\n\t\t\tgradientRight: 'prism',\n\t\t\tledDisplay   : 0,\n\t\t\tlinearAmpl   : 0,\n\t\t\tlineWidth    : 2,\n\t\t\tlinkGrads    : 0,\n\t\t\tloRes        : 0,\n\t\t\tlumiBars     : 0,\n\t\t\tmirror       : 0,\n\t\t\tmode         : MODE_DISCRETE,\n\t\t\tnoShadow     : 1,\n\t\t\tnoteLabels   : 0,\n\t\t\toutlineBars  : 0,\n\t\t\tradial       : 0,\n\t\t\trandomMode   : 0,\n\t\t\treflex       : REFLEX_OFF,\n\t\t\trepeat       : 0,\n\t\t\troundBars    : 0,\n\t\t\tsensitivity  : 1,\n\t\t\tshowFPS      : 0,\n\t\t\tshowPeaks    : 1,\n\t\t\tshowScaleX   : 1,\n\t\t\tshowScaleY   : 1,\n\t\t\tshowSong     : 1,\n\t\t\tspin         : 2,\n\t\t\tsplitGrad    : 0,\n\t\t\tvolume       : 1,\n\t\t\tweighting    : WEIGHT_NONE\n\t\t}\n\t}\n];\n\n// Gradient definitions\nconst gradients = {\n\tapple:    { name: 'Apple ][', colorStops: [\n\t\t\t\t{ pos: .1667, color: '#61bb46' },\n\t\t\t\t{ pos: .3333, color: '#fdb827' },\n\t\t\t\t{ pos: .5, color: '#f5821f' },\n\t\t\t\t{ pos: .6667, color: '#e03a3e' },\n\t\t\t\t{ pos: .8333, color: '#963d97' },\n\t\t\t\t{ pos: 1, color: '#009ddc' }\n\t\t\t  ], disabled: false },\n\taurora:   { name: 'Aurora', bgColor: '#0e172a', colorStops: [\n\t\t\t\t{ pos: .1, color: 'hsl( 120, 100%, 50% )' },\n\t\t\t\t{ pos:  1, color: 'hsl( 216, 100%, 50% )' }\n\t\t\t  ], disabled: false },\n\tborealis:  { name: 'Borealis', bgColor: '#0d1526', colorStops: [\n\t\t\t\t{ pos: .1, color: 'hsl( 120, 100%, 50% )' },\n\t\t\t\t{ pos: .5, color: 'hsl( 189, 100%, 40% )' },\n\t\t\t\t{ pos:  1, color: 'hsl( 290, 60%, 40% )' }\n\t\t\t  ], disabled: false },\n\tcandy:    { name: 'Candy', bgColor: '#0d0619', colorStops: [\n\t\t\t\t{ pos: .1, color: '#ffaf7b' },\n\t\t\t\t{ pos: .5, color: '#d76d77' },\n\t\t\t\t{ pos: 1, color: '#3a1c71' }\n\t\t\t  ], disabled: false },\n\tclassic:  { name: 'Classic', disabled: false },\n\tcool:     { name: 'Cool', bgColor: '#0b202b', colorStops: [\n\t\t\t\t'hsl( 208, 0%, 100% )',\n\t\t\t\t'hsl( 208, 100%, 35% )'\n\t\t\t  ], disabled: false },\n\tdusk:     { name: 'Dusk', bgColor: '#0e172a', colorStops: [\n\t\t\t\t{ pos: .2, color: 'hsl( 55, 100%, 50% )' },\n\t\t\t\t{ pos:  1, color: 'hsl( 16, 100%, 50% )' }\n\t\t\t  ], disabled: false },\n\tmiami:    { name: 'Miami', bgColor: '#110a11', colorStops: [\n\t\t\t\t{ pos: .024, color: 'rgb( 251, 198, 6 )' },\n\t\t\t\t{ pos: .283, color: 'rgb( 224, 82, 95 )' },\n\t\t\t\t{ pos: .462, color: 'rgb( 194, 78, 154 )' },\n\t\t\t\t{ pos: .794, color: 'rgb( 32, 173, 190 )' },\n\t\t\t\t{ pos: 1, color: 'rgb( 22, 158, 95 )' }\n\t\t\t  ], disabled: false },\n\torient:   { name: 'Orient', bgColor: '#100', colorStops: [\n\t\t\t\t{ pos: .1, color: '#f00' },\n\t\t\t\t{ pos: 1, color: '#600' }\n\t\t\t  ], disabled: false },\n\toutrun:   { name: 'Outrun', bgColor: '#101', colorStops: [\n\t\t\t\t{ pos: 0, color: 'rgb( 255, 223, 67 )' },\n\t\t\t\t{ pos: .182, color: 'rgb( 250, 84, 118 )' },\n\t\t\t\t{ pos: .364, color: 'rgb( 198, 59, 243 )' },\n\t\t\t\t{ pos: .525, color: 'rgb( 133, 80, 255 )' },\n\t\t\t\t{ pos: .688, color: 'rgb( 74, 104, 247 )' },\n\t\t\t\t{ pos: 1, color: 'rgb( 35, 210, 255 )' }\n\t\t\t  ], disabled: false },\n\tpacific:  { name: 'Pacific Dream', bgColor: '#051319', colorStops: [\n\t\t\t\t{ pos: .1, color: '#34e89e' },\n\t\t\t\t{ pos: 1, color: '#0f3443' }\n\t\t\t  ], disabled: false },\n\tprism:    { name: 'Prism', disabled: false },\n\tprism_old: { name: 'Prism (legacy)', colorStops: [\n\t\t\t\t'hsl( 0, 100%, 50% )',\n\t\t\t\t'hsl( 60, 100%, 50% )',\n\t\t\t\t'hsl( 120, 100%, 50% )',\n\t\t\t\t'hsl( 180, 100%, 50% )',\n\t\t\t\t'hsl( 240, 100%, 50% )'\n\t\t\t  ], disabled: true },\n\trainbow:  { name: 'Rainbow', disabled: false },\n\trainbow_old: { name: 'Rainbow (legacy)', dir: 'h', colorStops: [\n\t\t\t\t'hsl( 0, 100%, 50% )',\n\t\t\t\t'hsl( 60, 100%, 50% )',\n\t\t\t\t'hsl( 120, 100%, 50% )',\n\t\t\t\t'hsl( 180, 100%, 47% )',\n\t\t\t\t'hsl( 240, 100%, 58% )',\n\t\t\t\t'hsl( 300, 100%, 50% )',\n\t\t\t\t'hsl( 360, 100%, 50% )'\n\t\t\t  ], disabled: true },\n\tshahabi:  { name: 'Shahabi', bgColor: '#060613', colorStops: [\n\t\t\t\t{ pos: .1, color: '#66ff00' },\n\t\t\t\t{ pos: 1, color: '#a80077' }\n\t\t\t  ], disabled: false },\n\tsummer:   { name: 'Summer', bgColor: '#041919', colorStops: [\n\t\t\t\t{ pos: .1, color: '#fdbb2d' },\n\t\t\t\t{ pos: 1, color: '#22c1c3' }\n\t\t\t  ], disabled: false },\n\tsunset:   { name: 'Sunset', bgColor: '#021119', colorStops: [\n\t\t\t\t{ pos: .1, color: '#f56217' },\n\t\t\t\t{ pos: 1, color: '#0b486b' }\n\t\t\t  ], disabled: false },\n\ttiedye:   { name: 'Tie Dye', colorStops: [\n\t\t\t\t{ pos: .038, color: 'rgb( 15, 209, 165 )' },\n\t\t\t\t{ pos: .208, color: 'rgb( 15, 157, 209 )' },\n\t\t\t\t{ pos: .519, color: 'rgb( 133, 13, 230 )' },\n\t\t\t\t{ pos: .731, color: 'rgb( 230, 13, 202 )' },\n\t\t\t\t{ pos: .941, color: 'rgb( 242, 180, 107 )' }\n\t\t\t  ], disabled: false }\n};\n\n// Visualization modes\nconst modeOptions = [\n\t{ value: MODE_DISCRETE,    text: 'Discrete frequencies',    disabled: false },\n\t{ value: MODE_AREA,        text: 'Area graph',              disabled: false },\n\t{ value: MODE_LINE,        text: 'Line graph',              disabled: false },\n\t{ value: MODE_OCTAVE_FULL, text: 'Octave bands / 10 bands', disabled: false },\n\t{ value: MODE_OCTAVE_HALF, text: '1/2 octave / 20 bands',   disabled: false },\n\t{ value: MODE_OCTAVE_3RD,  text: '1/3 octave / 30 bands',   disabled: false },\n\t{ value: MODE_OCTAVE_4TH,  text: '1/4 octave / 40 bands',   disabled: false },\n\t{ value: MODE_OCTAVE_6TH,  text: '1/6 octave / 60 bands',   disabled: false },\n\t{ value: MODE_OCTAVE_8TH,  text: '1/8 octave / 80 bands',   disabled: false },\n\t{ value: MODE_OCTAVE_12TH, text: '1/12 octave / 120 bands', disabled: false },\n\t{ value: MODE_OCTAVE_24TH, text: '1/24 octave / 240 bands', disabled: false }\n];\n\n// Channel Layout options\nconst channelLayoutOptions = [\n\t[ CHANNEL_SINGLE,     'Singl' ],\n\t[ CHANNEL_COMBINED,   'Comb'  ],\n\t[ CHANNEL_HORIZONTAL, 'Horiz' ],\n\t[ CHANNEL_VERTICAL,   'Vert'  ]\n];\n\n// Randomize options\nconst randomProperties = [\n\t{ value: RND_ALPHA,       text: 'Alpha',          disabled: false },\n\t{ value: RND_MODE,        text: 'Analyzer Mode',  disabled: false },\n\t{ value: RND_BACKGROUND,  text: 'Background',     disabled: false },\n\t{ value: RND_BARSPACING,  text: 'Bar Spacing',    disabled: false },\n\t{ value: RND_BGIMAGEFIT,  text: 'BG Image Fit',   disabled: false },\n\t{ value: RND_CHNLAYOUT,   text: 'Channel Layout', disabled: false },\n\t{ value: RND_COLORMODE,   text: 'Color Mode',     disabled: false },\n\t{ value: RND_FILLOPACITY, text: 'Fill Opacity',   disabled: false },\n\t{ value: RND_GRADIENT,    text: 'Gradients',      disabled: false },\n\t{ value: RND_LEDS,        text: 'LEDs',           disabled: false },\n\t{ value: RND_LINEWIDTH,   text: 'Line Width',     disabled: false },\n\t{ value: RND_LUMI,        text: 'Lumi',           disabled: false },\n\t{ value: RND_MIRROR,      text: 'Mirror',         disabled: false },\n\t{ value: RND_OUTLINE,     text: 'Outline',        disabled: false },\n\t{ value: RND_PEAKS,       text: 'Peaks',          disabled: false },\n\t{ value: RND_RADIAL,      text: 'Radial',         disabled: false },\n\t{ value: RND_SPIN,        text: 'Radial Spin',    disabled: false },\n\t{ value: RND_REFLEX,      text: 'Reflex',         disabled: false },\n\t{ value: RND_ROUND,       text: 'Round',          disabled: false },\n\t{ value: RND_SPLIT,       text: 'Split',          disabled: false },\n\t{ value: RND_PRESETS,     text: 'User Presets',   disabled: true }\n];\n\n// Sensitivity presets\nconst sensitivityDefaults = [\n\t{ min: -70,  max: -20, boost: 1 }, // low\n\t{ min: -85,  max: -25, boost: 1.6 }, // normal\n\t{ min: -100, max: -30, boost: 2.4 }  // high\n];\n\n// On-screen information display options\nconst infoDisplayDefaults = {\n\tinfo  : 5,\t  // display time (secs) when requested via click or keyboard shortcut\n\ttrack : 10,   // display time (secs) on track change\n\tend   : 0,    // display time (secs) at the end of the song\n\tcovers: true, // show album covers in song information\n\tcount : true  // show song number and play queue count\n}\n\n// Background Image Fit options\nconst bgFitOptions = [\n\t{ value: BGFIT_ADJUST,   text: 'Adjust',      disabled: false },\n\t{ value: BGFIT_CENTER,   text: 'Center',      disabled: false },\n\t{ value: BGFIT_PULSE,    text: 'Pulse',       disabled: false },\n\t{ value: BGFIT_REPEAT,   text: 'Repeat',      disabled: false },\n\t{ value: BGFIT_WARP,     text: 'Warp',        disabled: false },\n\t{ value: BGFIT_WARP_ANI, text: 'Warp Drive',  disabled: false },\n\t{ value: BGFIT_WARP_ROT, text: 'Wormhole',    disabled: false },\n\t{ value: BGFIT_ZOOM_IN,  text: 'Zoom In',     disabled: false },\n\t{ value: BGFIT_ZOOM_OUT, text: 'Zoom Out',    disabled: false },\n];\n\n// General settings\nconst generalOptionsElements = [ elFFTsize, elFsHeight, elMaxFPS, elPIPRatio, elSaveDir, elSmoothing ];\n\nconst generalOptionsDefaults = {\n\tfftSize  : 8192,\n\tfsHeight : 100,\n\tmaxFPS   : 60,\n\tpipRatio : 2.35,\n\tsaveDir  : true,\n\tsmoothing: .7,\n}\n\nconst maxFpsOptions = [\n\t[ 30, '30' ],\n\t[ 60, '60' ],\n\t[ 0, 'unlimited' ]\n];\n\nconst pipRatioOptions = [\n\t[ 1, '1:1' ],\n\t[ 1.33, '4:3' ],\n\t[ 1.78, '16:9' ],\n\t[ 2.35, '2.35:1' ],\n\t[ 3.55, '32:9' ]\n];\n\n// Global variables\nlet audioElement = [],\n\taudioMotion,\n\tbgImages = [],\n\tbgVideos = [],\n\tcanvasMsg,\n\tcurrAudio, \t\t\t\t\t// audio element currently in use\n\tcurrentGradient = null,     // gradient that is currently loaded in gradient editor\n\tfastSearchTimeout,\n\tfolderImages = {}, \t\t\t// folder cover images for songs with no picture in the metadata\n\tisFastSearch = false,\n\tisMicSource,\t\t\t\t// flag for microphone input in use\n\tmicStream,\n\tnextAudio, \t\t\t\t\t// audio element loaded with the next song (for improved seamless playback)\n\toverwritePreset = false,    // flag to overwrite user preset during fullscreen\n\tpanNode,\t\t\t\t\t// stereoPanner node for balance control\n\tplaylist, \t\t\t\t\t// play queue\n\tplaylistPos, \t\t\t\t// index to the current song in the queue\n\trandomModeTimer,\n\tserverMode,\n\tskipping = false,\n\thasServerMedia,\t\t\t\t// music directory found on web server\n\tuseFileSystemAPI,\t\t\t// load music from local device when in web server mode\n\tuserPresets,\n\twaitingMetadata = 0,\n\twasMuted;\t\t\t\t\t// mute status before switching to microphone input\n\nconst canvasCtx  = elOSD.getContext('2d'),\n\t  coverImage = new Image(),\t// cover image for the currently playing song (for canvas rendering)\n\t  pipVideo   = document.createElement('video');\n\n\n// HELPER FUNCTIONS -------------------------------------------------------------------------------\n\n// convert URL-encoded slashes back to regular ASCII\nconst decodeSlashes = ( path, osNative ) => path.replace( /(%2f|\\/)/g, osNative && isWindows ? '\\\\' : '/' );\n\n// convert slashes to their URL-safe encoding for server queries\nconst encodeSlashes = path => path.replace( /\\//g, '%2f' );\n\n// precision fix for floating point numbers\nconst fixFloating = value => Math.round( value * 100 ) / 100;\n\n// return the index of an element inside its parent - based on https://stackoverflow.com/a/13657635/2370385\nconst getIndex = node => {\n\tif ( ! node )\n\t\treturn;\n\tlet i = 0;\n\twhile ( node = node.previousElementSibling )\n\t\ti++;\n\treturn i;\n}\n\n// returns the text of the selected option in a `select` or custom radio element\nconst getText = el => {\n\tlet text = '';\n\tif ( isCustomRadio( el ) ) {\n\t\tconst option = el.querySelector(':checked ~ label');\n\t\tif ( option )\n\t\t\ttext = option.textContent;\n\t}\n\telse\n\t\ttext = el[ el.selectedIndex ].text;\n\treturn text;\n}\n\n// return the value of a Settings UI control\nconst getControlValue = el => {\n\tif ( isCustomRadio( el ) )\n\t\treturn el.elements[ el.dataset.prop ].value;\n\tif ( el.dataset.active !== undefined ) // switches\n\t\treturn el.dataset.active;\n\treturn el.value; // select and input elements\n}\n\n// returns an object with the current settings\nconst getCurrentSettings = _ => ({\n\talphaBars    : getControlValue( elAlphaBars ),\n\tansiBands    : getControlValue( elAnsiBands ),\n\tbackground   : getControlValue( elBackground ),\n\tbarSpace     : getControlValue( elBarSpace ),\n\tbgImageDim   : getControlValue( elBgImageDim ),\n\tbgImageFit   : getControlValue( elBgImageFit ),\n\tchannelLayout: getControlValue( elChnLayout ),\n\tcolorMode    : getControlValue( elColorMode ),\n\tfillAlpha    : getControlValue( elFillAlpha ),\n\tfreqMax\t\t : getControlValue( elRangeMax ),\n\tfreqMin\t\t : getControlValue( elRangeMin ),\n\tfreqScale    : getControlValue( elFreqScale ),\n\tgradient\t : getControlValue( elGradient ),\n\tgradientRight: getControlValue( elGradientRight ),\n\tledDisplay   : getControlValue( elLedDisplay ),\n\tlinearAmpl   : getControlValue( elLinearAmpl ),\n\tlineWidth    : getControlValue( elLineWidth ),\n\tlinkGrads    : getControlValue( elLinkGrads ),\n\tloRes        : getControlValue( elLoRes ),\n\tlumiBars     : getControlValue( elLumiBars ),\n\tmirror       : getControlValue( elMirror ),\n\tmode         : getControlValue( elMode ),\n\tnoShadow     : getControlValue( elNoShadow ),\n\tnoteLabels   : getControlValue( elNoteLabels ),\n\toutlineBars  : getControlValue( elOutline ),\n\tradial       : getControlValue( elRadial ),\n\trandomMode   : getControlValue( elRandomMode ),\n\treflex       : getControlValue( elReflex ),\n\trepeat       : getControlValue( elRepeat ),\n\troundBars    : getControlValue( elRoundBars ),\n\tsensitivity  : getControlValue( elSensitivity ),\n\tshowFPS      : getControlValue( elFPS ),\n\tshowPeaks \t : getControlValue( elShowPeaks ),\n\tshowScaleX \t : getControlValue( elScaleX ),\n\tshowScaleY \t : getControlValue( elScaleY ),\n\tshowSong     : getControlValue( elShowSong ),\n\tspin         : getControlValue( elSpin ),\n\tsplitGrad    : getControlValue( elSplitGrad ),\n\tweighting    : getControlValue( elWeighting )\n});\n\n// get the array index for a preset key, or validate a given index; if invalid or not found returns -1\nconst getPresetIndex = key => {\n\tconst index = ( +key == key ) ? key : presets.findIndex( item => item.key == key );\n\treturn ( index < 0 || index > presets.length - 1 ) ? -1 : index;\n}\n\n// get the configurations options of a preset\nconst getPreset = key => {\n\tconst index = getPresetIndex( key );\n\treturn ( index == -1 ) ? {} : presets[ index ].options;\n}\n\n// get the name of a preset\nconst getPresetName = key => {\n\tconst index = getPresetIndex( key );\n\treturn ( index == -1 ) ? false : presets[ index ].name;\n}\n\n// return selected gradient(s) for canvas OSD message\nconst getSelectedGradients = () => {\n\tconst isDual = getControlValue( elChnLayout ) != CHANNEL_SINGLE && ! isSwitchOn( elLinkGrads );\n\treturn `Gradient${ isDual ? 's' : ''}: ${ gradients[ elGradient.value ].name + ( isDual ? ' / ' + gradients[ elGradientRight.value ].name : '' ) }`;\n}\n\n// update configuration options from an existing preset\nconst setPreset = ( key, options ) => {\n\tconst index = getPresetIndex( key );\n\tif ( index == -1 )\n\t\treturn;\n\tpresets[ index ].options = options;\n}\n\n// get the list of keys/names for playlists stored in localStorage or indexedDB; returns a promise\nconst getStoredPlaylists = () => useFileSystemAPI ? get( KEY_PLAYLISTS ) : loadFromStorage( KEY_PLAYLISTS );\n\n// return a list of user preset slots and descriptions\nconst getUserPresets = () => userPresets.map( ( item, index ) => `<strong>[${ index + 1 }]</strong>&nbsp; ${ isEmpty( item ) ? `<em class=\"empty\">${ PRESET_EMPTY }</em>` : item.name || PRESET_NONAME }` );\n\n// check if a given url/path is a blob\nconst isBlob = src => src.startsWith('blob:');\n\n// check if a given object is a custom radio buttons element\nconst isCustomRadio = el => el.tagName == 'FORM' && el.dataset.prop != undefined;\n\n// check if a string is an external URL\nconst isExternalURL = path => path.startsWith('http') && ! path.startsWith( URL_ORIGIN );\n\n// check if an object is empty\nconst isEmpty = obj => ! obj || typeof obj != 'object' || ! Object.keys( obj ).length;\n\n// check if PIP is active\nconst isPIP = _ => elContainer.classList.contains('pip');\n\n// check if audio is playing\nconst isPlaying = ( audioEl = audioElement[ currAudio ] ) => audioEl && audioEl.currentTime > 0 && ! audioEl.paused && ! audioEl.ended;\n\n// returns a boolean with the current status of a UI switch\nconst isSwitchOn = el => el.dataset.active == '1';\n\n// normalize slashes in path to Linux format\nconst normalizeSlashes = path => path.replace( /\\\\/g, '/' );\n\n// returns a string with the current status of a UI switch\nconst onOff = el => isSwitchOn( el ) ? 'ON' : 'OFF';\n\n// parse a path and return its individual parts\nconst parsePath = uri => {\n\tconst fullPath  = removeServerEncoding( uri ),\n\t\t  lastSlash = fullPath.lastIndexOf('/') + 1,\n\t\t  path      = fullPath.slice( 0, lastSlash ), // path only\n\t\t  fileName  = fullPath.slice( lastSlash ),    // file name with extension\n\t\t  lastDot   = fileName.lastIndexOf('.'),\n\t\t  baseName  = lastDot >= 0 ? fileName.slice( 0, lastDot ) : fileName, // file name only (no extension)\n\t\t  extension = lastDot >= 0 ? fileName.slice( lastDot + 1 ).toLowerCase() : ''; // extension (without dot)\n\n\treturn { path, fileName, baseName, extension };\n}\n\n// try to extract metadata off the filename (artist - title) or #EXTINF text (duration,artist - title)\nconst parseTrackName = name => {\n\tname = name.replace( /_/g, ' ' ); // for some really old file naming conventions :)\n\t// try to discard the track number from the title, by checking commonly used separators (dot, hyphen or space)\n\t// if the separator is a comma, assume the number is actually the duration from an #EXTINF tag\n\tconst [ ,, duration, separator,, artist, title ] = name.match( /(^(-?\\d+)([,\\.\\-\\s]))?((.*?)\\s+-\\s+)?(.*)/ );\n\treturn { artist, title, duration: separator == ',' ? secondsToTime( duration ) : '' };\n}\n\n// prepare a file path for use with the Electron file server if needed\nconst queryFile = path => {\n\tif ( isElectron && ! isExternalURL( path ) ) {\n\t\tif ( path.startsWith( ROUTE_FILE ) )\n\t\t\tpath = path.slice( ROUTE_FILE.length );\n\t\tpath = ROUTE_FILE + encodeSlashes( path );\n\t}\n\treturn path;\n}\n\n// returns the count of queued songs\nconst queueLength = _ => playlist.children.length;\n\n// returns a random integer in the range [ 0, n-1 ]\nconst randomInt = ( n = 2 ) => Math.random() * n | 0;\n\n// remove custom server route and encoded slashes from a URL\nconst removeServerEncoding = uri => {\n\tconst regexp = new RegExp( `^${ ROUTE_FILE }` );\n\treturn normalizeSlashes( decodeSlashes( uri.replace( regexp, '' ) ) );\n}\n\n// helper function to save a path to localStorage or IndexedDB\nconst saveLastDir = path => {\n\tif ( useFileSystemAPI )\n\t\tset( KEY_LAST_DIR, path ); // IndexedDB\n\telse if ( serverMode != SERVER_FILE )\n\t\tsaveToStorage( KEY_LAST_DIR, path );\n}\n\n// format a value in seconds to a string in the format 'hh:mm:ss'\nconst secondsToTime = secs => {\n\tif ( secs == Infinity || secs == -1 )\n\t\treturn 'LIVE';\n\n\tlet str  = '',\n\t\tlead = '';\n\n\tif ( secs >= 3600 ) {\n\t\tstr = ( secs / 3600 | 0 ) + ':';\n\t\tsecs %= 3600;\n\t\tlead = '0';\n\t}\n\n\tstr += ( lead + ( secs / 60 | 0 ) ).slice(-2) + ':' + ( '0' + ( secs % 60 | 0 ) ).slice(-2);\n\n\treturn str;\n}\n\n// set attributes of \"range\" or \"number\" input elements\nconst setRangeAtts = ( element, min, max, step = 1 ) => {\n\telement.min  = min;\n\telement.max  = max;\n\telement.step = step;\n}\n\n// GENERAL FUNCTIONS ------------------------------------------------------------------------------\n\n/**\n * Adds a batch of files to the queue and displays total songs added when finished\n *\n * @param files {array} array of objects with a 'file' property (and optional 'handle' property)\n * @param [autoplay] {boolean}\n */\nfunction addBatchToPlayQueue( files, autoplay = false ) {\n\tconst promises = files.map( entry => addToPlayQueue( entry, autoplay ) );\n\tPromise.all( promises ).then( added => {\n\t\tconst total = added.reduce( ( sum, val ) => sum + val, 0 ),\n\t\t\t  text  = `${total} song${ total > 1 ? 's' : '' } added to the queue${ queueLength() < MAX_QUEUED_SONGS ? '' : '. Queue is full!' }`;\n\t\tnotie.alert({ text, time: 5 });\n\t});\n}\n\n/**\n * Add audio metadata to a playlist item or audio element\n */\nfunction addMetadata( metadata, target ) {\n\tconst trackData  = target.dataset,\n\t\t  sourceData = metadata.dataset,\n\t\t  common     = metadata.common,\n\t\t  format     = metadata.format;\n\n\tif ( sourceData ) { // if `metadata` has a dataset it's a playqueue item; just copy the data to target element\n\t\tObject.assign( trackData, sourceData );\n\t}\n\telse {\t\t\t\t// otherwise, it's metadata read from file; we need to parse it and populate the dataset\n\t\ttrackData.artist = common.artist || trackData.artist;\n\t\ttrackData.title  = common.title || trackData.title;\n\t\ttrackData.album  = common.album ? common.album + ( common.year ? ' (' + common.year + ')' : '' ) : '';\n\t\ttrackData.codec  = format ? format.codec || format.container : trackData.codec;\n\n\t\t// for track quality info, metadata is prioritized in the following order, according to availability:\n\t\t// 1. sampleRate (optional) + bitsPerSample (present)        - ex.: 48KHz / 16bits | 16bits\n\t\t// 2. bitrate (present) + codecProfile (optional)            - ex.: 128K CBR | 128K\n\t\t// 3. only sampleRate or bitsPerSample, whichever is present - ex.: 48KHz | 16bits\n\t\tif ( format && ( format.bitsPerSample || ( format.sampleRate && ! format.bitrate ) ) ) {\n\t\t\ttrackData.quality = ( format.sampleRate ? ( format.sampleRate / 1000 | 0 ) + 'KHz' : '' ) +\n\t\t\t\t\t\t\t    ( format.sampleRate && format.bitsPerSample ? ' / ' : '' ) +\n\t\t\t\t\t\t\t    ( format.bitsPerSample ? format.bitsPerSample + 'bits' : '' );\n\t\t}\n\t\telse if ( format && format.bitrate )\n\t\t\ttrackData.quality = ( format.bitrate / 1000 | 0 ) + 'K ' + ( format.codecProfile || '' );\n\t\telse\n\t\t\ttrackData.quality = '';\n\n\t\tif ( format && format.duration )\n\t\t\ttrackData.duration = secondsToTime( format.duration );\n\t\telse\n\t\t\ttrackData.duration = '';\n\n\t\tif ( common.picture && common.picture.length ) {\n\t\t\tconst blob = new Blob( [ common.picture[0].data ], { type: common.picture[0].format } );\n\t\t\ttrackData.cover = URL.createObjectURL( blob );\n\t\t}\n\t}\n\n\tif ( target == audioElement[ currAudio ] )\n\t\tsetCurrentCover();\n}\n\n/**\n * Add a song to the play queue\n * returns a Promise that resolves to 1 when song added, or 0 if queue is full\n */\nfunction addSongToPlayQueue( fileObject, content = {}, autoplay ) {\n\n\treturn new Promise( resolve => {\n\t\tif ( queueLength() >= MAX_QUEUED_SONGS )\n\t\t\tresolve(0);\n\n\t\tlet uri = normalizeSlashes( fileObject.file );\n\n\t\t// extract file name and extension\n\t\tconst file = decodeSlashes( uri ).split('/').pop(),\n\t\t\t  ext  = file.split('.').pop();\n\n\t\t// create new list element\n\t\tconst newEl     = document.createElement('li'),\n\t\t\t  trackData = newEl.dataset;\n\n\t\tObject.assign( trackData, DATASET_TEMPLATE ); // initialize element's dataset attributes\n\n\t\ttrackData.artist   = content.artist || '';\n\t\ttrackData.title    = content.title || file.replace( /%23/g, '#' ) || uri.slice( uri.lastIndexOf('//') + 2 );\n\t\ttrackData.duration = content.duration || '';\n\t\ttrackData.codec    = ( ext !== file ) ? ext.toUpperCase() : '';\n\n\t\tnewEl.handle = fileObject.handle; // for File System API accesses\n\n\t\t// replace any '#' character in the filename for its URL-safe code (for content coming from playlist files)\n\t\turi = uri.replace( /#/g, '%23' );\n\t\ttrackData.file = uri;\n\n\t\tplaylist.appendChild( newEl );\n\n\t\ttrackData.retrieve = 1; // flag this item as needing metadata\n\t\tretrieveMetadata();\n\n\t\tif ( ( autoplay || queueLength() == 1 ) && ! isPlaying() )\n\t\t\tloadSong( 0, autoplay ).then( () => resolve(1) );\n\t\telse\n\t\t\tresolve(1);\n\n\t\tif ( playlistPos > queueLength() - 3 )\n\t\t\tloadNextSong();\n\t});\n}\n\n/**\n * Add a song or playlist to the play queue\n */\nfunction addToPlayQueue( fileObject, autoplay = false ) {\n\n\tlet ret;\n\n\tif ( ['m3u','m3u8'].includes( parsePath( fileObject.file ).extension ) )\n\t\tret = loadPlaylist( fileObject, autoplay );\n\telse\n\t\tret = addSongToPlayQueue( fileObject, parseTrackName( parsePath( fileObject.file ).baseName ), autoplay );\n\n\t// when promise resolved, if autoplay requested start playing the first added song\n\tret.then( n => {\n\t\tif ( autoplay && ! isPlaying() && n > 0 )\n\t\t\tplaySong( queueLength() - n );\n\t});\n\n\treturn ret;\n}\n\n/**\n * Increase or decrease balance\n */\nfunction changeBalance( incr ) {\n\tlet newVal = incr ? fixFloating( ( +elBalance.dataset.value || 0 ) + incr * .1 ) : 0;\n\n\tif ( newVal < -1 )\n\t\tnewVal = -1;\n\telse if ( newVal > 1 )\n\t\tnewVal = 1;\n\n\tsetBalance( newVal );\n\tsetCanvasMsg( `Balance: ${ newVal == 0 ? 'CENTER' : ( Math.abs( newVal ) * 100 ) + '% ' + ( newVal > 0 ? 'Right' : 'Left' ) }` );\n\tupdateLastConfig();\n}\n\n/**\n * Change fullscreen analyzer height\n */\nfunction changeFsHeight( incr ) {\n\tconst val = +elFsHeight.value;\n\n\tif ( incr == 1 && val < +elFsHeight.max || incr == -1 && val > +elFsHeight.min ) {\n\t\telFsHeight.value = val + elFsHeight.step * incr;\n\t\tsetProperty( elFsHeight );\n\t}\n\tsetCanvasMsg( `Analyzer height: ${ elFsHeight.value }%` );\n}\n\n/**\n * Increase or decrease volume\n */\nfunction changeVolume( incr ) {\n\tlet newVal = fixFloating( ( +elVolume.dataset.value || 0 ) + incr * .05 );\n\n\tif ( newVal < 0 )\n\t\tnewVal = 0;\n\telse if ( newVal > 1 )\n\t\tnewVal = 1;\n\n\tsetVolume( newVal );\n\tsetCanvasMsg( `Volume: ${ newVal * 20 }` );\n\tupdateLastConfig();\n}\n\n/**\n * Clear audio element\n */\nfunction clearAudioElement( n = currAudio ) {\n\tconst audioEl   = audioElement[ n ],\n\t\t  trackData = audioEl.dataset;\n\n\tloadAudioSource( audioEl, null ); // remove .src attribute\n\tObject.assign( trackData, DATASET_TEMPLATE ); // clear data attributes\n\taudioEl.load();\n\n\tif ( n == currAudio )\n\t\tsetCurrentCover(); // clear coverImage and background image if needed\n}\n\n/**\n * Clear the play queue\n */\nfunction clearPlayQueue() {\n\n\twhile ( playlist.hasChildNodes() )\n\t\trevokeBlobURL( playlist.removeChild( playlist.firstChild ) );\n\n\tif ( ! isPlaying() ) {\n\t\tplaylistPos = 0;\n\t\tclearAudioElement( currAudio );\n\t}\n\telse\n\t\tplaylistPos = -1;\n\n\tclearAudioElement( nextAudio );\n\tupdatePlaylistUI();\n}\n\n/**\n * Output messages to the UI \"console\"\n */\nfunction consoleLog( msg, error, clear ) {\n\tconst content = $('#console-content'),\n\t \t  dt = new Date(),\n\t\t  time = dt.toLocaleTimeString( [], { hour12: false } ) + '.' + String( dt.getMilliseconds() ).padStart( 3, '0' );\n\n\tif ( clear )\n\t\tcontent.innerHTML = '';\n\n\tif ( error )\n\t\t$('#toggle_console').classList.add('warning');\n\n\tif ( msg )\n\t\tcontent.innerHTML += `<div ${ error ? 'class=\"error\"' : '' }>${ time } &gt; ${msg}</div>`;\n\n\tcontent.scrollTop = content.scrollHeight;\n}\n\n/**\n * Select next or previous option in a `select` HTML element or custom radio buttons, cycling around when necessary\n *\n * @param el {object} HTML object\n * @param [prev] {boolean} true to select previous option\n */\nfunction cycleElement( el, prev ) {\n\tconst options = isCustomRadio( el ) ? el.elements[ el.dataset.prop ] : el.options;\n\n\tlet idx = ( isCustomRadio( el ) ? Array.from( options ).findIndex( item => item.checked ) : el.selectedIndex ) + ( prev ? -1 : 1 );\n\n\tif ( idx < 0 )\n\t\tidx = options.length - 1;\n\telse if ( idx >= options.length )\n\t\tidx = 0;\n\n\tif ( isCustomRadio( el ) )\n\t\toptions[ idx ].checked = true;\n\telse\n\t\tel.selectedIndex = idx;\n\n\tsetProperty( el );\n}\n\n/**\n * Cycle X and Y axis scales\n *\n * @param [prev] {boolean} true to select previous option\n * @return integer (bit 0 = scale X status; bit 1 = scale Y status)\n */\nfunction cycleScale( prev ) {\n\tlet scale = +elScaleX.dataset.active + ( elScaleY.dataset.active << 1 ) + ( prev ? -1 : 1 );\n\n\tif ( scale < 0 )\n\t\tscale = 3;\n\telse if ( scale > 3 )\n\t\tscale = 0;\n\n\telScaleX.dataset.active = scale & 1;\n\telScaleY.dataset.active = scale >> 1;\n\n\tsetProperty( [ elScaleX, elScaleY ] );\n\treturn scale;\n}\n\n/**\n * Delete all child nodes of an element\n */\nfunction deleteChildren( el ) {\n\twhile ( el.firstChild )\n\t\tel.removeChild( el.firstChild );\n}\n\n/**\n * Removes gradient that has been loaded into the editor from the gradients object as well as the saved custom gradients\n * preference.\n *\n * Note, this does not remove the gradient from the analyzer. Rather, the analyzer's gradient object will be\n * overwritten next time a gradient is created. This is because custom gradient keys are generated based on how many\n * custom gradients. See `openGradientEditorNew()`. Additionally, the deleted gradient is removed from the stored\n * preferences, so the analyzer will not have it on next load.\n */\nfunction deleteGradient() {\n\tif (!currentGradient || !currentGradient.key) return;\n\n\tdelete gradients[currentGradient.key];\n\n\t// if that was the only enabled gradient, set the first gradient as enabled\n\tif (Object.keys(gradients).filter(key => !gradients[key].disabled).length === 0) {\n\t\tgradients[Object.keys(gradients)[0]].disabled = false;\n\t}\n\n\tpopulateGradients();\n\tpopulateEnabledGradients();\n\tsavePreferences(KEY_CUSTOM_GRADS);\n\tsavePreferences(KEY_DISABLED_GRADS); // saving disabled gradients because if we the only enabled one, we set the first to be enabled.\n\n\tcurrentGradient = null;\n\tlocation.href = '/#config';\n}\n\n/**\n * Delete a playlist from localStorage\n */\nfunction deletePlaylist( index ) {\n\tif ( elPlaylists[ index ].dataset.isLocal ) {\n\t\tnotie.confirm({\n\t\t\ttext: `Do you really want to DELETE the \"${elPlaylists[ index ].innerText}\" playlist?<br>THIS CANNOT BE UNDONE!`,\n\t\t\tsubmitText: 'Delete',\n\t\t\tsubmitCallback: async () => {\n\t\t\t\tconst keyName   = elPlaylists[ index ].value,\n\t\t\t\t\t  key       = PLAYLIST_PREFIX + keyName,\n\t\t\t\t\t  playlists = await getStoredPlaylists();\n\n\t\t\t\tif ( playlists )\n\t\t\t\t\tdelete playlists[ keyName ];\n\n\t\t\t\tif ( useFileSystemAPI ) { // indexedDB\n\t\t\t\t\tdel( key );\n\t\t\t\t\tawait set( KEY_PLAYLISTS, playlists );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tlocalStorage.removeItem( key );\n\t\t\t\t\tsaveToStorage( KEY_PLAYLISTS, playlists );\n\t\t\t\t}\n\n\t\t\t\tnotie.alert({ text: 'Playlist deleted' });\n\t\t\t\tloadSavedPlaylists();\n\t\t\t},\n\t\t\tcancelCallback: () => {\n\t\t\t\tnotie.alert({ text: 'Canceled' })\n\t\t\t},\n\t\t});\n\t}\n\telse if ( elPlaylists[ index ].value )\n\t\tnotie.alert({ text: 'Cannot delete a server playlist!' });\n}\n\n/**\n * Populate Config Panel options\n */\nfunction doConfigPanel() {\n\n\t// helper function\n\tconst buildOptions = ( container, cssClass, options, parent, cfgKey ) => {\n\t\t// create checkboxes inside the container\n\t\toptions.forEach( item => {\n\t\t\tcontainer.innerHTML += `<label><input type=\"checkbox\" class=\"${cssClass}\" data-option=\"${item.value}\" ${ item.disabled ? '' : 'checked' }> ${item.text}</label>`;\n\t\t});\n\n\t\t// add event listeners for enabling/disabling options\n\t\t$$( `.${cssClass}` ).forEach( element => {\n\t\t\telement.addEventListener( 'click', event => {\n\t\t\t\tif ( ! element.checked ) {\n\t\t\t\t\tconst count = options.filter( item => ! item.disabled ).length;\n\t\t\t\t\tif ( count < 2 ) {\n\t\t\t\t\t\tnotie.alert({ text: 'At least one item must be enabled!' });\n\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tconst opt = options.find( item => item.value == element.dataset.option );\n\t\t\t\tif ( opt ) {\n\t\t\t\t\topt.disabled = ! element.checked;\n\t\t\t\t\tpopulateSelect( parent, options );\n\t\t\t\t\tsavePreferences( cfgKey );\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\t// Enabled visualization modes\n\tbuildOptions( $('#enabled_modes'), 'enabledMode', modeOptions, elMode, KEY_DISABLED_MODES );\n\n\t// Enabled Background Image Fit options\n\tbuildOptions( $('#enabled_bgfit'), 'enabledBgFit', bgFitOptions, elBgImageFit, KEY_DISABLED_BGFIT );\n\n\t// Enabled gradients\n\n\tconst elEnabledGradients = $('#enabled_gradients');\n\n\tObject.keys( gradients ).forEach( key => {\n\t\telEnabledGradients.innerHTML += `<label><input type=\"checkbox\" class=\"enabledGradient\" data-grad=\"${key}\" ${gradients[ key ].disabled ? '' : 'checked'}> ${gradients[ key ].name}</label>`;\n\t});\n\n\tpopulateEnabledGradients();\n\n\t// Randomize configuration\n\n\tconst elProperties = $('#random_properties');\n\n\trandomProperties.forEach( prop => {\n\t\telProperties.innerHTML += `<label><input type=\"checkbox\" class=\"randomProperty\" value=\"${prop.value}\" ${prop.disabled ? '' : 'checked'}> ${prop.text}</label>`;\n\t});\n\n\t$$('.randomProperty').forEach( el => {\n\t\tel.addEventListener( 'click', event => {\n\t\t\trandomProperties.find( item => item.value == el.value ).disabled = ! el.checked;\n\t\t\tsavePreferences( KEY_DISABLED_PROPS );\n\t\t});\n\t});\n\n\t// Sensitivity presets (already populated by loadPreferences())\n\t$$( '[data-preset]' ).forEach( el => {\n\t\tif ( el.className == 'reset-sens' ) {\n\t\t\tel.addEventListener( 'click', () => {\n\t\t\t\tconst preset = el.dataset.preset;\n\t\t\t\t$(`.min-db[data-preset=\"${preset}\"]`).value = sensitivityDefaults[ preset ].min;\n\t\t\t\t$(`.max-db[data-preset=\"${preset}\"]`).value = sensitivityDefaults[ preset ].max;\n\t\t\t\t$(`.linear-boost[data-preset=\"${preset}\"]`).value = sensitivityDefaults[ preset ].boost;\n\t\t\t\t$$(`[data-preset=\"${preset}\"]`).forEach( field => {\n\t\t\t\t\tfield.classList.remove('field-error');\n\t\t\t\t});\n\t\t\t\tif ( el.dataset.preset == getControlValue( elSensitivity ) ) // current preset has been changed\n\t\t\t\t\tsetProperty( elSensitivity, false );\n\t\t\t\tsavePreferences( KEY_SENSITIVITY );\n\t\t\t});\n\t\t}\n\t\telse {\n\t\t\tel.addEventListener( 'change', () => {\n\t\t\t\tconst isValid = ( +el.value >= +el.min && +el.value <= +el.max );\n\t\t\t\tif ( isValid ) {\n\t\t\t\t\tif ( el.dataset.preset == getControlValue( elSensitivity ) ) // current preset has been changed\n\t\t\t\t\t\tsetProperty( elSensitivity, false );\n\t\t\t\t\tsavePreferences( KEY_SENSITIVITY );\n\t\t\t\t}\n\t\t\t\tel.classList.toggle( 'field-error', ! isValid );\n\t\t\t});\n\t\t}\n\t});\n\n\t// On-screen display options\n\tfor ( const el of [ elInfoTimeout, elTrackTimeout, elEndTimeout, elShowCover, elShowCount ] )\n\t\tel.addEventListener( 'change', () => savePreferences( KEY_DISPLAY_OPTS ) );\n\n\t$('#reset_osd').addEventListener( 'click', () => {\n\t\tsetInfoOptions( infoDisplayDefaults );\n\t\tsavePreferences( KEY_DISPLAY_OPTS );\n\t});\n\n\t// General settings\n\tgeneralOptionsElements.forEach( el => {\n\t\tel.addEventListener( 'change', () => setProperty( el ) );\n\t});\n\n\t$('#reset_general').addEventListener( 'click', () => {\n\t\tsetGeneralOptions( generalOptionsDefaults );\n\t\tsetProperty( generalOptionsElements );\n\t});\n}\n\n/**\n * Erase a user preset\n *\n * @param {number} slot index (0-8)\n * @param [{boolean}] force\n */\nfunction eraseUserPreset( index, force ) {\n\tif ( isEmpty( userPresets[ index ] ) )\n\t\treturn; // nothing to do\n\n\tconst userPresetText = `User Preset #${ index + 1 }`,\n\t\t  currentName = userPresets[ index ].name ? '<br>' + userPresets[ index ].name : '';\n\n\tif ( ! force ) {\n\t\tnotie.confirm({\n\t\t\ttext: `Do you really want to DELETE ${ userPresetText }?${ currentName }<br>THIS CANNOT BE UNDONE!`,\n\t\t\tsubmitText: 'DELETE',\n\t\t\tsubmitCallback: () => {\n\t\t\t\teraseUserPreset( index, true ); // force erase\n\t\t\t},\n\t\t\tcancelCallback: () => {\n\t\t\t\tnotie.alert({ text: 'Canceled!' })\n\t\t\t},\n\t\t});\n\t\treturn;\n\t}\n\n\t// Update presets array in memory and save updated contents to storage\n\tuserPresets[ index ] = {};\n\tsaveToStorage( KEY_CUSTOM_PRESET, userPresets );\n\n\tnotie.alert({ text: `Deleted ${ userPresetText }` });\n}\n\n/**\n * Fast forward or rewind the current audio element\n */\nfunction fastSearch( dir = 1 ) {\n\tconst audioEl = audioElement[ currAudio ];\n\n\tif ( audioEl.duration > 0 && audioEl.duration < Infinity ) {\n\t\tlet newPos = audioEl.currentTime + dir * 5; // 5 seconds steps\n\n\t\tif ( newPos < 0 )\n\t\t\tnewPos = 0;\n\t\telse if ( newPos > audioEl.duration - 1 )\n\t\t\tnewPos = audioEl.duration - 1\n\n\t\tsetCanvasMsg(1); // display song info\n\t\taudioEl.currentTime = newPos;\n\t}\n\n\t// 'keydown' keeps triggering while the key is pressed, but 'mousedown' triggers only once,\n\t// so we need to schedule another call to keep this working when in mouse mode\n\tif ( isFastSearch == 'm' )\n\t\tscheduleFastSearch( 'm', dir );\n}\n\n/**\n * Finish track fast search\n */\nfunction finishFastSearch() {\n\tclearTimeout( fastSearchTimeout );\n\tif ( isFastSearch ) {\n\t\tisFastSearch = false;\n\t\treturn true;\n\t}\n\t// fast search was never activated, return false to indicate a track skip\n\treturn false;\n}\n\n/**\n * Display the canvas in full-screen mode\n */\nasync function fullscreen() {\n\tif ( isPIP() )\n\t\tawait document.exitPictureInPicture();\n\taudioMotion.toggleFullscreen();\n\tdocument.activeElement.blur(); // move keyboard focus to the document body\n}\n\n/**\n * Try to get a cover image from the song's folder\n */\nfunction getFolderCover( uri ) {\n\treturn new Promise( resolve => {\n\t\tconst path = parsePath( uri ).path; // extract path (no filename)\n\n\t\tif ( serverMode == SERVER_FILE || isExternalURL( uri ) )\n\t\t\tresolve(''); // nothing to do when in serverless mode or external file\n\t\telse if ( folderImages[ path ] !== undefined )\n\t\t\tresolve( queryFile( path + folderImages[ path ] ) ); // use the stored image URL for this path\n\t\telse {\n\t\t\tconst urlToFetch = ( serverMode == SERVER_CUSTOM ) ? ROUTE_COVER + encodeSlashes( path ) : path;\n\n\t\t\tfetch( urlToFetch )\n\t\t\t\t.then( response => {\n\t\t\t\t\treturn ( response.status == 200 ) ? response.text() : null;\n\t\t\t\t})\n\t\t\t\t.then( content => {\n\t\t\t\t\tlet imageUrl = '';\n\t\t\t\t\tif ( content ) {\n\t\t\t\t\t\tif ( serverMode == SERVER_CUSTOM )\n\t\t\t\t\t\t\timageUrl = content;\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tconst dirContents = fileExplorer.parseDirectory( content );\n\t\t\t\t\t\t\tif ( dirContents.cover )\n\t\t\t\t\t\t\t\timageUrl = dirContents.cover;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tfolderImages[ path ] = imageUrl;\n\t\t\t\t\tresolve( queryFile( path + imageUrl ) );\n\t\t\t\t});\n\t\t}\n\t});\n}\n\n/**\n * Process keyboard shortcuts\n */\nfunction keyboardControls( event ) {\n\n\tif ( event.code == 'F1' && ! event.altKey && ! event.ctrlKey ) {\n\t\tlocation.href = '#help';\n\t\tevent.preventDefault();\n\t\treturn;\n\t}\n\n\tif ( event.target.tagName != 'BODY' || event.altKey || event.ctrlKey )\n\t\treturn;\n\n\tconst isShiftKey = event.shiftKey;\n\n\t// keys handled on 'keydown' allow automatic repetition\n\tif ( event.type == 'keydown' ) {\n\t\tswitch ( event.code ) {\n\t\t\tcase 'ArrowUp': \t// volume up\n\t\t\t\tif ( isShiftKey )\n\t\t\t\t\tchangeFsHeight(1);\n\t\t\t\telse\n\t\t\t\t\tchangeVolume(1);\n\t\t\t\tbreak;\n\t\t\tcase 'ArrowDown': \t// volume down\n\t\t\t\tif ( isShiftKey )\n\t\t\t\t\tchangeFsHeight(-1);\n\t\t\t\telse\n\t\t\t\t\tchangeVolume(-1);\n\t\t\t\tbreak;\n\t\t\tcase 'ArrowLeft': \t// rewind\n\t\t\t\tif ( isShiftKey )\n\t\t\t\t\tchangeBalance(-1);\n\t\t\t\telse if ( isFastSearch ) {\n\t\t\t\t\tsetCanvasMsg( 'Rewind', 1 );\n\t\t\t\t\tfastSearch(-1);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t\tscheduleFastSearch('k', -1);\n\t\t\t\tbreak;\n\t\t\tcase 'ArrowRight': \t// fast forward\n\t\t\t\tif ( isShiftKey )\n\t\t\t\t\tchangeBalance(1);\n\t\t\t\telse if ( isFastSearch ) {\n\t\t\t\t\tsetCanvasMsg( 'Fast forward', 1 );\n\t\t\t\t\tfastSearch();\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t\tscheduleFastSearch('k');\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\t// no key match - quit and keep default behavior\n\t\t\t\treturn;\n\t\t}\n\t}\n\telse {\n\t\tif ( event.code.match( /^(Digit|Numpad)[0-9]$/ ) ) {\n\t\t\tconst index = event.code.slice(-1) - 1;\n\t\t\tif ( index == -1 ) { // '0' pressed\n\t\t\t\t// ignore if Shift pressed as it could be a user mistake\n\t\t\t\tif ( ! isShiftKey ) {\n\t\t\t\t\trandomizeSettings( true );\n\t\t\t\t\tsetProperty( elRandomMode, false ); // restart randomize timer (if active)\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if ( isShiftKey ) {\n\t\t\t\tconst settings = getCurrentSettings();\n\t\t\t\tsettings.randomMode = 0; // when saving via keyboard shortcut, turn off Randomize\n\t\t\t\tsaveUserPreset( index, settings );\n\t\t\t}\n\t\t\telse\n\t\t\t\tloadPreset( index );\n\t\t}\n\t\telse {\n\t\t\tswitch ( event.code ) {\n\t\t\t\tcase 'Delete': \t\t// delete selected songs from the playlist\n\t\t\t\tcase 'Backspace':\t// for Mac\n\t\t\t\t\tplaylist.querySelectorAll('.selected').forEach( e => {\n\t\t\t\t\t\trevokeBlobURL( e );\n\t\t\t\t\t\te.remove();\n\t\t\t\t\t});\n\t\t\t\t\tconst current = getIndex( playlist.querySelector('.current') );\n\t\t\t\t\tif ( current !== undefined )\n\t\t\t\t\t\tplaylistPos = current;\t// update playlistPos if current song hasn't been deleted\n\t\t\t\t\telse if ( playlistPos > queueLength() - 1 )\n\t\t\t\t\t\tplaylistPos = queueLength() - 1;\n\t\t\t\t\telse\n\t\t\t\t\t\tplaylistPos--;\n\t\t\t\t\tif ( queueLength() )\n\t\t\t\t\t\tloadNextSong();\n\t\t\t\t\telse {\n\t\t\t\t\t\tclearAudioElement( nextAudio );\n\t\t\t\t\t\tif ( ! isPlaying() )\n\t\t\t\t\t\t\tclearAudioElement();\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'Space': \t\t// play / pause\n\t\t\t\t\tsetCanvasMsg( isPlaying() ? 'Pause' : 'Play', 1 );\n\t\t\t\t\tplayPause();\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'ArrowLeft': \t// previous song\n\t\t\t\tcase 'KeyJ':\n\t\t\t\t\tif ( ! finishFastSearch() && ! isShiftKey ) {\n\t\t\t\t\t\tsetCanvasMsg( 'Previous track', 1 );\n\t\t\t\t\t\tskipTrack(true);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'KeyG': \t\t// gradient\n\t\t\t\t\tcycleElement( elGradient, isShiftKey );\n\t\t\t\t\tsetCanvasMsg( getSelectedGradients() );\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'ArrowRight': \t// next song\n\t\t\t\tcase 'KeyK':\n\t\t\t\t\tif ( ! finishFastSearch() && ! isShiftKey ) {\n\t\t\t\t\t\tsetCanvasMsg( 'Next track', 1 );\n\t\t\t\t\t\tskipTrack();\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'KeyA': \t\t// cycle thru Randomize options\n\t\t\t\t\tcycleElement( elRandomMode, isShiftKey );\n\t\t\t\t\tsetCanvasMsg( 'Randomize: ' + getText( elRandomMode ) );\n\t\t\t\t\tsetProperty( elRandomMode );\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'KeyB': \t\t// background or image fit (shift)\n\t\t\t\t\tcycleElement( isShiftKey ? elBgImageFit : elBackground );\n\t\t\t\t\tconst bgOption = elBackground.value[0];\n\t\t\t\t\tsetCanvasMsg( 'Background: ' + getText( elBackground ) + ( bgOption > 1 && bgOption < 7 ? ` (${getText( elBgImageFit )})` : '' ) );\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'KeyC': \t\t// radial\n\t\t\t\t\telRadial.click();\n\t\t\t\t\tsetCanvasMsg( 'Radial ' + onOff( elRadial ) );\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'KeyD': \t\t// display information\n\t\t\t\t\ttoggleInfo();\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'KeyE': \t\t// shuffle queue\n\t\t\t\t\tif ( queueLength() > 0 ) {\n\t\t\t\t\t\tshufflePlayQueue();\n\t\t\t\t\t\tsetCanvasMsg( 'Shuffle' );\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'KeyF': \t\t// toggle fullscreen\n\t\t\t\t\tfullscreen();\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'KeyH': \t\t// toggle fps display\n\t\t\t\t\telFPS.click();\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'KeyI': \t\t// toggle info display on track change\n\t\t\t\t\telShowSong.click();\n\t\t\t\t\tsetCanvasMsg( 'Song info display ' + onOff( elShowSong ) );\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'KeyL': \t\t// toggle LED display effect\n\t\t\t\t\telLedDisplay.click();\n\t\t\t\t\tsetCanvasMsg( 'LED effect ' + onOff( elLedDisplay ) );\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'KeyM': \t\t// visualization mode\n\t\t\t\tcase 'KeyV':\n\t\t\t\t\tcycleElement( elMode, isShiftKey );\n\t\t\t\t\tsetCanvasMsg( 'Mode: ' + getText( elMode ) );\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'KeyN': \t\t// increase or reduce sensitivity\n\t\t\t\t\tcycleElement( elSensitivity, isShiftKey );\n\t\t\t\t\tsetCanvasMsg( getText( elSensitivity ).toUpperCase() + ' sensitivity' );\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'KeyO': \t\t// toggle resolution\n\t\t\t\t\telLoRes.click();\n\t\t\t\t\tsetCanvasMsg( ( isSwitchOn( elLoRes ) ? 'LOW' : 'HIGH' ) + ' Resolution' );\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'KeyP': \t\t// toggle peaks display\n\t\t\t\t\telShowPeaks.click();\n\t\t\t\t\tsetCanvasMsg( 'Peaks ' + onOff( elShowPeaks ) );\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'KeyR': \t\t// toggle playlist repeat\n\t\t\t\t\telRepeat.click();\n\t\t\t\t\tsetCanvasMsg( 'Queue repeat ' + onOff( elRepeat ) );\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'KeyS': \t\t// toggle X and Y axis scales\n\t\t\t\t\tsetCanvasMsg( 'Scale: ' + ['None','Frequency (Hz)','Level (dB)','Both'][ cycleScale( isShiftKey ) ] );\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'KeyT': \t\t// toggle text shadow\n\t\t\t\t\telNoShadow.click();\n\t\t\t\t\tsetCanvasMsg( ( isSwitchOn( elNoShadow ) ? 'Flat' : 'Shadowed' ) + ' text mode' );\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'KeyU': \t\t// toggle lumi bars\n\t\t\t\t\telLumiBars.click();\n\t\t\t\t\tsetCanvasMsg( 'Luminance bars ' + onOff( elLumiBars ) );\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'KeyX':\n\t\t\t\t\tcycleElement( elReflex, isShiftKey );\n\t\t\t\t\tsetCanvasMsg( 'Reflex: ' + getText( elReflex ) );\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\t// no key match - quit and keep default behavior\n\t\t\t\t\treturn;\n\t\t\t} // switch\n\t\t}\n\t} // else if ( event.type == 'keydown' )\n\n\tevent.preventDefault();\n}\n\n/**\n * Sets (or removes) the `src` attribute of a audio element and\n * releases any data blob (File System API) previously in use by it\n *\n * @param {object} audio element\n * @param {string} URL - if `null` completely removes the `src` attribute\n */\nfunction loadAudioSource( audioEl, newSource ) {\n\tconst oldSource = audioEl.src || '';\n\tif ( isBlob( oldSource ) )\n\t\tURL.revokeObjectURL( oldSource );\n\n\tif ( ! newSource )\n\t\taudioEl.removeAttribute('src');\n\telse\n\t\taudioEl.src = newSource;\n}\n\n/**\n * Load a file blob into an audio element\n *\n * @param {object} audio element\n * @param {object} file blob\n */\nfunction loadFileBlob( fileBlob, audioEl, playIt ) {\n\treturn new Promise( resolve => {\n\t\tloadAudioSource( audioEl, URL.createObjectURL( fileBlob ) );\n\t\taudioEl.onloadeddata = () => {\n\t\t\tif ( playIt )\n\t\t\t\taudioEl.play();\n\t\t\tresolve( true );\n\t\t};\n\t});\n}\n\n/**\n * Load a JSON-encoded object from localStorage\n *\n * @param {string} item key\n * @returns {object} parsed object\n */\nasync function loadFromStorage( key ) {\n\treturn JSON.parse( isElectron ? await electron.api( 'storage-get', key ) : localStorage.getItem( key ) );\n}\n\n/**\n * Clones the gradient of the given key into the currentGradient variable\n */\nfunction loadGradientIntoCurrentGradient(gradientKey) {\n\tif (!gradients[gradientKey]) throw new Error(`gradients[${gradientKey}] is null or undefined.`);\n\n\tconst src = gradients[gradientKey];\n\tconst dest = {};\n\n\tdest.name = src.name;\n\tdest.bgColor = src.bgColor;\n\tdest.dir = src.dir\n\tdest.disabled = src.disabled;\n\tdest.key = gradientKey;\n\tdest.colorStops = [];\n\tfor (const stop of src.colorStops) {\n\t\tdest.colorStops.push({...stop});\n\t}\n\n\tcurrentGradient = dest;\n}\n\n/**\n * Load a music file from the user's computer\n */\nfunction loadLocalFile( obj ) {\n\tconst fileBlob = obj.files[0];\n\n\tif ( fileBlob ) {\n\t\tclearAudioElement();\n\t\tconst audioEl = audioElement[ currAudio ];\n\t\tloadFileBlob( fileBlob, audioEl, true ); // load and play\n\t\tmm.parseBlob( fileBlob )\n\t\t\t.then( metadata => addMetadata( metadata, audioEl ) )\n\t\t\t.catch( e => {} );\n\t}\n}\n\n/**\n * Loads next song into the audio element not currently in use\n */\nasync function loadNextSong() {\n\tconst next    = ( playlistPos < queueLength() - 1 ) ? playlistPos + 1 : 0,\n\t\t  song    = playlist.children[ next ],\n\t\t  audioEl = audioElement[ nextAudio ];\n\n\tif ( song ) {\n\t\taddMetadata( song, audioEl );\n\t\tif ( song.handle ) {\n\t\t\tawait song.handle.requestPermission();\n\t\t\tsong.handle.getFile()\n\t\t\t\t.then( fileBlob => loadFileBlob( fileBlob, audioEl ) )\n\t\t\t\t.then( () => audioEl.load() );\n\t\t}\n\t\telse {\n\t\t\tloadAudioSource( audioEl, song.dataset.file );\n\t\t\taudioEl.load();\n\t\t}\n\t}\n\n\tskipping = false; // finished skipping track\n}\n\n/**\n * Load a playlist file into the play queue\n */\nfunction loadPlaylist( fileObject, autoplay = false ) {\n\n\tlet path = normalizeSlashes( fileObject.file );\n\n\treturn new Promise( async ( resolve ) => {\n\t\tlet\tpromises = [];\n\n\t\tconst resolveAddedSongs = () => {\n\t\t\tPromise.all( promises ).then( added => {\n\t\t\t\tconst total = added.reduce( ( sum, val ) => sum + val, 0 );\n\t\t\t\tresolve( total );\n\t\t\t});\n\t\t}\n\n\t\tconst parsePlaylistContent = async content => {\n\t\t\tif ( ! elLoadedPlist.dataset.path )\n\t\t\t\tsetLoadedPlaylist( path );\n\n\t\t\tpath = parsePath( path ).path; // extracts the path (no filename); also decodes/normalize slashes\n\n\t\t\tlet songInfo;\n\n\t\t\tfor ( let line of content.split(/[\\r\\n]+/) ) {\n\t\t\t\tif ( line.charAt(0) != '#' && line.trim() != '' ) { // not a comment or blank line?\n\t\t\t\t\tline = normalizeSlashes( line );\n\t\t\t\t\tif ( ! songInfo ) // if no #EXTINF tag found on previous line, use the filename\n\t\t\t\t\t\tsongInfo = parsePath( line ).baseName;\n\n\t\t\t\t\tlet handle;\n\n\t\t\t\t\t// if it's an external URL just add it to the queue as is\n\t\t\t\t\tif ( ! isExternalURL( line ) ) {\n\t\t\t\t\t\tif ( useFileSystemAPI ) {\n\t\t\t\t\t\t\thandle = await fileExplorer.getHandle( line );\n\t\t\t\t\t\t\tif ( ! handle )\n\t\t\t\t\t\t\t\tconsoleLog( `Cannot resolve file handle for ${ line }`, true );\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// if it's not an absolute path, prepend the current path to it\n\t\t\t\t\t\tif ( line[1] != ':' && line[0] != '/' )\n\t\t\t\t\t\t\tline = path + line;\n\t\t\t\t\t}\n\n\t\t\t\t\tpromises.push( addSongToPlayQueue( { file: queryFile( line ), handle }, parseTrackName( songInfo ), autoplay ) );\n\t\t\t\t\tautoplay = false; // disable it after adding the first song\n\t\t\t\t\tsongInfo = '';\n\t\t\t\t}\n\t\t\t\telse if ( line.startsWith('#EXTINF') )\n\t\t\t\t\tsongInfo = line.slice(8); // save #EXTINF metadata for the next iteration\n\t\t\t}\n\t\t\tresolveAddedSongs();\n\t\t}\n\n\t\tif ( ! path ) {\n\t\t\tresolve( -1 );\n\t\t}\n\t\telse if ( ['m3u','m3u8'].includes( parsePath( path ).extension ) ) {\n\t\t\tif ( fileObject.handle ) {\n\t\t\t\tfileObject.handle.getFile()\n\t\t\t\t\t.then( fileBlob => fileBlob.text() )\n\t\t\t\t\t.then( parsePlaylistContent )\n\t\t\t\t\t.catch( e => {\n\t\t\t\t\t\tconsoleLog( e, true );\n\t\t\t\t\t\tresolve( 0 );\n\t\t\t\t\t});\n\t\t\t}\n\t\t\telse {\n\t\t\t\tfetch( path )\n\t\t\t\t\t.then( response => {\n\t\t\t\t\t\tif ( response.status == 200 )\n\t\t\t\t\t\t\treturn response.text();\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tconsoleLog( `Fetch returned error code ${response.status} for URI ${path}`, true );\n\t\t\t\t\t})\n\t\t\t\t\t.then( parsePlaylistContent )\n\t\t\t\t\t.catch( e => {\n\t\t\t\t\t\tconsoleLog( e, true );\n\t\t\t\t\t\tresolve( 0 );\n\t\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\telse { // try to load playlist from localStorage\n\t\t\tconst key  = PLAYLIST_PREFIX + path,\n\t\t\t\t  list = useFileSystemAPI ? await get( key ) : await loadFromStorage( key );\n\n\t\t\tif ( Array.isArray( list ) ) {\n\t\t\t\tlist.forEach( entry => {\n\t\t\t\t\tconst file   = normalizeSlashes( entry.file || entry ),\n\t\t\t\t\t\t  handle = entry.handle;\n\t\t\t\t\tpromises.push( addSongToPlayQueue( { file, handle }, parseTrackName( parsePath( file ).baseName ) ) );\n\t\t\t\t});\n\t\t\t\tresolveAddedSongs();\n\t\t\t}\n\t\t\telse {\n\t\t\t\tconsoleLog( `Unrecognized playlist file: ${path}`, true );\n\t\t\t\tresolve( 0 );\n\t\t\t}\n\t\t}\n\t});\n}\n\n/**\n * Load preferences from localStorage\n */\nasync function loadPreferences() {\n\t// helper function\n\tconst parseDisabled = ( data, optionList ) => {\n\t\tif ( Array.isArray( data ) ) {\n\t\t\tdata.forEach( option => {\n\t\t\t\t// if `option` is not an object, `disabled` is inferred true - for compatibility with legacy versions\n\t\t\t\tconst { value, disabled } = typeof option == 'object' ? option : { value: option, disabled: true } ;\n\t\t\t\tconst opt = Array.isArray( optionList ) ? optionList.find( item => item.value == value ) : optionList[ value ];\n\t\t\t\tif ( opt )\n\t\t\t\t\topt.disabled = disabled;\n\t\t\t});\n\t\t}\n\t}\n\n\tconst lastConfig    = await loadFromStorage( KEY_LAST_CONFIG ),\n\t \t  isLastSession = lastConfig !== null;\n\n\t// Merge defaults with the last session settings (if any)\n\tsetPreset( 'last', { ...getPreset('default'), ...lastConfig } );\n\n\t// Load user presets\n\tuserPresets = await loadFromStorage( KEY_CUSTOM_PRESET ) || [];\n\tif ( ! Array.isArray( userPresets ) )\n\t\tuserPresets = [ { name: 'Custom', options: userPresets } ]; // convert old custom preset (version <= 21.11)\n\tfor ( let i = 0; i < 9; i++ ) {\n\t\tif ( userPresets[ i ] === undefined )\n\t\t\tuserPresets[ i ] = {};\n\t\telse if ( ! isEmpty( userPresets[ i ] ) && ! userPresets[ i ].options ) // make sure 'options' exists\n\t\t\tuserPresets[ i ] = { options: userPresets[ i ] };\n\t}\n\n\t// Load disabled modes preference\n\tparseDisabled( await loadFromStorage( KEY_DISABLED_MODES ), modeOptions );\n\n\t// Load disabled background image fit options\n\tparseDisabled( await loadFromStorage( KEY_DISABLED_BGFIT ), bgFitOptions );\n\n\t// Load custom gradients\n\tconst customGradients = await loadFromStorage( KEY_CUSTOM_GRADS );\n\tif ( customGradients ) {\n\t\tObject.keys( customGradients ).forEach( key => {\n\t\t\tgradients[ key ] = customGradients[ key ];\n\t\t});\n\t}\n\n\t// Load disabled gradients preference\n\tparseDisabled( await loadFromStorage( KEY_DISABLED_GRADS ), gradients );\n\n\t// Load disabled random properties preference\n\tparseDisabled( await loadFromStorage( KEY_DISABLED_PROPS ), randomProperties );\n\n\t// Sensitivity presets\n\tconst elMinSens = $$('.min-db');\n\telMinSens.forEach( el => setRangeAtts( el, -120, -60 ) );\n\n\tconst elMaxSens = $$('.max-db');\n\telMaxSens.forEach( el => setRangeAtts( el, -50, 0 ) );\n\n\tconst elLinearBoost = $$('.linear-boost');\n\telLinearBoost.forEach( el => setRangeAtts( el, 1, 5, .2 ) );\n\n\tconst sensitivityPresets = await loadFromStorage( KEY_SENSITIVITY ) || sensitivityDefaults;\n\n\tsensitivityPresets.forEach( ( preset, index ) => {\n\t\telMinSens[ index ].value = preset.min;\n\t\telMaxSens[ index ].value = preset.max;\n\t\telLinearBoost[ index ].value = preset.boost || sensitivityDefaults[ index ].boost;\n\t});\n\n\t// On-screen display options - merge saved options (if any) with the defaults and set UI fields\n\tsetInfoOptions( { ...infoDisplayDefaults, ...( await loadFromStorage( KEY_DISPLAY_OPTS ) || {} ) } );\n\n\t// General settings\n\tfor ( let i = 10; i < 16; i++ )\n\t\telFFTsize[ elFFTsize.options.length ] = new Option( 2**i );\n\n\tsetRangeAtts( elSmoothing, 0, .9, .1 );\n\n\tpopulateSelect( elPIPRatio, pipRatioOptions );\n\n\tsetRangeAtts( elFsHeight, 25, 100, 5 );\n\n\tpopulateSelect( elMaxFPS, maxFpsOptions );\n\n\tsetGeneralOptions( { ...generalOptionsDefaults, ...( await loadFromStorage( KEY_GENERAL_OPTS ) || {} ) } );\n\n\treturn isLastSession;\n}\n\n/**\n * Load a configuration preset\n *\n * @param {string|number} desired built-in preset key or user preset index\n * @param [{boolean}] true to display console message and on-screen alert after loading (default)\n * @param [{boolean}] true to use default values for missing properties\n * @param [{boolean}] true to keep Randomize setting unchanged\n */\nfunction loadPreset( key, alert = true, init, keepRandomize ) {\n\n\tconst isUserPreset = ( +key == key ),\n\t\t  thisPreset   = isUserPreset ? userPresets[ key ].options : getPreset( key ),\n\t\t  defaults     = getPreset('default');\n\n\tif ( isEmpty( thisPreset ) ) // invalid or empty preset\n\t\treturn;\n\n\tif ( alert )\n\t\tconsoleLog( `Loading ${ isUserPreset ? 'User Preset #' + ( key + 1 ) : \"'\" + getPresetName( key ) + \"' preset\" }` );\n\n\tif ( thisPreset.stereo !== undefined ) // convert legacy 'stereo' option to 'channelLayout'\n\t\tthisPreset.channelLayout = channelLayoutOptions[ +thisPreset.stereo ][0];\n\n\t$$('[data-prop]').forEach( el => {\n\t\tconst prop = el.dataset.prop,\n\t\t\t  val  = thisPreset[ prop ] !== undefined ? thisPreset[ prop ] : init ? defaults[ prop ] : undefined;\n\n\t\tif ( val !== undefined && ( el != elRandomMode || ! keepRandomize ) ) {\n\t\t\tif ( isCustomRadio( el ) ) {\n\t\t\t\t// note: el.elements[ prop ].value = val won't work for empty string value\n\t\t\t\tconst option = el.querySelector(`[value=\"${val}\"]`);\n\t\t\t\tif ( option )\n\t\t\t\t\toption.checked = true;\n\t\t\t}\n\t\t\telse if ( el.classList.contains('switch') )\n\t\t\t\tel.dataset.active = +val;\n\t\t\telse if ( el == elVolume )\n\t\t\t\tsetVolume( val );\n\t\t\telse if ( el == elBalance )\n\t\t\t\tsetBalance( val );\n\t\t\telse {\n\t\t\t\tel.value = val;\n\t\t\t\tif ( el.selectedIndex == -1 ) // fix invalid values in select elements\n\t\t\t\t\tel.selectedIndex = 0;\n\t\t\t\tupdateRangeValue( el );\n\t\t\t}\n\t\t}\n\t});\n\n\taudioMotion.setOptions( {\n\t\talphaBars      : isSwitchOn( elAlphaBars ),\n\t\tansiBands      : isSwitchOn( elAnsiBands ),\n\t\tcolorMode      : getControlValue( elColorMode ),\n\t\tfftSize        : getControlValue( elFFTsize ),\n\t\tfrequencyScale : getControlValue( elFreqScale ),\n\t\tledBars        : isSwitchOn( elLedDisplay ),\n\t\tlinearAmplitude: isSwitchOn( elLinearAmpl ),\n\t\tloRes          : isSwitchOn( elLoRes ),\n\t\tlumiBars       : isSwitchOn( elLumiBars ),\n\t\tmaxFPS         : getControlValue( elMaxFPS ),\n\t\tmaxFreq        : getControlValue( elRangeMax ),\n\t\tminFreq        : getControlValue( elRangeMin ),\n\t\tmirror         : getControlValue( elMirror ),\n\t\tnoteLabels     : isSwitchOn( elNoteLabels ),\n\t\toutlineBars    : isSwitchOn( elOutline ),\n\t\tradial         : isSwitchOn( elRadial ),\n\t\troundBars      : isSwitchOn( elRoundBars ),\n\t\tshowFPS        : isSwitchOn( elFPS ),\n\t\tshowPeaks      : isSwitchOn( elShowPeaks ),\n\t\tshowScaleX     : isSwitchOn( elScaleX ),\n\t\tshowScaleY     : isSwitchOn( elScaleY ),\n\t\tsmoothing      : getControlValue( elSmoothing ),\n\t\tspinSpeed      : getControlValue( elSpin ),\n\t\tsplitGradient  : isSwitchOn( elSplitGrad ),\n\t\tweightingFilter: getControlValue( elWeighting )\n\t} );\n\n\t// settings that affect other properties are set by the setProperty() function\n\tsetProperty(\n\t\t[ elBackground,\n\t\telBgImageFit,\n\t\telBgImageDim,\n\t\telChnLayout,\n\t\telFsHeight,\n\t\telLinkGrads, // needs to be set before the gradients\n\t\telSensitivity,\n\t\telReflex,\n\t\telGradient,\n\t\telGradientRight,\n\t\t...( keepRandomize ? [] : [ elRandomMode ] ),\n\t\telBarSpace,\n\t\telMode ]\n\t);\n\n\tif ( key == 'demo' )\n\t\trandomizeSettings( true );\n\n\tif ( alert )\n\t\tnotie.alert({ text: 'Settings loaded!' });\n}\n\n/**\n * Load playlists from localStorage and legacy playlists.cfg file\n */\nasync function loadSavedPlaylists( keyName ) {\n\n\t// reset UI playlist selection box\n\n\tdeleteChildren( elPlaylists );\n\n\tconst item = new Option( 'Select a playlist', '' );\n\titem.disabled = true;\n\titem.selected = true;\n\telPlaylists.options[ elPlaylists.options.length ] = item;\n\n\t// load playlists from localStorage\n\n\tconst playlists = await getStoredPlaylists();\n\n\tif ( playlists ) {\n\t\tObject.keys( playlists ).forEach( key => {\n\t\t\tconst item = new Option( playlists[ key ], key );\n\t\t\titem.dataset.isLocal = '1';\n\t\t\tif ( key == keyName )\n\t\t\t\titem.selected = true;\n\t\t\telPlaylists.options[ elPlaylists.options.length ] = item;\n\t\t});\n\t}\n\n\t// try to load legacy playlists.cfg file\n\n\tfetch( 'playlists.cfg' )\n\t\t.then( response => {\n\t\t\tif ( response.status == 200 ) {\n\t\t\t\tconsoleLog( 'Found legacy playlists.cfg file' );\n\t\t\t\treturn response.text();\n\t\t\t}\n\t\t\telse\n\t\t\t\treturn false;\n\t\t})\n\t\t.then( content => {\n\t\t\tif ( content !== false ) {\n\t\t\t\tlet n = 0;\n\t\t\t\tcontent.split(/[\\r\\n]+/).forEach( line => {\n\t\t\t\t\tif ( line.charAt(0) != '#' && line.trim() != '' ) { // not a comment or blank line?\n\t\t\t\t\t\tlet info = line.split(/\\|/);\n\t\t\t\t\t\tif ( info.length == 2 ) {\n\t\t\t\t\t\t\telPlaylists.options[ elPlaylists.options.length ] = new Option( info[0].trim(), info[1].trim() );\n\t\t\t\t\t\t\tn++;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tif ( n )\n\t\t\t\t\tconsoleLog( `${n} playlists loaded from playlists.cfg` );\n\t\t\t\telse\n\t\t\t\t\tconsoleLog( 'No playlists found in playlists.cfg', true );\n\t\t\t}\n\t\t})\n\t\t.catch( e => {} );\n}\n\n/**\n * Load a song into the currently active audio element\n */\nfunction loadSong( n, playIt ) {\n\treturn new Promise( async resolve => {\n\t\tconst audioEl = audioElement[ currAudio ];\n\t\tconst finish = () => {\n\t\t\tupdatePlaylistUI();\n\t\t\tloadNextSong();\n\t\t\tresolve( true );\n\t\t}\n\n\t\tif ( playlist.children[ n ] ) {\n\t\t\tplaylistPos = n;\n\t\t\tconst song = playlist.children[ playlistPos ];\n\t\t\taddMetadata( song, audioEl );\n\n\t\t\tif ( song.handle ) {\n\t\t\t\tawait song.handle.requestPermission();\n\t\t\t\tsong.handle.getFile()\n\t\t\t\t\t.then( fileBlob => loadFileBlob( fileBlob, audioEl, playIt ) )\n\t\t\t\t\t.then( () => finish() );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tloadAudioSource( audioEl, song.dataset.file );\n\t\t\t\taudioEl.onloadeddata = () => {\n\t\t\t\t\tif ( playIt )\n\t\t\t\t\t\taudioEl.play();\n\t\t\t\t\tfinish();\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\t\telse\n\t\t\tresolve( false );\n\t});\n}\n\n/**\n * Copy the gradient of given key into currentGradient, and render the gradient editor.\n */\nfunction openGradientEdit(key) {\n\tloadGradientIntoCurrentGradient(key);\n\trenderGradientEditor();\n\t$('#btn-save-gradient').innerText = 'Save';\n\t$('#btn-delete-gradient').style.display = 'block';\n\tlocation.href = '/#gradient-editor';\n}\n\n/**\n * Build a new gradient, set it as the current gradient, then render the gradient editor.\n */\nfunction openGradientEditorNew() {\n\tcurrentGradient = {\n\t\tname: 'New Gradient',\n\t\tbgColor: '#111111',\n\t\tcolorStops: [\n\t\t\t{ pos: .1, color: '#222222' },\n\t\t\t{ pos: 1, color: '#eeeeee' }\n\t\t],\n\t\tdisabled: false,\n\t\tkey: 'custom-gradient-1'  // using this to keep track of the key of the gradient object in the gradient list\n\t};\n\n\t// To prevent accidental overwriting of gradients and to allow duplicate names, a unique internal key is chosen\n\t// instead of simply using the name the user chooses for the new gradient.\n\n\t// find unique key for new gradient\n\tlet modifier = 2;\n\twhile (Object.keys(gradients).some(key => key === currentGradient.key) && modifier < 10) {\n\t\tcurrentGradient.key = `custom-gradient-${modifier}`;\n\t\tmodifier++;\n\t}\n\n\trenderGradientEditor();\n\t$('#btn-save-gradient').innerText = 'Add';\n\t$('#btn-delete-gradient').style.display = 'none'; // don't show delete button while editing a new gradient\n\n\tlocation.href = '/#gradient-editor';\n}\n\n/**\n * Play next song on queue\n */\nfunction playNextSong( play ) {\n\n\tif ( skipping || isMicSource || playlistPos > queueLength() - 1 )\n\t\treturn true;\n\n\tskipping = true;\n\n\tif ( playlistPos < queueLength() - 1 )\n\t\tplaylistPos++;\n\telse if ( isSwitchOn( elRepeat ) )\n\t\tplaylistPos = 0;\n\telse {\n\t\tskipping = false;\n\t\treturn false;\n\t}\n\n\tplay |= isPlaying();\n\n\tcurrAudio = nextAudio;\n\tnextAudio = ! currAudio | 0;\n\tsetCurrentCover();\n\n\tif ( play ) {\n\t\taudioElement[ currAudio ].play()\n\t\t.then( () => loadNextSong() )\n\t\t.catch( err => {\n\t\t\t// ignore AbortError when play promise is interrupted by a new load request or call to pause()\n\t\t\tif ( err.code != ERR_ABORT ) {\n\t\t\t\tconsoleLog( err, true );\n\t\t\t\tloadNextSong();\n\t\t\t\tplayNextSong( true );\n\t\t\t}\n\t\t});\n\t}\n\telse\n\t\tloadNextSong();\n\n\tupdatePlaylistUI();\n\treturn true;\n}\n\n/**\n * Player play/pause control\n */\nfunction playPause( play ) {\n\tif ( isMicSource )\n\t\treturn;\n\tif ( isPlaying() && ! play ) {\n\t\taudioElement[ currAudio ].pause();\n\t\tif ( isPIP() )\n\t\t\tpipVideo.pause();\n\t}\n\telse\n\t\taudioElement[ currAudio ].play().catch( err => {\n\t\t\t// ignore AbortError when play promise is interrupted by a new load request or call to pause()\n\t\t\tif ( err.code != ERR_ABORT ) {\n\t\t\t\tconsoleLog( err, true )\n\t\t\t\tplayNextSong( true );\n\t\t\t}\n\t\t});\n}\n\n/**\n * Play previous song on queue\n */\nfunction playPreviousSong() {\n\tlet ret = true;\n\n\tif ( isPlaying() ) {\n\t\tif ( audioElement[ currAudio ].currentTime > 2 )\n\t\t\taudioElement[ currAudio ].currentTime = 0;\n\t\telse if ( playlistPos > 0 )\n\t\t\tplaySong( playlistPos - 1 );\n\t\telse\n\t\t\tret = false;\n\t}\n\telse\n\t\tret = loadSong( playlistPos - 1 );\n\n\treturn ret;\n}\n\n/**\n * Play a song from the play queue\n */\nfunction playSong( n ) {\n\tloadSong( n, true );\n}\n\n/**\n * Populate a custom radio buttons element\n *\n * @param element {object}\n * @param options {array} arrays [ value, text ] or objects { value, text, disabled }\n */\nfunction populateCustomRadio( element, options ) {\n\tconst isObject = ! Array.isArray( options[0] );\n\tfor ( const item of ( isObject ? options.filter( i => ! i.disabled ) : options ) ) {\n\t\tconst name = element.dataset.prop,\n\t\t\t  text = item.text || item[1],\n\t\t\t  val  = item.value || item[0],\n\t\t\t  id   = name + '-' + val,\n\t\t \t  button = document.createElement('input'),\n\t\t \t  label = document.createElement('label');\n\n\t\tbutton.name  = name;\n\t\tbutton.id    = id;\n\t\tbutton.type  = 'radio';\n\t\tbutton.value = val;\n\n\t\tlabel.htmlFor = id;\n\t\tlabel.innerText = text;\n\n\t\telement.append( button, label );\n\t}\n}\n\n/**\n * Build checkboxes in #config that enables gradients in the combo box of the settings panel\n */\nfunction populateEnabledGradients() {\n\t// Enabled gradients\n\tconst elEnabledGradients = $('#enabled_gradients');\n\n\t// reset\n\tdeleteChildren(elEnabledGradients);\n\n\tObject.keys( gradients ).forEach( key => {\n\t\t// only set up link for editing if this is a custom gradient\n\t\tif (key.startsWith('custom')) {\n\t\t\telEnabledGradients.innerHTML +=\n\t\t\t\t`<label>\n\t\t\t       <input type=\"checkbox\" class=\"enabledGradient\" data-grad=\"${key}\" ${gradients[ key ].disabled ? '' : 'checked'}>\n                   <a href=\"#\" data-grad=\"${key}\" class=\"grad-edit-link\">${gradients[ key ].name}</a>\n                </label>`;\n\t\t} else {\n\t\t\telEnabledGradients.innerHTML +=\n\t\t\t\t`<label>\n\t\t\t       <input type=\"checkbox\" class=\"enabledGradient\" data-grad=\"${key}\" ${gradients[key].disabled ? '' : 'checked'}>\n                   ${gradients[key].name}\n                </label>`;\n\t\t}\n\t});\n\n\t$$('.enabledGradient').forEach( el => {\n\t\tel.addEventListener( 'click', event => {\n\t\t\tif ( ! el.checked ) {\n\t\t\t\tconst count = Object.keys( gradients ).reduce( ( acc, val ) => acc + ! gradients[ val ].disabled, 0 );\n\t\t\t\tif ( count < 2 ) {\n\t\t\t\t\tnotie.alert({ text: 'At least one Gradient must be enabled!' });\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\tgradients[ el.dataset.grad ].disabled = ! el.checked;\n\t\t\tpopulateGradients();\n\t\t\tsavePreferences(KEY_DISABLED_GRADS);\n\t\t});\n\t});\n\n\t$$('.grad-edit-link').forEach( el => {\n\t\tel.addEventListener('click', event => {\n\t\t\tevent.preventDefault();\n\t\t\tconst key = event.target.getAttribute(\"data-grad\");\n\t\t\topenGradientEdit(key);\n\t\t})\n\t})\n}\n\n/**\n * Populate UI gradient selection combo box\n */\nfunction populateGradients() {\n\tfor ( const el of [ elGradient, elGradientRight ] ) {\n\t\tlet grad = el.value;\n\t\tdeleteChildren( el );\n\n\t\t// add the option to the html select element for the user interface\n\t\tfor ( const key of Object.keys( gradients ) ) {\n\t\t\tif ( ! gradients[ key ].disabled )\n\t\t\t\tel.options[ el.options.length ] = new Option( gradients[ key ].name, key );\n\t\t}\n\n\t\tif ( grad !== '' ) {\n\t\t\tel.value = grad;\n\t\t\tsetProperty( el );\n\t\t}\n\t}\n}\n\n/**\n * Populate a select element\n *\n * @param element {object}\n * @param options {array} arrays [ value, text ] or objects { value, text, disabled }\n * @param keep {boolean}  whether to keep existing content\n */\nfunction populateSelect( element, options, keep ) {\n\tconst oldValue = element.value,\n\t\t  isObject = ! Array.isArray( options[0] );\n\n\tif ( ! keep )\n\t\tdeleteChildren( element );\n\n\tfor ( const item of ( isObject ? options.filter( i => ! i.disabled ) : options ) ) {\n\t\tconst option = new Option( item.text || item[1], item.value || item[0] );\n\t\tif ( item[0] === null )\n\t\t\toption.disabled = true;\n\t\telement[ element.options.length ] = option;\n\t}\n\n\tif ( oldValue !== '' ) {\n\t\telement.value = oldValue;\n\t\tif ( element.selectedIndex == -1 ) // old value disabled\n\t\t\telement.selectedIndex = 0;\n\t\tsetProperty( element );\n\t}\n}\n\n/**\n * Choose random settings\n *\n * @param [force] {boolean} force change even when not playing\n *                (default true for microphone input, false otherwise )\n */\nfunction randomizeSettings( force = isMicSource ) {\n\tif ( ! isPlaying() && ! force )\n\t\treturn;\n\n\t// helper functions\n\tconst isEnabled = prop => ! randomProperties.find( item => item.value == prop ).disabled;\n\n\tconst randomizeControl = ( el, push = true, validate = () => true ) => {\n\t\tlet attempts = 9; // avoid an infinite loop just in case validation is never satisfied\n\t\tdo {\n\t\t\tif ( isCustomRadio( el ) ) {\n\t\t\t\t// custom radio buttons\n\t\t\t\tconst items = el.elements[ el.dataset.prop ];\n\t\t\t\titems[ randomInt( items.length ) ].checked = true;\n\t\t\t}\n\t\t\telse if ( el.dataset.active !== undefined ) // on/off switches\n\t\t\t\tel.dataset.active = randomInt();\n\t\t\telse if ( el.step ) {\n\t\t\t\t// range inputs\n\t\t\t\tconst { min, max, step } = el, // note: these come as strings\n\t\t\t\t\t  range = ( max - min ) / step,\n\t\t\t\t\t  newVal = randomInt( range + 1 ) * step + +min; // coerce min to number\n\n\t\t\t\tel.value = ( newVal * 10 | 0 ) / 10; // fix rounding errors (1 decimal place)\n\t\t\t\tupdateRangeValue( el );\n\t\t\t}\n\t\t\telse // selects\n\t\t\t\tel.selectedIndex = randomInt( el.options.length );\n\t\t} while ( ! validate( getControlValue( el ) ) && attempts-- );\n\n\t\tif ( push )\n\t\t\tprops.push( el );\n\t}\n\n\tlet props = []; // properties that need to be updated\n\n\tif ( isEnabled( RND_PRESETS ) ) {\n\t\tconst validIndexes = userPresets.map( ( item, index ) => isEmpty( item ) ? null : index ).filter( item => item !== null ),\n\t\t\t  count = validIndexes.length;\n\t\tif ( count )\n\t\t\tloadPreset( validIndexes[ randomInt( count ) ], false, false, true );\n\t}\n\n\tif ( isEnabled( RND_MODE ) )\n\t\trandomizeControl( elMode );\n\n\tif ( isEnabled( RND_ALPHA ) )\n\t\trandomizeControl( elAlphaBars );\n\n\tif ( isEnabled( RND_BACKGROUND ) )\n\t\trandomizeControl( elBackground, false );\n\n\tif ( isEnabled( RND_BGIMAGEFIT ) )\n\t\trandomizeControl( elBgImageFit );\n\n\tif ( isEnabled( RND_CHNLAYOUT ) )\n\t\trandomizeControl( elChnLayout, true, newVal => newVal != CHANNEL_COMBINED ); // remove dual-combined from randomize\n\n\tif ( isEnabled( RND_COLORMODE ) )\n\t\trandomizeControl( elColorMode );\n\n\tif ( isEnabled( RND_PEAKS ) )\n\t\trandomizeControl( elShowPeaks );\n\n\tif ( isEnabled( RND_LEDS ) )\n\t\trandomizeControl( elLedDisplay );\n\n\tif ( isEnabled( RND_LUMI ) )\n\t\trandomizeControl( elLumiBars, true, newVal => ! newVal || elBackground.value[0] <= 1 || ! isSwitchOn( elLedDisplay ) ); // no LUMI when LEDs are on and background is image or video\n\n\tif ( isEnabled( RND_LINEWIDTH ) )\n\t\trandomizeControl( elLineWidth, false );\n\n\tif ( isEnabled( RND_FILLOPACITY ) )\n\t\trandomizeControl( elFillAlpha, false );\n\n\tif ( isEnabled( RND_BARSPACING ) )\n\t\trandomizeControl( elBarSpace, false );\n\n\tif ( isEnabled( RND_OUTLINE ) )\n\t\trandomizeControl( elOutline );\n\n\tif ( isEnabled( RND_REFLEX ) )\n\t\trandomizeControl( elReflex, false, newVal => newVal != REFLEX_FULL || ! isSwitchOn( elLedDisplay ) ); // no full reflex with LEDs\n\n\tif ( isEnabled( RND_RADIAL ) )\n\t\trandomizeControl( elRadial );\n\n\tif ( isEnabled( RND_ROUND ) )\n\t\trandomizeControl( elRoundBars );\n\n\tif ( isEnabled( RND_SPIN ) )\n\t\trandomizeControl( elSpin );\n\n\tif ( isEnabled( RND_SPLIT ) )\n\t\trandomizeControl( elSplitGrad );\n\n\tif ( isEnabled( RND_MIRROR ) )\n\t\trandomizeControl( elMirror );\n\n\tif ( isEnabled( RND_GRADIENT ) ) {\n\t\tfor ( const el of [ elGradient, ...( isSwitchOn( elLinkGrads ) ? [] : [ elGradientRight ] ) ] )\n\t\t\trandomizeControl( el );\n\t}\n\n\t// add properties that depend on other settings (mode also sets barspace)\n\tprops.push( elBackground, elReflex, elMode );\n\n\t// effectively set the affected properties\n\tsetProperty( props );\n}\n\n/**\n * Remove a key from localStorage\n *\n * @param key {string}\n */\nfunction removeFromStorage( key ) {\n\tif ( isElectron )\n\t\telectron.api( 'storage-remove', key );\n\telse\n\t\tlocalStorage.removeItem( key );\n}\n\n/**\n * Renders #grad-color-table based upon values of currentGradient.\n */\nfunction renderGradientEditor() {\n\tif (currentGradient == null) throw new Error(\"Current gradient must be set before editing gradient\")\n\n\t// empty table\n\tconst table = $('#grad-color-table');\n\tdeleteChildren(table);\n\n\t// set name\n\t$('#new-gradient-name').value = currentGradient.name;\n\n\t// set horizontal\n\t$('#new-gradient-horizontal').checked = currentGradient.dir === 'h';\n\n\tconst tableLabels = $('#grad-row-label-template').cloneNode(true);\n\ttableLabels.removeAttribute(\"id\");\n\ttable.appendChild(tableLabels);\n\n\t// build row for each stop in the gradient\n\tcurrentGradient.colorStops.forEach((stop, i) => {\n\t\trenderColorRow(i, currentGradient.colorStops[i]);\n\t});\n\n\t$('#new-gradient-bkgd').value = currentGradient.bgColor;\n}\n\n/**\n * Render color stop row inside of the #grad-color-table, adding proper event listeners.\n */\nfunction renderColorRow(index, stop) {\n\tconst table = $('#grad-color-table');\n\n\tconst template = $('#grad-row-template').cloneNode(true);\n\tconst colorPicker = template.querySelector('.grad-color-picker');\n\tconst colorValue = template.querySelector('.grad-color-value');\n\tconst colorStop = template.querySelector('.grad-color-stop');\n\tconst addColorButton = template.querySelector('.grad-add-stop');\n\tconst removeColorButton = template.querySelector('.grad-remove-stop');\n\n\tcolorPicker.value = stop.color;\n\tcolorValue.value = stop.color;\n\tcolorStop.value = stop.pos;\n\n\tcolorPicker.addEventListener('input', (e) => {\n\t\tcolorValue.value = e.target.value;\n\t\tcurrentGradient.colorStops[index].color = colorPicker.value;\n\t});\n\n\tcolorValue.addEventListener('input', (e) => {\n\t\tcolorPicker.value = e.target.value;\n\t\tcurrentGradient.colorStops[index].color = colorPicker.value;\n\t});\n\n\tcolorStop.addEventListener('input', (e) => {\n\t\tcurrentGradient.colorStops[index].pos = parseFloat(e.target.value);\n\t});\n\n\taddColorButton.addEventListener('click', () => {\n\t\tconst idealColorPos = () => {\n\t\t\t// if this is the last color stop, set the second to last stop's position as the midpoint between the last\n\t\t\t// and the second to last, then return this stop's position\n\t\t\t// if not, return the midpoint between this and the next stop\n\t\t\tif (index === currentGradient.colorStops.length - 1) {\n\t\t\t\tconst lastPos = currentGradient.colorStops[currentGradient.colorStops.length - 1].pos\n\t\t\t\tcurrentGradient.colorStops[currentGradient.colorStops.length - 1].pos =\n\t\t\t\t\t(currentGradient.colorStops[currentGradient.colorStops.length - 2].pos + lastPos) / 2;\n\t\t\t\treturn lastPos;\n\t\t\t} else {\n\t\t\t\treturn (currentGradient.colorStops[index].pos + currentGradient.colorStops[index + 1].pos) / 2;\n\t\t\t}\n\t\t}\n\n\t\tcurrentGradient.colorStops.splice(index + 1, 0, {\n\t\t\tpos: idealColorPos(),\n\t\t\tcolor: '#111111',\n\t\t});\n\t\trenderGradientEditor();\n\t});\n\n\t// prevent from being able to delete stops if there are two stops\n\tif (currentGradient.colorStops.length === 2) {\n\t\tremoveColorButton.setAttribute('disabled', 'true');\n\t} else {\n\t\tremoveColorButton.addEventListener('click', () => {\n\t\t\tcurrentGradient.colorStops.splice(index, 1);\n\t\t\trenderGradientEditor();\n\t\t});\n\t}\n\n\ttemplate.removeAttribute(\"id\");\n\ttable.appendChild(template);\n}\n\n/**\n * Retrieve metadata for files in the play queue\n */\nasync function retrieveMetadata() {\n\t// leave when we already have enough concurrent requests pending\n\tif ( waitingMetadata >= MAX_METADATA_REQUESTS )\n\t\treturn;\n\n\t// find the first play queue item for which we haven't retrieved the metadata yet\n\tconst queueItem = Array.from( playlist.children ).find( el => el.dataset.retrieve );\n\n\tif ( queueItem ) {\n\n\t\tconst uri = queueItem.dataset.file;\n\n\t\tconst consumeMetadata = metadata => {\n\t\t\tif ( metadata ) {\n\t\t\t\taddMetadata( metadata, queueItem ); // add metadata to play queue item\n\t\t\t\tsyncMetadataToAudioElements( queueItem );\n\t\t\t\tif ( ! queueItem.handle && ! ( metadata.common.picture && metadata.common.picture.length ) ) {\n\t\t\t\t\tgetFolderCover( uri ).then( cover => {\n\t\t\t\t\t\tqueueItem.dataset.cover = cover;\n\t\t\t\t\t\tsyncMetadataToAudioElements( queueItem );\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tconst processNext = () => {\n\t\t\twaitingMetadata--;\n\t\t\tretrieveMetadata(); // call again to continue processing the queue\n\t\t}\n\n\t\twaitingMetadata++;\n\t\tdelete queueItem.dataset.retrieve;\n\n\t\tif ( queueItem.handle ) {\n\t\t\tawait queueItem.handle.requestPermission();\n\t\t\tqueueItem.handle.getFile()\n\t\t\t\t.then( fileBlob => {\n\t\t\t\t\tmm.parseBlob( fileBlob )\n\t\t\t\t\t\t.then( consumeMetadata )\n\t\t\t\t\t\t.catch( e => {} );\n\t\t\t\t})\n\t\t\t\t.catch( e => {} )\n\t\t\t\t.finally( processNext );\n\t\t}\n\t\telse {\n\t\t\tmm.fetchFromUrl( uri, { skipPostHeaders: true } )\n\t\t\t\t.then( consumeMetadata )\n\t\t\t\t.catch( e => {} )\n\t\t\t\t.finally( processNext );\n\t\t}\n\t}\n}\n\n/**\n * Release URL objects created for image blobs\n */\nfunction revokeBlobURL( item ) {\n\tconst cover = item.dataset.cover;\n\tif ( isBlob( cover ) )\n\t\tURL.revokeObjectURL( cover );\n}\n\n/**\n * Assign the gradient in the global gradients object, register in the analyzer, populate gradients in the config,\n * then close the panel.\n */\nfunction saveGradient() {\n\tif (currentGradient === null) return;\n\n\tgradients[currentGradient.key] = currentGradient;\n\taudioMotion.registerGradient(currentGradient.key, currentGradient);\n\tpopulateGradients();\n\tpopulateEnabledGradients();\n\tsavePreferences(KEY_CUSTOM_GRADS);\n\n\tcurrentGradient = null;\n\tlocation.href = '/#config';\n}\n\n/**\n * Save/update an existing playlist\n */\nfunction savePlaylist( index ) {\n\n\tif ( elPlaylists[ index ].value == '' )\n\t\tstorePlaylist();\n\telse if ( ! elPlaylists[ index ].dataset.isLocal )\n\t\tnotie.alert({ text: 'This is a server playlist which cannot be overwritten.<br>Click \"Save as...\" to create a new local playlist.', time: 5 });\n\telse\n\t\tnotie.confirm({ text: `Overwrite \"${elPlaylists[ index ].innerText}\" with the current play queue?`,\n\t\t\tsubmitText: 'Overwrite',\n\t\t\tsubmitCallback: () => {\n\t\t\t\tstorePlaylist( elPlaylists[ index ].value );\n\t\t\t},\n\t\t\tcancelCallback: () => {\n\t\t\t\tnotie.alert({ text: 'Canceled' });\n\t\t\t}\n\t\t});\n}\n\n/**\n * Save the playqueue to the filesystem\n * (Electron only)\n */\nfunction savePlayqueueToServer( path, update ) {\n\tif ( queueLength() == 0 ) {\n\t\tnotie.alert({ text: 'Queue is empty!' });\n\t\treturn;\n\t}\n\n\tif ( ! path ) {\n\t\tnotie.input({\n\t\t\ttext: 'Playlist will be saved to the current folder.<br>Enter filename:',\n\t\t\tsubmitText: 'Save',\n\t\t\tsubmitCallback: value => {\n\t\t\t\tif ( value ) {\n\t\t\t\t\tconst newPath = fileExplorer.makePath( value, true );\n\t\t\t\t\tsavePlayqueueToServer( newPath );\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t\tnotie.alert({ text: 'Canceled' });\n\t\t\t},\n\t\t\tcancelCallback: () => {\n\t\t\t\tnotie.alert({ text: 'Canceled' });\n\t\t\t}\n\t\t});\n\t\treturn;\n\t}\n\n\tconst contents = [];\n\n\tplaylist.childNodes.forEach( item => {\n\t\tconst { file, artist, title, duration } = item.dataset;\n\t\tcontents.push( { file: removeServerEncoding( file ), artist, title, duration } );\n\t});\n\n\tfetch( ROUTE_SAVE + path, {\n\t\tmethod: update ? 'PUT' : 'POST',\n\t\theaders: {\n\t\t\t'Content-Type': 'application/json'\n\t\t},\n\t\tbody: JSON.stringify( { contents } )\n\t})\n\t.then( response => response.status == 200 ? response.json() : { error: `Cannot save file (ERROR ${ response.status })` } )\n\t.then( ( { file, error } ) => {\n\t\tconst text = file ? `${ update ? 'Updated' : 'Saved as' } ${ parsePath( file ).fileName }` : error;\n\t\tnotie.alert({ text });\n\t\tsetLoadedPlaylist( file );\n\t\tfileExplorer.refresh();\n\t});\n}\n\n/**\n * Save Config Panel preferences to localStorage\n *\n * @param [key] {string} preference to save; if undefined save all preferences (default)\n */\nfunction savePreferences( key ) {\n\t// helper function\n\tconst getDisabledItems = items => items.map( ( { value, disabled } ) => ( { value, disabled } ) );\n\n\tif ( ! key || key == KEY_DISABLED_MODES )\n\t\tsaveToStorage( KEY_DISABLED_MODES, getDisabledItems( modeOptions ) );\n\n\tif ( ! key || key == KEY_DISABLED_BGFIT )\n\t\tsaveToStorage( KEY_DISABLED_BGFIT, getDisabledItems( bgFitOptions ) );\n\n\tif ( ! key || key == KEY_DISABLED_GRADS )\n\t\tsaveToStorage( KEY_DISABLED_GRADS, Object.keys( gradients ).map( key => ( { value: key, disabled: gradients[ key ].disabled } ) ) );\n\n\tif (! key || key == KEY_CUSTOM_GRADS) {\n\t\tconst customGradients = {};\n\t\tObject.keys(gradients)\n\t\t\t.filter(key => key.startsWith('custom'))\n\t\t\t.forEach(key => customGradients[key] = gradients[key]);\n\t\tsaveToStorage( KEY_CUSTOM_GRADS, customGradients);\n\t}\n\n\tif ( ! key || key == KEY_DISABLED_PROPS )\n\t\tsaveToStorage( KEY_DISABLED_PROPS, getDisabledItems( randomProperties ) );\n\n\tif ( ! key || key == KEY_SENSITIVITY ) {\n\t\tlet sensitivityPresets = [];\n\t\tfor ( const i of [0,1,2] ) {\n\t\t\tsensitivityPresets.push( {\n\t\t\t\tmin: $(`.min-db[data-preset=\"${i}\"]`).value,\n\t\t\t\tmax: $(`.max-db[data-preset=\"${i}\"]`).value,\n\t\t\t\tboost: $(`.linear-boost[data-preset=\"${i}\"]`).value\n\t\t\t});\n\t\t}\n\t\tsaveToStorage( KEY_SENSITIVITY, sensitivityPresets );\n\t}\n\n\tif ( ! key || key == KEY_DISPLAY_OPTS ) {\n\t\tconst displayOptions = {\n\t\t\tinfo  : elInfoTimeout.value,\n\t\t\ttrack : elTrackTimeout.value,\n\t\t\tend   : elEndTimeout.value,\n\t\t\tcovers: elShowCover.checked,\n\t\t\tcount : elShowCount.checked\n\t\t}\n\t\tsaveToStorage( KEY_DISPLAY_OPTS, displayOptions );\n\t}\n\n\tif ( ! key || key == KEY_GENERAL_OPTS ) {\n\t\tconst generalOptions = {\n\t\t\tfftSize  : elFFTsize.value,\n\t\t\tfsHeight : elFsHeight.value,\n\t\t\tmaxFPS   : elMaxFPS.value,\n\t\t\tpipRatio : elPIPRatio.value,\n\t\t\tsaveDir  : elSaveDir.checked,\n\t\t\tsmoothing: elSmoothing.value\n\t\t}\n\t\tsaveToStorage( KEY_GENERAL_OPTS, generalOptions );\n\t}\n}\n\n/**\n * Save an object to localStorage in JSON format\n *\n * @param {string} item key\n * @param {object} data object\n */\nfunction saveToStorage( key, data ) {\n\tconst value = JSON.stringify( data );\n\tif ( isElectron )\n\t\telectron.api( 'storage-set', key, value );\n\telse\n\t\tlocalStorage.setItem( key, value );\n}\n\n/**\n * Save or update a user preset\n *\n * @param {number} slot index (0-8)\n * @param {object} settings object\n * @param [{boolean}] force overwriting existing content\n */\nfunction saveUserPreset( index, options, name, force ) {\n\tconst userPresetText = `User Preset #${ index + 1 }`,\n\t\t  currentName    = userPresets[ index ].name || '', // avoid undefined\n\t\t  isFullscreen   = audioMotion.isFullscreen,\n\t\t  confirmTimeout = 5;\n\n\t// Show warning messages on attempt to overwrite existing preset\n\tif ( ! isEmpty( userPresets[ index ] ) && ! force && overwritePreset !== index ) {\n\t\tif ( isFullscreen ) {\n\t\t\tsetCanvasMsg( `Overwrite ${ userPresetText } - Press again to confirm!`, confirmTimeout );\n\t\t\toverwritePreset = index;\n\t\t\tsetTimeout( () => {\n\t\t\t\tif ( overwritePreset === index )\n\t\t\t\t\toverwritePreset = false;\n\t\t\t}, confirmTimeout * 1000 );\n\t\t}\n\t\telse {\n\t\t\tnotie.confirm({\n\t\t\t\ttext: `Do you really want to overwrite ${ userPresetText }?<br>${ currentName }`,\n\t\t\t\tsubmitText: 'Overwrite',\n\t\t\t\tsubmitCallback: () => {\tsaveUserPreset( index, options, name, true ); }, // force save\n\t\t\t\tcancelCallback: () => {\tnotie.alert({ text: 'Canceled!' }) }\n\t\t\t});\n\t\t}\n\t\treturn;\n\t}\n\n\toverwritePreset = false;\n\n\tif ( ! name || ! `${ name }`.trim() ) { // coerce to string, but check for falsy values first (avoid strings like 'undefined')\n\t\tif ( isFullscreen )\n\t\t\tname = '';\n\t\telse {\n\t\t\tnotie.input({\n\t\t\t\ttext: 'Give this preset a name or short description',\n\t\t\t\tsubmitText: 'Save',\n\t\t\t\tvalue: currentName,\n\t\t\t\tmaxlength: 40,\n\t\t\t\tsubmitCallback: newName => { saveUserPreset( index, options, newName.trim() || PRESET_NONAME, true ); },\n\t\t\t\tcancelCallback: () => {\tnotie.alert({ text: 'Save canceled!' }) }\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\t}\n\n\t// avoid saving the placeholder text\n\tif ( name == PRESET_NONAME )\n\t\tname = '';\n\n\t// Update presets array in memory and save updated contents to storage\n\tuserPresets[ index ] = { name, options };\n\tsaveToStorage( KEY_CUSTOM_PRESET, userPresets );\n\n\tconst text = `Saved to ${ userPresetText }`;\n\tif ( isFullscreen )\n\t\tsetCanvasMsg( text, 5 );\n\telse\n\t\tnotie.alert({ text });\n}\n\n/**\n * Schedule start of track fast search\n *\n * @param mode {string} 'm' for mouse, 'k' for keyboard\n * @param [dir] {number} 1 for FF, -1 for REW\n */\nfunction scheduleFastSearch( mode, dir = 1 ) {\n\t// set a 200ms timeout to start fast search (wait for 'click' or 'keyup' event)\n\tfastSearchTimeout = setTimeout( () => {\n\t\tisFastSearch = mode;\n\t\tfastSearch( dir );\n\t}, 200 );\n}\n\n/**\n * Set the background image CSS variable\n */\nfunction setBackgroundImage( url ) {\n\tdocument.documentElement.style.setProperty( '--background-image', url ? `url( ${ url.replace( /['()]/g, '\\\\$&' ) } )` : 'none' );\n}\n\n/**\n * Set balance\n */\nfunction setBalance( value ) {\n\telBalance.dataset.value = value;\n\tif ( panNode )\n\t\tpanNode.pan.value = Math.log10( 9 * Math.abs( value ) + 1 ) * Math.sign( value );\n\telBalance.querySelector('.marker').style.transform = `rotate( ${ 145 * value - 90 }deg )`;\n}\n\n/**\n * Set message for on-screen display\n *\n * @param msg {number|string} number indicates information level (0=none; 1=song info; 2=full info)\n *                            string provides a custom message to be displayed at the top\n * @param [timer] {number} time in seconds to display message (1/3rd of it will be used for fade in/out)\n * @param [dir] {number} 1 for fade-in; -1 for fade-out (default)\n */\nfunction setCanvasMsg( msg, timer = 2, dir = -1 ) {\n\tif ( ! msg )\n\t\tcanvasMsg = { endTime: 0, msgTimer: 0 }; // clear all canvas messages\n\telse {\n\t\tconst now = performance.now(),\n\t\t \t  targetTime = now + timer * 1000;\n\t\tif ( msg == +msg ) { // msg is a number\n\t\t\tcanvasMsg.info = msg; // set info level 1 or 2\n\t\t\tcanvasMsg.startTime = now;\n\t\t\tcanvasMsg.endTime = Math.max( targetTime, canvasMsg.endTime || 0 ); // note: Infinity | 0 == 0\n\t\t\tcanvasMsg.fade = ( timer == Infinity ) ? 0 : timer / 3 * dir;\n\t\t}\n\t\telse {\n\t\t\tcanvasMsg.msg = msg;  // set custom message\n\t\t\tif ( canvasMsg.info == 2 )\n\t\t\t\tcanvasMsg.info = 1;\n\t\t\tcanvasMsg.msgTimer = targetTime;\n\t\t}\n\t}\n}\n\n/**\n * Set the cover image for the current audio element\n */\nfunction setCurrentCover() {\n\tcoverImage.src = audioElement[ currAudio ].dataset.cover;\n\tif ( elBackground.value == BG_COVER )\n\t\tsetBackgroundImage( coverImage.src );\n}\n\n/**\n * Set general configuration options\n */\nfunction setGeneralOptions( options ) {\n\telFFTsize.value   = options.fftSize;\n\telFsHeight.value  = options.fsHeight;\n\telMaxFPS.value    = options.maxFPS;\n\telPIPRatio.value  = options.pipRatio;\n\telSaveDir.checked = options.saveDir;\n\telSmoothing.value = options.smoothing;\n}\n\n/**\n * Set on-screen display options UI fields\n */\nfunction setInfoOptions( options ) {\n\telInfoTimeout.value  = options.info;\n\telTrackTimeout.value = options.track;\n\telEndTimeout.value   = options.end;\n\telShowCover.checked  = options.covers;\n\telShowCount.checked  = options.count;\n}\n\n/**\n * Set / clear the currently loaded playlist (for Electron version)\n */\nfunction setLoadedPlaylist( path = '' ) {\n\tif ( isElectron ) {\n\t\tpath = removeServerEncoding( path );\n\t\telLoadedPlist.dataset.path = encodeSlashes( path );\n\t\telLoadedPlist.innerText = parsePath( path ).fileName;\n\t\telLoadedPlist.title = decodeSlashes( path, true ); // display native OS slashes (Windows)\n\t}\n}\n\n/**\n * Set audioMotion properties\n *\n * @param elems {object|array} a DOM element object or array of objects\n * @param [save] {boolean} true to save current settings to last used preset\n */\nfunction setProperty( elems, save = true ) {\n\tif ( ! Array.isArray( elems ) )\n\t\telems = [ elems ];\n\n\tconst toggleGradients = () => elGradientRight.style.display = ( getControlValue( elChnLayout ) == CHANNEL_SINGLE || isSwitchOn( elLinkGrads ) ) ? 'none' : '';\n\n\tfor ( const el of elems ) {\n\t\tswitch ( el ) {\n\t\t\tcase elAlphaBars:\n\t\t\t\taudioMotion.alphaBars = isSwitchOn( elAlphaBars );\n\t\t\t\tbreak;\n\n\t\t\tcase elAnsiBands:\n\t\t\t\taudioMotion.ansiBands = isSwitchOn( elAnsiBands );\n\t\t\t\tbreak;\n\n\t\t\tcase elBackground:\n\t\t\t\tconst bgOption  = elBackground.value[0],\n\t\t\t\t\t  isOverlay = bgOption != BG_DEFAULT && bgOption != BG_BLACK;\n\n\t\t\t\tlet filename = elBackground.value.slice(1);\n\n\t\t\t\taudioMotion.overlay = isOverlay;\n\t\t\t\taudioMotion.showBgColor = bgOption == BG_DEFAULT;\n\n\t\t\t\tif ( bgOption == BG_VIDEO ) {\n\t\t\t\t\tsetBackgroundImage(); // clear background image\n\t\t\t\t\telVideo.style.display = ''; // enable display of video layer\n\n\t\t\t\t\tif ( ! filename )\n\t\t\t\t\t\tfilename = bgVideos[ randomInt( bgVideos.length ) ]; // pick a new random video from the list\n\n\t\t\t\t\tif ( ! decodeURIComponent( elVideo.src ).endsWith( filename ) ) // avoid restarting the video if it's the same file already in use\n\t\t\t\t\t\telVideo.src = BG_DIRECTORY + '/' + encodeURIComponent( filename );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\telVideo.style.display = 'none'; // hide video layer\n\t\t\t\t\tif ( isOverlay ) {\n\t\t\t\t\t\tif ( bgOption == BG_IMAGE && ! filename )\n\t\t\t\t\t\t\tfilename = bgImages[ randomInt( bgImages.length ) ];\n\n\t\t\t\t\t\tif ( filename )\n\t\t\t\t\t\t\tfilename = BG_DIRECTORY + '/' + encodeURIComponent( filename );\n\n\t\t\t\t\t\tsetBackgroundImage( filename || coverImage.src );\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t\tsetBackgroundImage();\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\tcase elBgImageFit:\n\t\t\t\tconst bgFit  = elBgImageFit.value,\n\t\t\t\t\t  isWarp = bgFit == BGFIT_WARP || bgFit == BGFIT_WARP_ANI || bgFit == BGFIT_WARP_ROT;\n\t\t\t\telContainer.classList.toggle( 'repeat', bgFit == BGFIT_REPEAT );\n\t\t\t\telContainer.classList.toggle( 'cover', bgFit == BGFIT_ADJUST || isWarp );\n\t\t\t\telContainer.style.backgroundSize = '';\n\t\t\t\telWarp.style.display = isWarp ? '' : 'none';\n\t\t\t\telWarp.classList.toggle( 'rotating', bgFit == BGFIT_WARP_ROT );\n\t\t\t\telWarp.classList.toggle( 'paused', bgFit == BGFIT_WARP );\n\t\t\t\tbreak;\n\n\t\t\tcase elBgImageDim:\n\t\t\t\telDim.style.background = `rgba(0,0,0,${ 1 - elBgImageDim.value })`;\n\t\t\t\tbreak;\n\n\t\t\tcase elBarSpace:\n\t\t\t\taudioMotion.barSpace = audioMotion.isLumiBars ? 1.5 : getControlValue( elBarSpace );\n\t\t\t\tbreak;\n\n\t\t\tcase elChnLayout:\n\t\t\t\taudioMotion.channelLayout = getControlValue( elChnLayout );\n\t\t\t\ttoggleGradients();\n\t\t\t\tbreak;\n\n\t\t\tcase elColorMode:\n\t\t\t\taudioMotion.colorMode = getControlValue( elColorMode );\n\t\t\t\tbreak;\n\n\t\t\tcase elFillAlpha:\n\t\t\t\taudioMotion.fillAlpha = ( elMode.value == MODE_AREA ) ? 1 : elFillAlpha.value;\n\t\t\t\tbreak;\n\n\t\t\tcase elFFTsize :\n\t\t\t\taudioMotion.fftSize = elFFTsize.value;\n\t\t\t\tconsoleLog( 'FFT size is ' + audioMotion.fftSize + ' samples' );\n\t\t\t\tbreak;\n\n\t\t\tcase elFreqScale:\n\t\t\t\taudioMotion.frequencyScale = getControlValue( elFreqScale );\n\t\t\t\tbreak;\n\n\t\t\tcase elFsHeight:\n\t\t\t\telAnalyzer.style.height = `${elFsHeight.value}%`;\n\t\t\t\tbreak;\n\n\t\t\tcase elRangeMin:\n\t\t\tcase elRangeMax:\n\t\t\t\twhile ( +elRangeMax.value <= +elRangeMin.value )\n\t\t\t\t\telRangeMax.selectedIndex++;\n\t\t\t\taudioMotion.setFreqRange( elRangeMin.value, elRangeMax.value );\n\t\t\t\tbreak;\n\n\t\t\tcase elGradient:\n\t\t\tcase elGradientRight:\n\t\t\t\tif ( el.value === '' ) // handle invalid setting\n\t\t\t\t\tel.selectedIndex = 0;\n\t\t\t\tif ( isSwitchOn( elLinkGrads ) )\n\t\t\t\t\taudioMotion.gradient = elGradient.value = elGradientRight.value = el.value;\n\t\t\t\telse\n\t\t\t\t\taudioMotion[ el == elGradient ? 'gradientLeft' : 'gradientRight' ] = el.value;\n\t\t\t\tbreak;\n\n\t\t\tcase elLedDisplay:\n\t\t\t\taudioMotion.ledBars = isSwitchOn( elLedDisplay );\n\t\t\t\tbreak;\n\n\t\t\tcase elLinearAmpl:\n\t\t\t\taudioMotion.linearAmplitude = isSwitchOn( elLinearAmpl );\n\t\t\t\tbreak;\n\n\t\t\tcase elLineWidth:\n\t\t\t\taudioMotion.lineWidth = ( elMode.value == MODE_AREA ) ? 0 : elLineWidth.value;\n\t\t\t\tbreak;\n\n\t\t\tcase elLinkGrads:\n\t\t\t\ttoggleGradients();\n\t\t\t\tif ( isSwitchOn( elLinkGrads ) )\n\t\t\t\t\tsetProperty( elGradient, false );\n\t\t\t\tbreak;\n\n\t\t\tcase elLoRes:\n\t\t\t\taudioMotion.loRes = isSwitchOn( elLoRes );\n\t\t\t\tbreak;\n\n\t\t\tcase elLumiBars:\n\t\t\t\taudioMotion.lumiBars = isSwitchOn( elLumiBars );\n\t\t\t\tsetProperty( elBarSpace, false );\n\t\t\t\tbreak;\n\n\t\t\tcase elMaxFPS:\n\t\t\t\taudioMotion.maxFPS = elMaxFPS.value;\n\t\t\t\tbreak;\n\n\t\t\tcase elMode:\n\t\t\t\tconst mode = elMode.value;\n\t\t\t\tif ( ! [ MODE_AREA, MODE_LINE ].includes( mode ) )\n\t\t\t\t\taudioMotion.mode = mode;\n\t\t\t\telse\n\t\t\t\t\taudioMotion.mode = 10; // graph mode - for both \"Area\" and \"Line\"\n\n\t\t\t\tif ( mode == MODE_AREA ) {\n\t\t\t\t\taudioMotion.lineWidth = 0;\n\t\t\t\t\taudioMotion.fillAlpha = 1;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\taudioMotion.lineWidth = elLineWidth.value;\n\t\t\t\t\taudioMotion.fillAlpha = elFillAlpha.value;\n\t\t\t\t}\n\n\t\t\t\tsetProperty( elBarSpace, false );\n\t\t\t\tbreak;\n\n\t\t\tcase elMirror:\n\t\t\t\taudioMotion.mirror = getControlValue( elMirror );\n\t\t\t\tbreak;\n\n\t\t\tcase elNoteLabels:\n\t\t\t\taudioMotion.noteLabels = isSwitchOn( elNoteLabels );\n\t\t\t\tbreak;\n\n\t\t\tcase elOutline:\n\t\t\t\taudioMotion.outlineBars = isSwitchOn( elOutline );\n\t\t\t\tbreak;\n\n\t\t\tcase elPIPRatio:\n\t\t\t\tif ( isPIP() )\n\t\t\t\t\taudioMotion.width = audioMotion.height * elPIPRatio.value;\n\t\t\t\tbreak;\n\n\t\t\tcase elRadial:\n\t\t\t\taudioMotion.radial = isSwitchOn( elRadial );\n\t\t\t\tsetProperty( elBarSpace, false );\n\t\t\t\tbreak;\n\n\t\t\tcase elRandomMode:\n\t\t\t\tconst option = elRandomMode.value;\n\n\t\t\t\tif ( randomModeTimer )\n\t\t\t\t\trandomModeTimer = clearInterval( randomModeTimer );\n\n\t\t\t\tif ( option > 1 )\n\t\t\t\t\trandomModeTimer = setInterval( randomizeSettings, 2500 * option );\n\n\t\t\t\tbreak;\n\n\t\t\tcase elReflex:\n\t\t\t\tswitch ( getControlValue( elReflex ) ) {\n\t\t\t\t\tcase REFLEX_ON:\n\t\t\t\t\t\taudioMotion.reflexRatio = .4;\n\t\t\t\t\t\taudioMotion.reflexAlpha = .2;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase REFLEX_FULL:\n\t\t\t\t\t\taudioMotion.reflexRatio = .5;\n\t\t\t\t\t\taudioMotion.reflexAlpha = 1;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\taudioMotion.reflexRatio = 0;\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\tcase elRoundBars:\n\t\t\t\taudioMotion.roundBars = isSwitchOn( elRoundBars );\n\t\t\t\tbreak;\n\n\t\t\tcase elSaveDir :\n\t\t\t\tif ( elSaveDir.checked )\n\t\t\t\t\tsaveLastDir( fileExplorer.getPath() );\n\t\t\t\telse {\n\t\t\t\t\tdel( KEY_LAST_DIR ); // IndexedDB\n\t\t\t\t\tremoveFromStorage( KEY_LAST_DIR );\n\t\t\t\t}\n\n\t\t\tcase elScaleX:\n\t\t\t\taudioMotion.showScaleX = isSwitchOn( elScaleX );\n\t\t\t\tbreak;\n\n\t\t\tcase elScaleY:\n\t\t\t\taudioMotion.showScaleY = isSwitchOn( elScaleY );\n\t\t\t\tbreak;\n\n\t\t\tcase elSensitivity:\n\t\t\t\tconst sensitivity = getControlValue( elSensitivity );\n\t\t\t\taudioMotion.setSensitivity(\n\t\t\t\t\t$(`.min-db[data-preset=\"${sensitivity}\"]`).value,\n\t\t\t\t\t$(`.max-db[data-preset=\"${sensitivity}\"]`).value\n\t\t\t\t);\n\t\t\t\taudioMotion.linearBoost = $(`.linear-boost[data-preset=\"${sensitivity}\"]`).value;\n\t\t\t\tbreak;\n\n\t\t\tcase elFPS:\n\t\t\t\taudioMotion.showFPS = isSwitchOn( elFPS );\n\t\t\t\tbreak;\n\n\t\t\tcase elShowPeaks:\n\t\t\t\taudioMotion.showPeaks = isSwitchOn( elShowPeaks );\n\t\t\t\tbreak;\n\n\t\t\tcase elSmoothing:\n\t\t\t\taudioMotion.smoothing = elSmoothing.value;\n\t\t\t\tconsoleLog( 'smoothingTimeConstant is ' + audioMotion.smoothing );\n\t\t\t\tbreak;\n\n\t\t\tcase elSpin:\n\t\t\t\taudioMotion.spinSpeed = elSpin.value;\n\t\t\t\tbreak;\n\n\t\t\tcase elSplitGrad:\n\t\t\t\taudioMotion.splitGradient = isSwitchOn( elSplitGrad );\n\t\t\t\tbreak;\n\n\t\t\tcase elWeighting:\n\t\t\t\taudioMotion.weightingFilter = getControlValue( elWeighting );\n\t\t\t\tbreak;\n\n\t\t} // switch\n\n\t\tif ( save ) {\n\t\t\tif ( generalOptionsElements.includes( el ) )\n\t\t\t\tsavePreferences( KEY_GENERAL_OPTS );\n\t\t\telse\n\t\t\t\tupdateLastConfig();\n\t\t}\n\n\t} // for\n\n}\n\n/**\n * Change audio input source\n */\nasync function setSource() {\n\t// set global variable\n\tisMicSource = elSource.checked;\n\n\tif ( isMicSource ) {\n\t\t// try to get access to user's microphone\n\t\tconst hasPermission = isElectron ? await electron.api('ask-for-media-access') : true;\n\n\t\tif ( hasPermission && navigator.mediaDevices ) {\n\t\t\tnavigator.mediaDevices.getUserMedia( { audio: true } )\n\t\t\t.then( stream => {\n\t\t\t\tmicStream = audioMotion.audioCtx.createMediaStreamSource( stream );\n\t\t\t\tif ( isPlaying() )\n\t\t\t\t\taudioElement[ currAudio ].pause();\n\t\t\t\t// mute the output to avoid feedback loop from the microphone\n\t\t\t\twasMuted = elMute.checked;\n\t\t\t\ttoggleMute( true );\n\t\t\t\taudioMotion.connectInput( micStream );\n\t\t\t\tconsoleLog( 'Audio source set to microphone' );\n\t\t\t})\n\t\t\t.catch( err => {\n\t\t\t\tconsoleLog( `Could not change audio source - ${err}`, true );\n\t\t\t\telSource.checked = isMicSource = false;\n\t\t\t});\n\t\t}\n\t\telse {\n\t\t\tconsoleLog( 'Cannot access user microphone', true );\n\t\t\telSource.checked = isMicSource = false;\n\t\t}\n\t}\n\telse {\n\t\tif ( micStream ) {\n\t\t\taudioMotion.disconnectInput( micStream );\n\t\t\tmicStream.mediaStream.getTracks()[0].stop(); // stop (release) stream\n\t\t\tmicStream = null;\n\t\t\ttoggleMute( wasMuted );\n\t\t}\n\t\tconsoleLog( 'Audio source set to built-in player' );\n\t}\n\n}\n\n/**\n * Set volume\n */\nfunction setVolume( value ) {\n\telVolume.dataset.value = value;\n\taudioMotion.volume = value ** 2.5; // creates a more natural volume curve\n\telVolume.querySelector('.marker').style.transform = `rotate( ${ 125 + 290 * value }deg )`;\n}\n\n/**\n * Set event listeners for UI elements\n * NOTE: this is called only once during initialization\n */\nfunction setUIEventListeners() {\n\n\t// open/close settings panel\n\tconst elToggleSettings = $('#toggle_settings');\n\telToggleSettings.addEventListener( 'click', () => {\n\t\t$('#settings').classList.toggle('active', elToggleSettings.classList.toggle('active') );\n\t});\n\t$('.settings-close').addEventListener( 'click', () => elToggleSettings.click() );\n\n\t// open/close console\n\tconst elToggleConsole = $('#toggle_console');\n\telToggleConsole.addEventListener( 'click', () => {\n\t\t$('#console').classList.toggle( 'active', elToggleConsole.classList.toggle('active') );\n\t\telToggleConsole.classList.remove('warning');\n\t\tconsoleLog(); // update scroll only\n\t});\n\t$('#console-close').addEventListener( 'click', () => elToggleConsole.click() );\n\t$('#console-clear').addEventListener( 'click', () => consoleLog( 'Console cleared.', false, true ) );\n\n\t// settings switches\n\t$$('.switch').forEach( el => {\n\t\tel.addEventListener( 'click', () => {\n\t\t\tel.dataset.active = +!+el.dataset.active;\n\t\t\tsetProperty( el );\n\t\t});\n\t});\n\n\t// settings combo boxes and sliders ('change' event is only triggered for select and input elements)\n\t$$('[data-prop]').forEach( el => {\n\t\tif ( isCustomRadio( el ) ) {\n\t\t\tel.elements[ el.dataset.prop ].forEach( btn => {\n\t\t\t\tbtn.addEventListener( 'click', () => setProperty( el ) );\n\t\t\t});\n\t\t}\n\t\telse {\n\t\t\tel.addEventListener( 'change', () => {\n\t\t\t\tsetProperty( el );\n\t\t\t\tupdateRangeValue( el );\n\t\t\t});\n\t\t}\n\t});\n\n\t// audio source selection and speakers mute\n\telSource.addEventListener( 'change', setSource );\n\telMute.addEventListener( 'change', () => toggleMute() );\n\n\t// helper debounce function - thanks https://www.freecodecamp.org/news/javascript-debounce-example/\n\tconst debounce = ( func, timeout = 300 ) => {\n\t\tlet timer;\n\t\treturn ( ...args ) => {\n\t\t\tclearTimeout( timer );\n\t\t\ttimer = setTimeout( () => func.apply( this, args ), timeout );\n\t\t}\n\t}\n\n\t// volume and balance knobs\n\tlet wheelTimer;\n\t[ elVolume,\n\t  elBalance ].forEach( el => {\n\t  \tel.addEventListener( 'wheel', e => {\n\t\t\te.preventDefault(); // prevent scrolling the window\n\t\t\tif ( wheelTimer )\n\t\t\t\treturn;\n\t\t\twheelTimer = setTimeout( () => wheelTimer = false, 50 ); // 50ms delay for reduced mouse/touchpad sensitivity on Mac\n\t\t\tconst incr = Math.sign( e.deltaY || 0 );\n\t\t\tif ( el == elVolume )\n\t\t\t\tchangeVolume( incr );\n\t\t\telse\n\t\t\t\tchangeBalance( incr );\n\t\t});\n\t});\n\n\telBalance.addEventListener( 'dblclick', () => {\n\t\tchangeBalance(0);\n\t});\n\n\t// player controls\n\t$('#btn_play').addEventListener( 'click', () => playPause() );\n\t$('#btn_stop').addEventListener( 'click', stop );\n\t$('#btn_shuf').addEventListener( 'click', shufflePlayQueue );\n\n\t$('#btn_prev').addEventListener( 'mousedown', () =>\tscheduleFastSearch('m', -1) );\n\t$('#btn_prev').addEventListener( 'click', e => {\n\t\tif ( ! finishFastSearch() )\n\t\t\tskipTrack(true);\n\t});\n\n\t$('#btn_next').addEventListener( 'mousedown', () => scheduleFastSearch('m') );\n\t$('#btn_next').addEventListener( 'click', () => {\n\t\tif ( ! finishFastSearch() )\n\t\t\tskipTrack();\n\t});\n\n\t// action buttons\n\t$('#load_preset').addEventListener( 'click', () => {\n\t\tconst choices = [];\n\n\t\tpresets.forEach( item => {\n\t\t\tif ( ! isEmpty( item.options ) )\n\t\t\t\tchoices.push( { text: item.name + ( item.key == 'default' ? ' (warning: resets Volume!)' : '' ), handler: () => loadPreset( item.key ) } );\n\t\t});\n\n\t\tchoices.push({\n\t\t\ttext: '<strong>USER PRESETS →</strong>', handler: () => {\n\t\t\t\tconst userChoices = [];\n\t\t\t\tgetUserPresets().forEach( ( text, index ) => {\n\t\t\t\t\tuserChoices.push( { text, handler: () => loadPreset( index ) } );\n\t\t\t\t});\n\t\t\t\tnotie.select({\n\t\t\t\t\ttext: 'LOAD PRESET:',\n\t\t\t\t\tchoices: userChoices\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\tnotie.select({\n\t\t\ttext: 'LOAD PRESET:',\n\t\t\tchoices\n\t\t});\n\t});\n\n\t$('#btn_save').addEventListener( 'click', () => {\n\t\tconst choices = [];\n\t\tgetUserPresets().forEach( ( text, index ) => {\n\t\t\tconst options = userPresets[ index ].options;\n\t\t\tchoices.push(\n\t\t\t\t{ type: 1, text, handler: () => saveUserPreset( index, getCurrentSettings() ) },\n\t\t\t\t{ type: 2, text: isEmpty( options ) ? '' : '<button title=\"Edit name\">&#xf11f;</button>', handler: () => saveUserPreset( index, options, '', true ) },\n\t\t\t\t{ type: 2, text: isEmpty( options ) ? '' : '<button title=\"Delete preset\">&#xf120;</button>', handler: () => eraseUserPreset( index ) }\n\t\t\t);\n\t\t});\n\n\t\tnotie.select({\n\t\t\ttext: '<strong>Click slot to SAVE - Use buttons to Edit or Delete</strong>',\n\t\t\tchoices\n\t\t});\n\t});\n\n\t$('#btn_fullscreen').addEventListener( 'click', fullscreen );\n\n\t// playlist controls\n\n\t$('#save_playlist').addEventListener( 'click', () => {\n\t\tif ( isElectron ) {\n\t\t\tconst path = elLoadedPlist.dataset.path;\n\t\t\tif ( path ) {\n\t\t\t\tnotie.confirm({\n\t\t\t\t\ttext: `<strong>${ elLoadedPlist.innerText }</strong><br>will be overwritten with the current play queue<br>ARE YOU SURE?`,\n\t\t\t\t\tsubmitText: 'Overwrite',\n\t\t\t\t\tsubmitCallback: () => savePlayqueueToServer( path, true ),\n\t\t\t\t\tcancelCallback: () => notie.alert({ text: 'Canceled' }),\n\t\t\t\t});\n\t\t\t}\n\t\t\telse\n\t\t\t\tsavePlayqueueToServer();\n\t\t}\n\t\telse\n\t\t\tsavePlaylist( elPlaylists.selectedIndex );\n\t});\n\t$('#create_playlist').addEventListener( 'click', () => isElectron ? savePlayqueueToServer() : storePlaylist() );\n\t$('#btn_clear').addEventListener( 'click', () => {\n\t\tclearPlayQueue();\n\t\tsetLoadedPlaylist();\n\t});\n\n\t// hide unused playlist components depending on which server we're running\n\t( isElectron ? $('.playlist-bar') : elLoadedPlist ).style.display = 'none';\n\n\tif ( ! isElectron ) {\n\t\t$('#load_playlist').addEventListener( 'click', () => {\n\t\t\tloadPlaylist( { file: elPlaylists.value } ).then( n => {\n\t\t\t\tconst text = ( n == -1 ) ? 'No playlist selected' : `${n} song${ n > 1 ? 's' : '' } added to the queue`;\n\t\t\t\tnotie.alert({ text, time: 5 });\n\t\t\t});\n\t\t});\n\t\t$('#delete_playlist').addEventListener( 'click', () => deletePlaylist( elPlaylists.selectedIndex ) );\n\t}\n\n\t// clicks on canvas toggle info display on/off\n\telOSD.addEventListener( 'click', () => toggleInfo() );\n\n\t// use server/local music button\n\tconst btnToggleFS = $('#btn_toggle_filesystem');\n\n\tif ( ! hasServerMedia && ! useFileSystemAPI || ! supportsFileSystemAPI )\n\t\tbtnToggleFS.style.display = 'none';\n\telse {\n\t\tbtnToggleFS.innerText = 'Use ' + ( useFileSystemAPI ? 'server' : 'local' ) + ' music';\n\t\tbtnToggleFS.addEventListener( 'click', () => {\n\t\t\tsaveToStorage( KEY_FORCE_FS_API, ! useFileSystemAPI );\n\t\t\tlocation.href = URL_ORIGIN; // reload app (removes query string parameters)\n\t\t});\n\t}\n\n\t// add selected / all files buttons\n\tconst btnAddSelected = $('#btn_add_selected'),\n\t\t  btnAddFolder   = $('#btn_add_folder');\n\n\tif ( isElectron || hasServerMedia || useFileSystemAPI ) {\n\t\tbtnAddSelected.addEventListener( 'mousedown', () => addBatchToPlayQueue( fileExplorer.getFolderContents('.selected') ) );\n\t\tbtnAddFolder.addEventListener( 'click', () => addBatchToPlayQueue( fileExplorer.getFolderContents() ) );\n\t}\n\telse {\n\t\tbtnAddSelected.style.display = 'none';\n\t\tbtnAddFolder.style.display = 'none';\n\t}\n\n\t// local file upload - disabled on Electron app or when the File System API is supported\n\tconst uploadBtn = $('#local_file');\n\tif ( isElectron || supportsFileSystemAPI )\n\t\tuploadBtn.parentElement.style.display = 'none';\n\telse\n\t\tuploadBtn.addEventListener( 'change', e => loadLocalFile( e.target ) );\n\n\t// load remote files from URL\n\t$('#btn_load_url').addEventListener( 'click', () => {\n\t\tnotie.input({\n\t\t\ttext: 'Load audio file or stream from URL',\n\t\t\tsubmitText: 'Load',\n\t\t\tsubmitCallback: url => { if ( url.trim() ) addToPlayQueue( { file: url }, true ) }\n\t\t});\n\t});\n\n\t// Picture-In-Picture functionality\n\tlet canvasTrack, pipWindow;\n\n\tconst pipButton = $('#btn_pip');\n\tif ( document.pictureInPictureEnabled ) {\n\t\tpipButton.addEventListener( 'click', async () => {\n\t\t\tif ( pipVideo !== document.pictureInPictureElement ) {\n\t\t\t\tconst canvasStream = audioMotion.canvas.captureStream();\n\t\t\t\tcanvasTrack = canvasStream.getTracks()[0];\n\t\t\t\tpipVideo.muted = true;\n\t\t\t\tpipVideo.srcObject = canvasStream;\n\t\t\t\tawait pipVideo.play();\n\t\t\t\tpipVideo.requestPictureInPicture();\n\t\t\t}\n\t\t\telse\n\t\t\t\tdocument.exitPictureInPicture();\n\t\t});\n\t}\n\telse\n\t\tpipButton.classList.add('disabled');\n\n\tconst onPipWindowResize = debounce( () => audioMotion.setCanvasSize( pipWindow.width, pipWindow.height ) );\n\n\tpipVideo.addEventListener( 'enterpictureinpicture', event => {\n\t\tpipWindow = event.pictureInPictureWindow;\n\t\telContainer.classList.add('pip');\n\t\tpipButton.classList.add('active');\n\t\t// resize analyzer canvas for best quality\n\t\taudioMotion.setCanvasSize( pipWindow.height * elPIPRatio.value, pipWindow.height );\n\t\tpipWindow.addEventListener( 'resize', onPipWindowResize );\n\t});\n\n\tpipVideo.addEventListener( 'leavepictureinpicture', () => {\n\t\tpipWindow.removeEventListener( 'resize', onPipWindowResize );\n\t\tpipVideo.pause();\n\t\tcanvasTrack.stop();\n\t\tpipVideo.srcObject = canvasTrack = null;\n\t\tpipButton.classList.remove('active');\n\t\telContainer.classList.remove('pip');\n\t\taudioMotion.setCanvasSize(); // restore fluid canvas\n\t});\n\n\t// Show player controls in the PIP window\n\tconst mediaSession  = navigator.mediaSession;\n\tif ( mediaSession ) {\n\t\tmediaSession.setActionHandler( 'play', () => playPause() );\n\t\tmediaSession.setActionHandler( 'pause', () => playPause() );\n\t\tmediaSession.setActionHandler( 'previoustrack', () => playPreviousSong() );\n\t\tmediaSession.setActionHandler( 'nexttrack', () => playNextSong() );\n\t}\n\n\t// setup gradient editor controls\n\t$('#add-gradient').addEventListener('click', openGradientEditorNew);\n\t$('#btn-save-gradient').addEventListener( 'click', saveGradient );\n\t$('#btn-delete-gradient').addEventListener('click', deleteGradient );\n\n\n\t$('#new-gradient-bkgd').addEventListener('input', (e) => {\n\t\tcurrentGradient.bgColor = e.target.value;\n\t});\n\n\t$('#new-gradient-name').addEventListener('input', (e) => {\n\t\tcurrentGradient.name = e.target.value;\n\t});\n\n\t$('#new-gradient-horizontal').addEventListener('input', (e) => {\n\t\tcurrentGradient.dir = e.target.checked ? 'h' : undefined;\n\t})\n}\n\n/**\n * Shuffle the playlist\n */\nfunction shufflePlayQueue() {\n\n\tfor ( let i = queueLength() - 1; i > 0; i-- ) {\n\t\tconst randIndex = Math.random() * ( i + 1 ) | 0,\n\t\t\t  oldChild  = playlist.replaceChild( playlist.children[ randIndex ], playlist.children[ i ] );\n\t\tplaylist.insertBefore( oldChild, playlist.children[ randIndex ] );\n\t}\n\n\tplaySong(0);\n}\n\n/**\n * Player previous/next buttons\n */\nfunction skipTrack( back = false ) {\n\tconst status = back ? playPreviousSong() : playNextSong();\n\tif ( ! status )\n\t\tsetCanvasMsg( `Already at ${ back ? 'first' : 'last' } track` );\n}\n\n/**\n * Player stop button\n */\nfunction stop() {\n\taudioElement[ currAudio ].pause();\n\tsetCanvasMsg();\n\tloadSong( 0 );\n}\n\n/**\n * Store a playlist in localStorage\n */\nasync function storePlaylist( name, update = true ) {\n\n\tif ( queueLength() == 0 ) {\n\t\tnotie.alert({ text: 'Queue is empty!' });\n\t\treturn;\n\t}\n\n\tif ( ! name ) {\n\t\tnotie.input({\n\t\t\ttext: 'Give this playlist a name:',\n\t\t\tsubmitText: 'Save',\n\t\t\tsubmitCallback: value => {\n\t\t\t\tif ( value )\n\t\t\t\t\tstorePlaylist( value, false );\n\t\t\t},\n\t\t\tcancelCallback: () => {\n\t\t\t\tnotie.alert({ text: 'Canceled' });\n\t\t\t}\n\t\t});\n\t\treturn;\n\t}\n\n\tif ( name ) {\n\t\tlet safename = name;\n\n\t\tif ( ! update ) {\n\t\t\tsafename = safename.normalize('NFD').replace( /[\\u0300-\\u036f]/g, '' ); // remove accents\n\t\t\tsafename = safename.toLowerCase().replace( /[^a-z0-9]/g, '_' );\n\n\t\t\tconst playlists = await getStoredPlaylists() || {};\n\n\t\t\twhile ( playlists.hasOwnProperty( safename ) )\n\t\t\t\tsafename += '_1';\n\n\t\t\tplaylists[ safename ] = name;\n\n\t\t\tif ( useFileSystemAPI )\n\t\t\t\tawait set( KEY_PLAYLISTS, playlists );\n\t\t\telse\n\t\t\t\tsaveToStorage( KEY_PLAYLISTS, playlists );\n\n\t\t\tloadSavedPlaylists( safename );\n\t\t}\n\n\t\tlet songs = [];\n\n\t\tfor ( const item of playlist.childNodes )\n\t\t\tsongs.push( useFileSystemAPI ? { file: item.dataset.file, handle: item.handle } : item.dataset.file );\n\n\t\tconst key = PLAYLIST_PREFIX + safename;\n\n\t\tif ( useFileSystemAPI )\n\t\t\tawait set( key, songs );\n\t\telse\n\t\t\tsaveToStorage( key, songs );\n\n\t\tnotie.alert({ text: `Playlist saved!` });\n\t}\n}\n\n/**\n * Sync a queue item metadata with any audio elements loaded with the same file\n */\nfunction syncMetadataToAudioElements( source ) {\n\tfor ( const el of audioElement ) {\n\t\tif ( el.dataset.file == source.dataset.file )\n\t\t\taddMetadata( source, el ); // transfer metadata to audio element\n\t}\n}\n\n/**\n * Toggle display of song and settings information on canvas\n */\nfunction toggleInfo() {\n\tif ( canvasMsg.endTime < performance.now() )\n\t\tcanvasMsg.info = 0; // reset info flag if display time has ended\n\tif ( canvasMsg.info == 2 )\n\t\tsetCanvasMsg(); // if already showing all info, turn it off\n\telse // increase the information level (0 -> 1 -> 2) and reset the display timeout\n\t\tsetCanvasMsg( ( canvasMsg.info | 0 ) + 1, +elInfoTimeout.value || Infinity ); // NOTE: canvasMsg.info may be undefined\n}\n\n/**\n * Update the playlist shown to the user\n */\nfunction updatePlaylistUI() {\n\n\tconst current = playlist.querySelector('.current'),\n\t\t  newCurr = playlist.children[ playlistPos ];\n\n\tif ( current )\n\t\tcurrent.classList.remove('current');\n\n\tif ( newCurr ) {\n\t\tnewCurr.classList.add('current');\n\t\tnewCurr.scrollIntoViewIfNeeded();\n\t}\n}\n\n/**\n * Connect or disconnect audio output to the speakers\n */\nfunction toggleMute( mute ) {\n\tif ( mute !== undefined )\n\t\telMute.checked = mute;\n\telse\n\t\tmute = elMute.checked;\n\n\tif ( mute )\n\t\taudioMotion.disconnectOutput();\n\telse\n\t\taudioMotion.connectOutput();\n}\n\n/**\n * Update last used configuration\n */\nfunction updateLastConfig() {\n\tsaveToStorage( KEY_LAST_CONFIG, { ...getCurrentSettings(), volume: elVolume.dataset.value, balance: elBalance.dataset.value } );\n}\n\n/**\n * Update range elements value div\n */\nfunction updateRangeValue( el ) {\n\tconst elVal = el.previousElementSibling;\n\tif ( elVal && elVal.className == 'value' )\n\t\telVal.innerText = el.value;\n}\n\n\n/**\n *  MAIN FUNCTION\n * ------------------------------------------------------------------------------------------------\n */\n( async function() {\n\t// variables for on-screen info display\n\tlet baseSize, coverSize, centerPos, rightPos, topLine1, topLine2, bottomLine1, bottomLine2, bottomLine3, maxWidthTop, maxWidthBot, normalFont, largeFont;\n\n\t// Callback function to handle canvas size changes (onCanvasResize)\n\tconst showCanvasInfo = ( reason, instance ) => {\n\t\tlet msg;\n\n\t\t// resize OSD canvas\n\t\tconst dPR    = instance.pixelRatio,\n\t\t\t  width  = elOSD.width  = elContainer.clientWidth * dPR,\n\t\t\t  height = elOSD.height = elContainer.clientHeight * dPR;\n\n\t\tswitch ( reason ) {\n\t\t\tcase 'create':\n\t\t\t\tconsoleLog( `Display resolution: ${instance.fsWidth} x ${instance.fsHeight} px (pixelRatio: ${window.devicePixelRatio})` );\n\t\t\t\tmsg = 'Canvas created';\n\t\t\t\tbreak;\n\t\t\tcase 'lores':\n\t\t\t\tmsg = `Lo-res ${ instance.loRes ? 'ON' : 'OFF' } (pixelRatio = ${dPR})`;\n\t\t\t\tbreak;\n\t\t\tcase 'fschange':\n\t\t\t\tmsg = `${ instance.isFullscreen ? 'Enter' : 'Exit' }ed fullscreen`;\n\t\t\t\tbreak;\n\t\t\tcase 'resize':\n\t\t\t\tmsg = 'Window resized';\n\t\t\t\tbreak;\n\t\t\tcase 'user' :\n\t\t\t\tmsg = `${ isPIP() ? 'Resized for' : 'Closed' } PIP`;\n\t\t}\n\n\t\tconsoleLog( `${ msg || reason }. Canvas size is ${ instance.canvas.width } x ${ instance.canvas.height } px` );\n\n\t\t// recalculate variables used for info display\n\t\tbaseSize    = Math.min( width, height ) / 17; // ~64px for 1080px canvas\n\t\tcoverSize   = baseSize * 3;\t\t\t\t// cover image size\n\t\tcenterPos   = width / 2;\n\t\trightPos    = width - baseSize;\n\t\ttopLine1    = baseSize * 1.4;\t\t\t// gradient, mode & sensitivity status + informative messages\n\t\ttopLine2    = topLine1 * 1.8;\t\t\t// auto gradient, Randomize & repeat status\n\t\tmaxWidthTop = width / 3 - baseSize;\t\t// maximum width for messages shown at the top\n\t\tbottomLine1 = height - baseSize * 4;\t// artist name, codec/quality\n\t\tbottomLine2 = height - baseSize * 2.8;\t// song title\n\t\tbottomLine3 = height - baseSize * 1.6;\t// album title, time\n\t\tmaxWidthBot = width - baseSize * 7;\t\t// maximum width for artist and song name\n\n\t\tnormalFont  = `bold ${ baseSize * .7 }px sans-serif`;\n\t\tlargeFont   = `bold ${baseSize}px sans-serif`;\n\t}\n\n\t/**\n\t * Callback function to display on-screen messages (onCanvasDraw)\n\t *\n\t * Uses global object canvasMsg\n\t * canvasMsg = {\n\t * \t\tinfo     : <number>, // 1 = song info; 2 = song & settings info\n\t * \t\tendTime  : <number>, // timestamp (in milliseconds) up to when info should be displayed\n\t *      startTime: <number>, // initial timestamp (for fade-in control only)\n\t * \t\tfade     : <number>, // fade in/out time in seconds (negative number for fade-out)\n\t *\t\tmsg      : <string>, // custom message to be displayed at the top\n\t * \t\tmsgTimer : <number>  // timestamp (in milliseconds) up to when msg should be displayed\n\t * }\t                     // (custom messages always use a one second fade-out only)\n\t */\n\tconst displayCanvasMsg = ( instance, data ) => {\n\n\t\tconst audioEl    = audioElement[ currAudio ],\n\t\t\t  trackData  = audioEl.dataset,\n\t\t\t  remaining  = audioEl.duration - audioEl.currentTime,\n\t\t\t  endTimeout = +elEndTimeout.value,\n\t\t\t  bgOption   = elBackground.value[0],\n\t\t\t  bgImageFit = elBgImageFit.value,\n\t\t\t  noShadow   = isSwitchOn( elNoShadow ),\n\t\t\t  pixelRatio = audioMotion.pixelRatio,\n\t\t\t  { timestamp } = data;\n\n\t\t// if song is less than 100ms from the end, skip to the next track for improved gapless playback\n\t\tif ( remaining < .1 )\n\t\t\tplayNextSong( true );\n\n\t\t// set song info display at the end of the song\n\t\tif ( endTimeout > 0 && remaining <= endTimeout && isSwitchOn( elShowSong ) && timestamp > canvasMsg.endTime && isPlaying() )\n\t\t\tsetCanvasMsg( 1, remaining, 1 );\n\n\t\t// compute background image size for pulse and zoom in/out effects\n\t\tif (\n\t\t\t( bgImageFit == BGFIT_PULSE || bgImageFit == BGFIT_ZOOM_IN || bgImageFit == BGFIT_ZOOM_OUT ) &&\n\t\t\t( bgOption == BG_COVER || bgOption == BG_IMAGE )\n\t\t) {\n\t\t\tlet size;\n\n\t\t\tif ( bgImageFit == BGFIT_PULSE )\n\t\t\t\tsize = ( audioMotion.getEnergy() * 70 | 0 ) - 25;\n\t\t\telse {\n\t\t\t\tconst songProgress = audioEl.currentTime / audioEl.duration;\n\t\t\t\tsize = ( bgImageFit == BGFIT_ZOOM_IN ? songProgress : 1 - songProgress ) * 100;\n\t\t\t}\n\n\t\t\telContainer.style.backgroundSize = `auto ${ 100 + size }%`;\n\t\t}\n\n\t\telOSD.width |= 0; // clear OSD canvas\n\n\t\tconst { endTime, startTime, msgTimer, info, msg, fade } = canvasMsg;\n\n\t\tif ( timestamp > endTime && timestamp > msgTimer )\n\t\t\treturn; // nothing to display\n\n\t\t// helper function\n\t\tconst drawText = ( text, x, y, maxWidth ) => {\n\t\t\tif ( noShadow ) {\n\t\t\t\tcanvasCtx.strokeText( text, x, y, maxWidth );\n\t\t\t\tcanvasCtx.fillText( text, x, y, maxWidth );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tcanvasCtx.shadowOffsetX = canvasCtx.shadowOffsetY = 3 * pixelRatio;\n\t\t\t\tcanvasCtx.fillText( text, x, y, maxWidth );\n\t\t\t\tcanvasCtx.shadowOffsetX = canvasCtx.shadowOffsetY = 0;\n\t\t\t}\n\t\t}\n\n\t\tcanvasCtx.lineWidth = 4 * pixelRatio;\n\t\tcanvasCtx.lineJoin = 'round';\n\t\tcanvasCtx.font = normalFont;\n\t\tcanvasCtx.textAlign = 'center';\n\n\t\tcanvasCtx.fillStyle = '#fff';\n\t\tcanvasCtx.strokeStyle = canvasCtx.shadowColor = '#000';\n\n\t\t// Display custom message if we don't need to display info level 2\n\t\tif ( msgTimer > timestamp && ( timestamp > endTime || info != 2 ) ) {\n\t\t\tconst timeLeft = ( msgTimer - timestamp ) / 1000;\n\t\t\tcanvasCtx.globalAlpha = timeLeft > 1 ? 1 : timeLeft; // one second fade-out\n\t\t\tdrawText( canvasMsg.msg, centerPos, topLine1 );\n\t\t}\n\n\t\t// Display song and config info\n\t\tif ( endTime > timestamp ) {\n\t\t\tif ( fade < 0 ) {\n\t\t\t\t// fade-out\n\t\t\t\tconst timeLeft = ( endTime - timestamp ) / 1000;\n\t\t\t\tcanvasCtx.globalAlpha = timeLeft > -fade ? 1 : timeLeft / -fade;\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// fade-in - avoid negative timeElapsed when canvasMsg has been set in this same iteration (info at song end)\n\t\t\t\tconst timeElapsed = Math.max( 0, ( timestamp - startTime ) / 1000 );\n\t\t\t\tcanvasCtx.globalAlpha = timeElapsed > fade ? 1 : timeElapsed / fade;\n\t\t\t}\n\n\t\t\t// display additional information (level 2) at the top\n\t\t\tif ( canvasMsg.info == 2 ) {\n\t\t\t\tdrawText( getSelectedGradients(), centerPos, topLine1, maxWidthTop );\n\n\t\t\t\tcanvasCtx.textAlign = 'left';\n\t\t\t\tdrawText( getText( elMode ), baseSize, topLine1, maxWidthTop );\n\t\t\t\tdrawText( `Randomize: ${ getText( elRandomMode ) }`, baseSize, topLine2, maxWidthTop );\n\n\t\t\t\tcanvasCtx.textAlign = 'right';\n\t\t\t\tdrawText( getText( elSensitivity ).toUpperCase() + ' sensitivity', rightPos, topLine1, maxWidthTop );\n\t\t\t\tdrawText( `Repeat is ${ onOff( elRepeat ) }`, rightPos, topLine2, maxWidthTop );\n\t\t\t}\n\n\t\t\tif ( isMicSource ) {\n\t\t\t\tcanvasCtx.textAlign = 'left';\n\t\t\t\tcanvasCtx.font = largeFont;\n\t\t\t\tdrawText( 'MIC source', baseSize, bottomLine2, maxWidthBot );\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// codec and quality\n\t\t\t\tcanvasCtx.textAlign = 'right';\n\t\t\t\tdrawText( trackData.codec, rightPos, bottomLine1 );\n\t\t\t\tdrawText( trackData.quality, rightPos, bottomLine1 + baseSize );\n\n\t\t\t\t// song/queue count\n\t\t\t\tconst totalSongs = queueLength();\n\t\t\t\tif ( totalSongs && elShowCount.checked ) {\n\t\t\t\t\tconst padDigits = ( '' + totalSongs ).length,\n\t\t\t\t\t\t  counter   = `Track ${ ( '' + ( playlistPos + 1 ) ).padStart( padDigits, '0' ) } of ${ totalSongs }`;\n\t\t\t\t\tdrawText( counter, rightPos, bottomLine1 - baseSize );\n\t\t\t\t}\n\n\t\t\t\t// artist name\n\t\t\t\tcanvasCtx.textAlign = 'left';\n\t\t\t\tdrawText( trackData.artist.toUpperCase(), baseSize, bottomLine1, maxWidthBot );\n\n\t\t\t\t// album title\n\t\t\t\tcanvasCtx.font = `italic ${normalFont}`;\n\t\t\t\tdrawText( trackData.album, baseSize, bottomLine3, maxWidthBot );\n\n\t\t\t\t// song title\n\t\t\t\tcanvasCtx.font = largeFont;\n\t\t\t\tdrawText( audioEl.src ? trackData.title : 'No song loaded', baseSize, bottomLine2, maxWidthBot );\n\n\t\t\t\t// time\n\t\t\t\tif ( audioEl.duration || trackData.duration ) {\n\t\t\t\t\tif ( ! trackData.duration ) {\n\t\t\t\t\t\ttrackData.duration = secondsToTime( audioEl.duration );\n\n\t\t\t\t\t\tif ( playlist.children[ playlistPos ] )\n\t\t\t\t\t\t\tplaylist.children[ playlistPos ].dataset.duration = trackData.duration;\n\t\t\t\t\t}\n\t\t\t\t\tcanvasCtx.textAlign = 'right';\n\n\t\t\t\t\tdrawText( secondsToTime( audioEl.currentTime ) + ' / ' + trackData.duration, rightPos, bottomLine3 );\n\t\t\t\t}\n\n\t\t\t\t// cover image\n\t\t\t\tif ( coverImage.width && elShowCover.checked )\n\t\t\t\t\tcanvasCtx.drawImage( coverImage, baseSize, bottomLine1 - coverSize * 1.3, coverSize, coverSize );\n\t\t\t}\n\t\t}\n\t}\n\n\t// event handlers for audio elements\n\n\tconst audioOnEnded = _ => {\n\t\tif ( ! playNextSong( true ) ) {\n\t\t\tloadSong( 0 );\n\t\t\tsetCanvasMsg( 'Queue ended', 10 );\n\t\t\tif ( isPIP() )\n\t\t\t\tpipVideo.pause();\n\t\t}\n\t}\n\n\tconst audioOnError = e => {\n\t\tif ( e.target.attributes.src )\n\t\t\tconsoleLog( 'Error loading ' + e.target.src, true );\n\t}\n\n\tconst audioOnPlay = _ => {\n\t\tif ( ! audioElement[ currAudio ].attributes.src ) {\n\t\t\tplaySong( playlistPos );\n\t\t\treturn;\n\t\t}\n\n\t\tif ( isPIP() )\n\t\t\tpipVideo.play();\n\n\t\tif ( audioElement[ currAudio ].currentTime < .1 && elRandomMode.value == '1' )\n\t\t\trandomizeSettings( true );\n\n\t\tif ( isSwitchOn( elShowSong ) ) {\n\t\t\tconst timeout = +elTrackTimeout.value || Infinity;\n\t\t\tsetCanvasMsg( 1, timeout );\n\t\t}\n\t}\n\n\t// BEGIN INITIALIZATION -----------------------------------------------------------------------\n\n\t// Log all JS errors to our UI console\n\twindow.addEventListener( 'error', event => consoleLog( `Unexpected ${event.error}`, true ) );\n\n\tlet initDone = false;\n\n\tconsoleLog( `audioMotion v${VERSION} initializing...` );\n\tconsoleLog( `User agent: ${navigator.userAgent}` );\n\n\t$('#version').innerText = VERSION;\n\n\t// Load preferences from localStorage\n\tif ( isElectron )\n\t\tconsoleLog( `Reading user preferences from ${ await electron.api('storage-info') }` );\n\tconst isLastSession = await loadPreferences();\n\n\t// Initialize play queue and set event listeners\n\tplaylist = $('#playlist');\n\tplaylist.addEventListener( 'dblclick', e => {\n\t\tif ( e.target && e.target.dataset.file ) {\n\t\t\tplaySong( getIndex( e.target ) );\n\t\t\te.target.classList.remove( 'selected', 'sortable-chosen' );\n\t\t}\n\t});\n\tplaylistPos = 0;\n\n\t// Add drag-n-drop functionality to the play queue\n\tSortable.create( playlist, {\n\t\tanimation: 150,\n\t\tgroup: {\n\t\t\tname: 'filelist',\n\t\t\tpull: false,\n\t\t\tput: true\n\t\t},\n\t\tmultiDrag: true,\n\t\tmultiDragKey: 'ctrl',\n\t\tselectedClass: 'selected',\n\t\tonEnd: evt => {\n\t\t\tplaylistPos = getIndex( playlist.querySelector('.current') );\n\t\t\tif ( evt.newIndex == 0 && ! isPlaying() )\n\t\t\t\tloadSong(0);\n\t\t\tloadNextSong();\n\t\t}\n\t});\n\n\t// Create audioMotion analyzer\n\n\tconsoleLog( `Instantiating audioMotion-analyzer v${ AudioMotionAnalyzer.version }` );\n\n\taudioMotion = new AudioMotionAnalyzer( elAnalyzer, {\n\t\tfsElement: elContainer,\n\t\tonCanvasDraw: displayCanvasMsg,\n\t\tonCanvasResize: showCanvasInfo\n\t});\n\n\tconst audioCtx = audioMotion.audioCtx;\n\n\t// create panNode for balance control - NOTE: no support on Safari < 14.1\n\tif ( audioCtx.createStereoPanner ) {\n\t\tpanNode = audioCtx.createStereoPanner();\n\t\taudioMotion.connectInput( panNode );\n\t}\n\n\t// Initialize and connect audio elements\n\n\tcurrAudio = 0;\n\tnextAudio = 1;\n\n\tfor ( const i of [0,1] ) {\n\t\taudioElement[ i ] = $( `#player${i}` );\n\t\tclearAudioElement( i );\n\t\taudioElement[ i ].addEventListener( 'play', audioOnPlay );\n\t\taudioElement[ i ].addEventListener( 'ended', audioOnEnded );\n\t\taudioElement[ i ].addEventListener( 'error', audioOnError );\n\n\t\tif ( panNode )\n\t\t\taudioCtx.createMediaElementSource( audioElement[ i ] ).connect( panNode );\n\t\telse\n\t\t\taudioMotion.connectInput( audioElement[ i ] );\n\t}\n\n\t// Setup configuration panel\n\tdoConfigPanel();\n\n\t// Populate combo boxes\n\n\tpopulateSelect( elMode, modeOptions );\n\n\tfor ( const i of [16,20,25,30,40,50,60,100,250,500,1000,2000] )\n\t\telRangeMin[ elRangeMin.options.length ] = new Option( ( i >= 1000 ? ( i / 1000 ) + 'k' : i ) + 'Hz', i );\n\n\tfor ( const i of [1000,2000,4000,8000,12000,16000,20000,22000] )\n\t\telRangeMax[ elRangeMax.options.length ] = new Option( ( i / 1000 ) + 'kHz', i );\n\n\tpopulateCustomRadio( elChnLayout, channelLayoutOptions );\n\n\tpopulateCustomRadio( elSensitivity, [\n\t\t[ '0', 'Low'    ],\n\t\t[ '1', 'Normal' ],\n\t\t[ '2', 'High'   ]\n\t]);\n\n\tpopulateCustomRadio( elBarSpace, [\n\t\t[ '1.5',  'Min' ],\n\t\t[ '0.1',  '10' ],\n\t\t[ '0.25', '25' ],\n\t\t[ '0.5',  '50' ],\n\t\t[ '0.75', '75' ]\n\t]);\n\n\tpopulateSelect( elRandomMode, [\n\t\t[ '0',   'OFF'             ],\n\t\t[ '1',   'On track change' ],\n\t\t[ '2',   '5 seconds'       ],\n\t\t[ '6',   '15 seconds'      ],\n\t\t[ '12',  '30 seconds'      ],\n\t\t[ '24',  '1 minute'        ],\n\t\t[ '48',  '2 minutes'       ],\n\t\t[ '120', '5 minutes'       ]\n\t]);\n\n\tpopulateCustomRadio( elReflex, [\n\t\t[ '0', 'Off'  ],\n\t\t[ '1', 'On'   ],\n\t\t[ '2', 'Full' ]\n\t]);\n\n\tpopulateSelect(\telBackground, [\n\t\t[ BG_COVER,   'Album cover'      ],\n\t\t[ BG_BLACK,   'Black'            ],\n\t\t[ BG_DEFAULT, 'Gradient default' ]\n\t]);\n\n\tpopulateSelect( elBgImageFit, bgFitOptions );\n\n\tpopulateCustomRadio( elMirror, [\n\t\t[ '-1', 'Left'  ],\n\t\t[ '0',  'Off'   ],\n\t\t[ '1',  'Right' ]\n\t]);\n\n\tpopulateCustomRadio( elFreqScale, [\n\t\t[ SCALE_BARK,   'Bark' ],\n\t\t[ SCALE_LINEAR, 'Lin'  ],\n\t\t[ SCALE_LOG,    'Log'  ],\n\t\t[ SCALE_MEL,    'Mel'  ]\n\t]);\n\n\tpopulateCustomRadio( elWeighting, [\n\t\t[ WEIGHT_NONE, 'OFF' ],\n\t\t[ WEIGHT_A,    'A'   ],\n\t\t[ WEIGHT_B,    'B'   ],\n\t\t[ WEIGHT_C,    'C'   ],\n\t\t[ WEIGHT_D,    'D'   ],\n\t\t[ WEIGHT_468,  '468' ],\n\t]);\n\n\tpopulateCustomRadio( elColorMode, [\n\t\t[ COLOR_GRADIENT, 'Gradient'  ],\n\t\t[ COLOR_INDEX,    'Index' ],\n\t\t[ COLOR_LEVEL,    'Level' ]\n\t]);\n\n\t// Check the backgrounds directory for additional background options (images and videos)\n\tconst bgDirPromise = fetch( BG_DIRECTORY )\n\t\t.then( response => response.text() )\n\t\t.then( content => {\n\t\t\tconst imageExtensions = /\\.(jpg|jpeg|webp|avif|png|gif|bmp)$/i,\n\t\t\t\t  videoExtensions = /\\.(mp4|webm|mov)$/i;\n\n\t\t\tfor ( const { file } of fileExplorer.parseWebIndex( content ) ) {\n\t\t\t\tif ( imageExtensions.test( file ) )\n\t\t\t\t\tbgImages.push( file );\n\t\t\t\telse if ( videoExtensions.test( file ) )\n\t\t\t\t\tbgVideos.push( file );\n\t\t\t}\n\n\t\t\tconst imageCount = bgImages.length,\n\t\t\t\t  videoCount = bgVideos.length,\n\t\t\t\t  bgOptions  = bgImages.map( fn => [ BG_IMAGE + fn, '🖼️ ' + parsePath( fn ).baseName ] ).concat(\n\t\t\t\t\t\t\t   bgVideos.map( fn => [ BG_VIDEO + fn, '🎬 ' + parsePath( fn ).baseName ] )\n\t\t\t\t\t\t\t   ).slice( 0, MAX_BG_MEDIA_FILES );\n\n\t\t\tif ( videoCount )\n\t\t\t\tbgOptions.splice( 0, 0, [ BG_VIDEO, 'Random video' ] );\n\n\t\t\tif ( imageCount )\n\t\t\t\tbgOptions.splice( 0, 0, [ BG_IMAGE, 'Random image' ] );\n\n\t\t\tconsoleLog( 'Found ' + ( imageCount + videoCount == 0 ? 'no media' : imageCount + ' image files and ' + videoCount + ' video' ) + ' files in the backgrounds folder' );\n\n\t\t\tpopulateSelect( elBackground, bgOptions, true ); // add more background options\n\t\t})\n\t\t.catch( e => {} ); // fail silently\n\n\tsetRangeAtts( elBgImageDim, 0.1, 1, .1 );\n\tsetRangeAtts( elLineWidth, 1, 3, .5 );\n\tsetRangeAtts( elFillAlpha, 0, .5, .1 );\n\tsetRangeAtts( elSpin, 0, 3, 1 );\n\n\t// Clear canvas messages\n\tsetCanvasMsg();\n\n\t// Register custom gradients\n\tObject.keys( gradients ).forEach( key => {\n\t\tconst { bgColor, dir, colorStops } = gradients[ key ];\n\t\tif ( colorStops )\n\t\t\taudioMotion.registerGradient( key, { bgColor, dir, colorStops } );\n\t});\n\tpopulateGradients();\n\n\t// Set audio source to built-in player\n\tsetSource();\n\n\t// Check if `mode` URL parameter is used to request local or server filesystem\n\tconst urlParams = new URL( document.location ).searchParams,\n\t\t  userMode  = urlParams.get('mode');\n\n\tlet forceFileSystemAPI = userMode == 'local' ? true : ( userMode == 'server' ? false : await loadFromStorage( KEY_FORCE_FS_API ) );\n\n\tif ( forceFileSystemAPI === null )\n\t\tforceFileSystemAPI = true; // attempts to use the File System API by default\n\n\t// Initialize file explorer\n\tconst fileExplorerPromise = fileExplorer.create(\n\t\t$('#file_explorer'),\n\t\t{\n\t\t\tonDblClick: ( fileObject, event ) => {\n\t\t\t\taddBatchToPlayQueue( [ fileObject ], true );\n\t\t\t\tevent.target.classList.remove( 'selected', 'sortable-chosen' );\n\t\t\t},\n\t\t\tonEnterDir: path => {\n\t\t\t\tif ( elSaveDir.checked && initDone ) // avoid saving the path during initialization\n\t\t\t\t\tsaveLastDir( path );\n\t\t\t},\n\t\t\tforceFileSystemAPI,\n\t\t\tlastDir: await get( KEY_LAST_DIR )\n\t\t}\n\t).then( status => {\n\t\t// set global variables\n\t\tserverMode       = status.serverMode;\n\t\thasServerMedia   = status.hasServerMedia;\n\t\tuseFileSystemAPI = status.useFileSystemAPI;\n\n\t\tconst { filelist, serverSignature } = status;\n\n\t\tif ( serverMode != SERVER_FILE )\n\t\t\tconsoleLog( `${ serverSignature } detected at ${ URL_ORIGIN }` );\n\t\tif ( ! hasServerMedia )\n\t\t\tconsoleLog( `${ serverMode == SERVER_FILE ? 'No server found' : 'Cannot access music directory on server' }`, true );\n\t\tif ( useFileSystemAPI )\n\t\t\tconsoleLog( 'Accessing files from local device via File System Access API.' );\n\t\tif ( ! supportsFileSystemAPI )\n\t\t\tconsoleLog( 'No browser support for File System Access API. Cannot access files from local device.', forceFileSystemAPI );\n\n\t\tif ( ! isElectron )\n\t\t\tsaveToStorage( KEY_FORCE_FS_API, forceFileSystemAPI && supportsFileSystemAPI );\n\n\t\t// Load saved playlists\n\t\tloadSavedPlaylists();\n\n\t\t// initialize drag-and-drop in the file explorer\n\t\tif ( isElectron || useFileSystemAPI || hasServerMedia ) {\n\t\t\tSortable.create( filelist, {\n\t\t\t\tanimation: 150,\n\t\t\t\tdraggable: '[data-type=\"file\"], [data-type=\"list\"]',\n\t\t\t\tgroup: {\n\t\t\t\t\tname: 'filelist',\n\t\t\t\t\tpull: 'clone',\n\t\t\t\t\tput: false\n\t\t\t\t},\n\t\t\t\tmultiDrag: true,\n\t\t\t\tmultiDragKey: 'ctrl',\n\t\t\t\tselectedClass: 'selected',\n\t\t\t\tsort: false,\n\t\t\t\tonEnd: evt => {\n\t\t\t\t\tif ( evt.to.id == 'playlist') {\n\t\t\t\t\t\tlet items = evt.items.length ? evt.items : [ evt.item ];\n\t\t\t\t\t\titems.forEach( item => {\n\t\t\t\t\t\t\taddToPlayQueue( { file: fileExplorer.makePath( item.dataset.path ), handle: item.handle } );\n\t\t\t\t\t\t\titem.remove();\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\t// Set UI event listeners\n\t\tsetUIEventListeners();\n\t});\n\n\t// Add events listeners for keyboard controls\n\twindow.addEventListener( 'keydown', keyboardControls );\n\twindow.addEventListener( 'keyup', keyboardControls );\n\n\t// notie options\n\tnotie.setOptions({\n\t\tpositions: { alert: 'bottom' }\n\t});\n\n\t// Wait for all async operations to finish before loading the last used settings\n\tPromise.all( [ bgDirPromise, fileExplorerPromise ] ).then( async () => {\n\t\tconsoleLog( `Loading ${ isLastSession ? 'last session' : 'default' } settings` );\n\t\tloadPreset( 'last', false, true );\n\n\t\tif ( ! useFileSystemAPI )\n\t\t\tfileExplorer.setPath( await loadFromStorage( KEY_LAST_DIR ) );\n\n\t\tconsoleLog( `AudioContext sample rate is ${audioCtx.sampleRate}Hz; Total latency is ${ ( ( audioCtx.outputLatency || 0 ) + audioCtx.baseLatency ) * 1e3 | 0 }ms` );\n\t\tconsoleLog( 'Initialization complete!' );\n\t\tinitDone = true;\n\t});\n\n})();\n","/**\r\n * scrollIntoViewIfNeeded() polyfill\r\n * by Hubert Sablonnière - https://gist.github.com/hsablonniere/2581101\r\n */\r\nif (!Element.prototype.scrollIntoViewIfNeeded) {\r\n\tElement.prototype.scrollIntoViewIfNeeded = function (centerIfNeeded) {\r\n\t\tcenterIfNeeded = arguments.length === 0 ? true : !!centerIfNeeded;\r\n\r\n\t\tvar parent = this.parentNode,\r\n\t\t\tparentComputedStyle = window.getComputedStyle(parent, null),\r\n\t\t\tparentBorderTopWidth = parseInt(parentComputedStyle.getPropertyValue('border-top-width')),\r\n\t\t\tparentBorderLeftWidth = parseInt(parentComputedStyle.getPropertyValue('border-left-width')),\r\n\t\t\toverTop = this.offsetTop - parent.offsetTop < parent.scrollTop,\r\n\t\t\toverBottom = (this.offsetTop - parent.offsetTop + this.clientHeight - parentBorderTopWidth) > (parent.scrollTop + parent.clientHeight),\r\n\t\t\toverLeft = this.offsetLeft - parent.offsetLeft < parent.scrollLeft,\r\n\t\t\toverRight = (this.offsetLeft - parent.offsetLeft + this.clientWidth - parentBorderLeftWidth) > (parent.scrollLeft + parent.clientWidth),\r\n\t\t\talignWithTop = overTop && !overBottom;\r\n\r\n\t\tif ((overTop || overBottom) && centerIfNeeded) {\r\n\t\t\tparent.scrollTop = this.offsetTop - parent.offsetTop - parent.clientHeight / 2 - parentBorderTopWidth + this.clientHeight / 2;\r\n\t\t}\r\n\r\n\t\tif ((overLeft || overRight) && centerIfNeeded) {\r\n\t\t\tparent.scrollLeft = this.offsetLeft - parent.offsetLeft - parent.clientWidth / 2 - parentBorderLeftWidth + this.clientWidth / 2;\r\n\t\t}\r\n\r\n\t\tif ((overTop || overBottom || overLeft || overRight) && !centerIfNeeded) {\r\n\t\t\tthis.scrollIntoView(alignWithTop);\r\n\t\t}\r\n\t};\r\n}\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t179: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkaudioMotion\"] = self[\"webpackChunkaudioMotion\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [216], () => (__webpack_require__(2301)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["deferred","URL_ORIGIN","location","origin","pathname","isElectron","window","isWindows","test","navigator","userAgent","supportsFileSystemAPI","showDirectoryPicker","openFolderMsg","openLastFolderMsg","noFileServerMsg","MODE_WEB","currentDirHandle","dblClickCallback","enterDirCallback","lastDir","ui_path","ui_files","serverMode","currentPath","mounts","needsPermission","nodeServer","hasServerMedia","useFileSystemAPI","updateUI","content","scrollTop","innerHTML","style","backgroundImage","addListItem","item","type","li","document","createElement","fileName","name","dataset","match","path","innerText","handle","append","setFileExplorerBgImage","src","length","forEach","dir","index","mount","cover","dirs","files","file","getFile","then","fileBlob","imgsrc","URL","createObjectURL","makePath","enterDir","target","prev","url","pop","parent","push","Promise","async","parseContent","parseDirectory","resolve","p","entries","fetch","response","status","json","text","catch","noPrefix","fullPath","replace","getFolderContents","selector","contents","querySelectorAll","entry","includes","getHandle","workPath","targetPath","split","dirName","shift","getDirectoryHandle","getFileHandle","parseWebIndex","listing","uri","imageExtensions","audioExtensions","imgs","findImg","arr","pattern","regexp","RegExp","source","find","el","FileSystemDirectoryHandle","FileSystemFileHandle","substring","customSort","a","b","isObject","Intl","Collator","compare","sort","setPath","savedPath","finalDir","success","ROUTE_FILE","ROUTE_COVER","ROUTE_SAVE","VERSION","BG_DIRECTORY","MAX_METADATA_REQUESTS","MAX_QUEUED_SONGS","BG_DEFAULT","BG_BLACK","BG_COVER","BG_IMAGE","BG_VIDEO","BGFIT_ADJUST","BGFIT_CENTER","BGFIT_REPEAT","BGFIT_PULSE","BGFIT_WARP","BGFIT_WARP_ANI","BGFIT_WARP_ROT","DATASET_TEMPLATE","album","artist","codec","duration","quality","title","CHANNEL_COMBINED","CHANNEL_SINGLE","COLOR_GRADIENT","COLOR_INDEX","COLOR_LEVEL","MODE_AREA","MODE_LINE","REFLEX_ON","REFLEX_FULL","RND_ALPHA","RND_BACKGROUND","RND_BARSPACING","RND_BGIMAGEFIT","RND_CHNLAYOUT","RND_COLORMODE","RND_FILLOPACITY","RND_GRADIENT","RND_LEDS","RND_LINEWIDTH","RND_LUMI","RND_MIRROR","RND_MODE","RND_OUTLINE","RND_PEAKS","RND_PRESETS","RND_RADIAL","RND_SPIN","RND_REFLEX","RND_ROUND","RND_SPLIT","SERVER_CUSTOM","SERVER_FILE","SCALE_BARK","SCALE_LOG","WEIGHT_D","KEY_CUSTOM_GRADS","KEY_CUSTOM_PRESET","KEY_DISABLED_BGFIT","KEY_DISABLED_GRADS","KEY_DISABLED_MODES","KEY_DISABLED_PROPS","KEY_DISPLAY_OPTS","KEY_FORCE_FS_API","KEY_GENERAL_OPTS","KEY_LAST_CONFIG","KEY_LAST_DIR","KEY_PLAYLISTS","KEY_SENSITIVITY","PLAYLIST_PREFIX","PRESET_NONAME","ERR_ABORT","$","querySelector","bind","$$","elAlphaBars","elAnalyzer","elAnsiBands","elBackground","elBalance","elBarSpace","elBgImageDim","elBgImageFit","elChnLayout","elColorMode","elContainer","elDim","elEndTimeout","elFFTsize","elFillAlpha","elFPS","elFreqScale","elFsHeight","elGradient","elGradientRight","elInfoTimeout","elLedDisplay","elLinearAmpl","elLineWidth","elLinkGrads","elLoadedPlist","elLoRes","elLumiBars","elMaxFPS","elMirror","elMode","elMute","elNoShadow","elNoteLabels","elOutline","elOSD","elPIPRatio","elPlaylists","elRadial","elRandomMode","elRangeMax","elRangeMin","elReflex","elRepeat","elRoundBars","elSaveDir","elScaleX","elScaleY","elSensitivity","elShowCount","elShowCover","elShowPeaks","elShowSong","elSmoothing","elSource","elSpin","elSplitGrad","elTrackTimeout","elVideo","elVolume","elWarp","elWeighting","presets","key","options","randomMode","alphaBars","ansiBands","background","barSpace","bgImageDim","bgImageFit","channelLayout","colorMode","freqMax","freqMin","freqScale","gradient","ledDisplay","linearAmpl","lumiBars","mirror","mode","noteLabels","outlineBars","radial","reflex","roundBars","showPeaks","showScaleX","showScaleY","showSong","splitGrad","weighting","fillAlpha","gradientRight","lineWidth","linkGrads","spin","balance","loRes","noShadow","repeat","sensitivity","showFPS","volume","gradients","apple","colorStops","pos","color","disabled","aurora","bgColor","borealis","candy","classic","cool","dusk","miami","orient","outrun","pacific","prism","prism_old","rainbow","rainbow_old","shahabi","summer","sunset","tiedye","modeOptions","value","channelLayoutOptions","randomProperties","sensitivityDefaults","min","max","boost","infoDisplayDefaults","info","track","end","covers","count","bgFitOptions","generalOptionsElements","generalOptionsDefaults","fftSize","fsHeight","maxFPS","pipRatio","saveDir","smoothing","maxFpsOptions","pipRatioOptions","audioMotion","canvasMsg","currAudio","fastSearchTimeout","isMicSource","micStream","nextAudio","panNode","playlist","playlistPos","randomModeTimer","userPresets","wasMuted","audioElement","bgImages","bgVideos","currentGradient","folderImages","isFastSearch","overwritePreset","skipping","waitingMetadata","canvasCtx","getContext","coverImage","Image","pipVideo","decodeSlashes","osNative","encodeSlashes","fixFloating","Math","round","getIndex","node","i","previousElementSibling","getText","isCustomRadio","option","textContent","selectedIndex","getControlValue","elements","prop","undefined","active","getCurrentSettings","_","getPresetIndex","findIndex","getPreset","getPresetName","getSelectedGradients","isDual","isSwitchOn","getStoredPlaylists","loadFromStorage","getUserPresets","map","isEmpty","isBlob","startsWith","tagName","isExternalURL","obj","Object","keys","isPIP","classList","contains","isPlaying","audioEl","currentTime","paused","ended","normalizeSlashes","onOff","parsePath","removeServerEncoding","lastSlash","lastIndexOf","slice","lastDot","baseName","extension","toLowerCase","parseTrackName","separator","secondsToTime","queryFile","queueLength","children","randomInt","n","random","saveLastDir","saveToStorage","secs","Infinity","str","lead","setRangeAtts","element","step","addBatchToPlayQueue","autoplay","promises","addToPlayQueue","all","added","total","reduce","sum","val","time","addMetadata","metadata","trackData","sourceData","common","format","assign","year","container","bitsPerSample","sampleRate","bitrate","codecProfile","picture","blob","Blob","data","setCurrentCover","addSongToPlayQueue","fileObject","ext","newEl","toUpperCase","appendChild","retrieve","retrieveMetadata","loadSong","loadNextSong","ret","loadPlaylist","playSong","changeBalance","incr","newVal","setBalance","setCanvasMsg","abs","updateLastConfig","changeFsHeight","setProperty","changeVolume","setVolume","clearAudioElement","loadAudioSource","load","consoleLog","msg","error","clear","dt","Date","toLocaleTimeString","hour12","String","getMilliseconds","padStart","add","scrollHeight","cycleElement","idx","Array","from","checked","deleteChildren","firstChild","removeChild","deleteGradient","filter","populateGradients","populateEnabledGradients","savePreferences","href","eraseUserPreset","force","userPresetText","currentName","submitText","submitCallback","cancelCallback","fastSearch","newPos","scheduleFastSearch","finishFastSearch","clearTimeout","fullscreen","exitPictureInPicture","toggleFullscreen","activeElement","blur","keyboardControls","event","code","altKey","ctrlKey","preventDefault","isShiftKey","shiftKey","randomizeSettings","settings","saveUserPreset","loadPreset","e","revokeBlobURL","remove","current","playPause","skipTrack","bgOption","click","toggleInfo","shufflePlayQueue","scale","cycleScale","newSource","oldSource","revokeObjectURL","removeAttribute","loadFileBlob","playIt","onloadeddata","play","JSON","parse","electron","api","localStorage","getItem","next","song","requestPermission","resolveAddedSongs","parsePlaylistContent","songInfo","setLoadedPlaylist","line","charAt","trim","list","isArray","alert","init","keepRandomize","isUserPreset","thisPreset","defaults","stereo","updateRangeValue","setOptions","frequencyScale","ledBars","linearAmplitude","maxFreq","minFreq","spinSpeed","splitGradient","weightingFilter","loadSavedPlaylists","keyName","Option","selected","playlists","isLocal","finish","updatePlaylistUI","openGradientEditorNew","modifier","some","renderGradientEditor","display","playNextSong","err","pause","playPreviousSong","populateCustomRadio","id","button","label","htmlFor","elEnabledGradients","addEventListener","acc","grad","gradientKey","Error","dest","stop","loadGradientIntoCurrentGradient","getAttribute","populateSelect","keep","oldValue","isEnabled","randomizeControl","validate","attempts","items","props","validIndexes","table","tableLabels","cloneNode","template","colorPicker","colorValue","colorStop","addColorButton","removeColorButton","parseFloat","splice","lastPos","idealColorPos","setAttribute","renderColorRow","queueItem","consumeMetadata","syncMetadataToAudioElements","urlToFetch","imageUrl","dirContents","getFolderCover","processNext","finally","skipPostHeaders","saveGradient","registerGradient","savePlayqueueToServer","update","childNodes","method","headers","body","stringify","getDisabledItems","customGradients","sensitivityPresets","displayOptions","generalOptions","setItem","isFullscreen","setTimeout","confirmTimeout","maxlength","newName","setBackgroundImage","documentElement","pan","log10","sign","transform","timer","now","performance","targetTime","startTime","endTime","fade","msgTimer","setGeneralOptions","setInfoOptions","elems","save","toggleGradients","isOverlay","filename","overlay","showBgColor","decodeURIComponent","endsWith","encodeURIComponent","bgFit","isWarp","toggle","backgroundSize","isLumiBars","height","setFreqRange","width","clearInterval","setInterval","reflexRatio","reflexAlpha","removeItem","setSensitivity","linearBoost","setSource","mediaDevices","getUserMedia","audio","stream","audioCtx","createMediaStreamSource","toggleMute","connectInput","disconnectInput","mediaStream","getTracks","setUIEventListeners","elToggleSettings","elToggleConsole","wheelTimer","btn","deltaY","choices","handler","userChoices","storePlaylist","hasChildNodes","clearPlayQueue","deletePlaylist","btnToggleFS","btnAddSelected","btnAddFolder","uploadBtn","canvasTrack","pipWindow","parentElement","loadLocalFile","pipButton","pictureInPictureEnabled","pictureInPictureElement","canvasStream","canvas","captureStream","muted","srcObject","requestPictureInPicture","onPipWindowResize","func","timeout","args","apply","this","debounce","setCanvasSize","pictureInPictureWindow","removeEventListener","mediaSession","setActionHandler","randIndex","oldChild","replaceChild","insertBefore","back","safename","normalize","hasOwnProperty","songs","newCurr","scrollIntoViewIfNeeded","mute","disconnectOutput","connectOutput","elVal","className","baseSize","coverSize","centerPos","rightPos","topLine1","topLine2","bottomLine1","bottomLine2","bottomLine3","maxWidthTop","maxWidthBot","normalFont","largeFont","audioOnEnded","audioOnError","attributes","audioOnPlay","initDone","isLastSession","parseDisabled","optionList","opt","lastConfig","setPreset","elMinSens","elMaxSens","elLinearBoost","preset","loadPreferences","create","animation","group","pull","put","multiDrag","multiDragKey","selectedClass","onEnd","evt","newIndex","version","fsElement","onCanvasDraw","instance","remaining","endTimeout","pixelRatio","timestamp","size","getEnergy","songProgress","drawText","x","y","maxWidth","strokeText","fillText","shadowOffsetX","shadowOffsetY","lineJoin","font","textAlign","fillStyle","strokeStyle","shadowColor","timeLeft","globalAlpha","timeElapsed","totalSongs","drawImage","onCanvasResize","reason","dPR","clientWidth","clientHeight","fsWidth","devicePixelRatio","createStereoPanner","createMediaElementSource","connect","buildOptions","cssClass","cfgKey","elProperties","field","isValid","doConfigPanel","bgDirPromise","videoExtensions","imageCount","videoCount","bgOptions","fn","concat","userMode","searchParams","get","forceFileSystemAPI","fileExplorerPromise","startUpTimer","nodeName","depth","resetPath","startIn","onDblClick","onEnterDir","homeDir","homePath","getHomePath","rootPath","filelist","serverSignature","draggable","to","positions","outputLatency","baseLatency","Element","prototype","centerIfNeeded","arguments","parentNode","parentComputedStyle","getComputedStyle","parentBorderTopWidth","parseInt","getPropertyValue","parentBorderLeftWidth","overTop","offsetTop","overBottom","overLeft","offsetLeft","scrollLeft","overRight","alignWithTop","scrollIntoView","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","call","m","O","result","chunkIds","priority","notFulfilled","fulfilled","j","every","r","getter","__esModule","d","definition","o","defineProperty","enumerable","g","globalThis","Function","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","self","__webpack_exports__"],"sourceRoot":""}